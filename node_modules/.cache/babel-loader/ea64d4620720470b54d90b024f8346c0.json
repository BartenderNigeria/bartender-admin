{"ast":null,"code":"var _jsxFileName = \"/Users/user/Bartender/bartender/client/src/subcomponents/EditCategory.js\";\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport * as API from '../api/Api';\nimport S3FileUpload from 'react-s3';\nimport logo1 from '../images/logo1.png';\nimport { default as ReactSelect } from \"react-select\";\nimport Option from \"./Option\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityOptions = [{\n  value: \"LAGOS\",\n  label: \"Lagos\"\n}, {\n  value: \"ACCRA\",\n  label: \"Accra\"\n}];\nconst image_text = \"Add Image with size <= 500 KB\";\nconst btn_style_left = {\n  marginRight: \"8px\"\n};\nconst btn_style_right = {\n  marginLeft: \"8px\",\n  marginRight: \"16px\"\n};\nconst config = {\n  bucketName: process.env.AWS_BUCKET,\n  dirName: 'categories',\n\n  /* optional */\n  region: process.env.AWS_REGION,\n  accessKeyId: process.env.AWS_KEY,\n  secretAccessKey: process.env.AWS_SECRET\n};\nReactModal.setAppElement('#main');\nexport default class EditCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      image_url: props.category.image_url,\n      file: null,\n      image_uploaded: false\n    };\n    this.editCategory = this.editCategory.bind(this);\n    this.onFieldChanged = this.onFieldChanged.bind(this);\n    this.uploadImage = this.uploadImage.bind(this);\n    this.imageChanged = this.imageChanged.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      image_url: this.props.category.image_url\n    });\n  }\n\n  async editCategory() {\n    if (this.state.name.length <= 0 && this.state.name.length > 100) {\n      return;\n    }\n\n    const response = await API.editCategory(this.props.category._id, this.state.name, this.state.image_uploaded ? this.state.image_url : \"\");\n\n    if (response === \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response.data && response.data.response === \"success\") {\n      this.setState({\n        name: \"\"\n      });\n      this.props.reloadCategories();\n    }\n  }\n\n  onFieldChanged(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  imageChanged(e) {\n    var file = e.target.files[0];\n\n    if (file) {\n      if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n        //file is not an image\n        this.setState({\n          error: \"File is not a Zip File\"\n        });\n        return;\n      }\n\n      if (file.size > 512000) {\n        //file is too large\n        this.setState({\n          error: \"File is too large\"\n        });\n        return;\n      }\n\n      this.setState({\n        file: file,\n        image_url: URL.createObjectURL(file)\n      });\n    }\n  }\n\n  uploadImage() {\n    if (this.state.file) {\n      S3FileUpload.uploadFile(this.state.file, config).then(data => {\n        console.log(data);\n        this.setState({\n          image_uploaded: true\n        });\n      }).catch(err => console.error(err));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: this.props.showEditCategory,\n      className: \"EditCategoryModal\",\n      overlayClassName: \"Overlay\",\n      contentLabel: \"Minimal Modal Example\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center\",\n        children: \"Edit Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bt-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: this.props.category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"New Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"off\",\n              id: \"name\",\n              type: \"text\",\n              name: \"name\",\n              className: \"form-control\",\n              value: this.state.name,\n              onChange: this.onFieldChanged,\n              placeholder: this.props.category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ReactSelect, {\n              options: cityOptions,\n              isMulti: true,\n              closeMenuOnSelect: true,\n              hideSelectedOptions: false,\n              components: {\n                Option\n              },\n              onChange: this.onFieldChanged,\n              allowSelectAll: true,\n              value: this.props.category.city ? this.props.category.city : []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"bt-center\",\n              id: \"image\",\n              src: this.state.image_url == null ? logo1 : this.state.image_url,\n              width: \"90\",\n              height: \"90\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: image_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"\",\n              type: \"file\",\n              onChange: this.imageChanged\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"laser-inline green-bg bt-btn\",\n              onClick: this.uploadImage,\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline green-bg bt-btn\",\n          style: btn_style_left,\n          onClick: this.editCategory,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline grey-bg bt-btn\",\n          style: btn_style_right,\n          onClick: this.props.handleCloseModal,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Bartender/bartender/client/src/subcomponents/EditCategory.js"],"names":["React","Component","ReactModal","API","S3FileUpload","logo1","default","ReactSelect","Option","cityOptions","value","label","image_text","btn_style_left","marginRight","btn_style_right","marginLeft","config","bucketName","process","env","AWS_BUCKET","dirName","region","AWS_REGION","accessKeyId","AWS_KEY","secretAccessKey","AWS_SECRET","setAppElement","EditCategory","constructor","props","state","name","image_url","category","file","image_uploaded","editCategory","bind","onFieldChanged","uploadImage","imageChanged","componentDidMount","setState","length","response","_id","data","reloadCategories","event","target","type","checked","e","files","match","error","size","URL","createObjectURL","uploadFile","then","console","log","catch","err","render","showEditCategory","city","handleCloseModal"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\n\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport S3FileUpload from 'react-s3';\n\nimport logo1 from '../images/logo1.png';\n\nimport { default as ReactSelect } from \"react-select\";\n\nimport Option from \"./Option\"\n\nconst cityOptions = [\n    { value: \"LAGOS\", label: \"Lagos\" },\n    { value: \"ACCRA\", label: \"Accra\" }\n];\n\n\nconst image_text = \"Add Image with size <= 500 KB\"\n\nconst btn_style_left = {\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n\nconst config = {\n    bucketName: process.env.AWS_BUCKET,\n    dirName: 'categories', /* optional */\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_KEY,\n    secretAccessKey: process.env.AWS_SECRET,\n}\n\nReactModal.setAppElement('#main');\n\nexport default class EditCategory extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            image_url: props.category.image_url,\n            file: null,\n            image_uploaded: false\n        }\n\n        this.editCategory = this.editCategory.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({\n            image_url: this.props.category.image_url\n        })\n    }\n\n    async editCategory(){\n        if(this.state.name.length <= 0 && this.state.name.length > 100){\n           return;\n        }\n\n        const response = await API.editCategory(this.props.category._id,this.state.name, this.state.image_uploaded ? this.state.image_url : \"\" )\n        \n        if(response===\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response.data && response.data.response===\"success\"){\n            this.setState({\n                name: \"\"\n            })\n            this.props.reloadCategories();\n        }\n\n    }\n        \n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image_url: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    uploadImage(){\n        if(this.state.file){\n            S3FileUpload\n                .uploadFile(this.state.file, config)\n                .then(data => { \n                    console.log(data)\n                    this.setState({\n                        image_uploaded: true\n                    })\n                })\n                .catch(err => console.error(err))\n        }\n    }\n\n    render(){\n        return (\n                <ReactModal \n                    isOpen={this.props.showEditCategory}\n                    className=\"EditCategoryModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Edit Category</h4>\n                    <div className=\"bt-item\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <h4>{this.props.category.name}</h4>\n                                <br/>\n                                <label htmlFor=\"unit\"><h6>New Name</h6></label>\n                                <input autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={ this.state.name } onChange={this.onFieldChanged}  placeholder={this.props.category.name}/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <label htmlFor=\"city\"><h6>City</h6></label>\n                                <ReactSelect\n                                    options={cityOptions}\n                                    isMulti\n                                    closeMenuOnSelect={true}\n                                    hideSelectedOptions={false}\n                                    components={{\n                                        Option\n                                    }}\n                                    onChange={this.onFieldChanged}\n                                    allowSelectAll={true}\n                                    value={this.props.category.city ? this.props.category.city : []}\n                                    />\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <img className=\"bt-center\" id=\"image\" src={this.state.image_url == null ? logo1 : this.state.image_url} width=\"90\" height=\"90\"/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <h6>{image_text}</h6>\n                                <input className=\"\" type=\"file\" onChange={this.imageChanged}/>\n                                <button className=\"laser-inline green-bg bt-btn\" onClick={this.uploadImage}>Upload Image</button>\n                            </div>\n                        </div>\n                        <br/>\n                        <br/>\n                        <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.editCategory}>save</button>\n                        <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                    </div>\n                </ReactModal>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}