{"ast":null,"code":"var _jsxFileName = \"/Users/user/Bartender/bartender/client/src/components/Categories.js\";\nimport React, { Component } from 'react';\nimport AddCategory from '../subcomponents/AddCategory';\nimport EditCategory from '../subcomponents/EditCategory';\nimport Category from '../subcomponents/Category';\nimport Loader from '../subcomponents/Loader';\nimport * as API from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst left = {\n  float: \"left\"\n};\nconst right = {\n  float: \"right\",\n  marginTop: \"-0.01px\"\n};\nexport default class Categories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddCategory: false,\n      showEditCategory: false,\n      categories: [],\n      selected_category: {},\n      isLoading: true\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.reloadCategories = this.reloadCategories.bind(this);\n    this.showAddCategory = this.showAddCategory.bind(this);\n    this.editClicked = this.editClicked.bind(this);\n    this.onFieldChanged = this.onFieldChanged.bind(this);\n    this.showLoading = this.showLoading.bind(this);\n    this.hideLoading = this.hideLoading.bind(this);\n  }\n\n  showLoading() {\n    this.setState({\n      isLoading: true\n    });\n  }\n\n  hideLoading() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  async componentDidMount() {\n    const response = await API.getCategories();\n    this.hideLoading();\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.setState({\n        categories: response.data\n      });\n    }\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showAddCategory: false,\n      showEditCategory: false,\n      selected_category: {}\n    });\n  }\n\n  async reloadCategories() {\n    this.handleCloseModal();\n    const response = await API.getCategories();\n    this.hideLoading();\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.setState({\n        categories: response.data\n      });\n    }\n  }\n\n  onFieldChanged(event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n      selected_category: value\n    });\n  }\n\n  editClicked(e, category) {\n    this.setState({\n      showEditCategory: true,\n      selected_category: category\n    });\n    e.preventDefault();\n  }\n\n  showAddCategory() {\n    this.setState({\n      showAddCategory: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center\",\n            style: left,\n            children: [this.state.categories.length, \" Categories\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.showAddCategory,\n            className: \"green-bg bt-btn\",\n            style: right,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus white-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 107\n            }, this), \" Add Category\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(Category, {\n              category: category,\n              editClicked: this.editClicked\n            }, category._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCategory, {\n        handleCloseModal: this.handleCloseModal,\n        showAddCategory: this.state.showAddCategory,\n        reloadCategories: this.reloadCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditCategory, {\n        showLoading: this.showLoading,\n        hideLoading: this.hideLoading,\n        category: this.state.selected_category,\n        handleCloseModal: this.handleCloseModal,\n        showEditCategory: this.state.showEditCategory,\n        onFieldChanged: this.onFieldChanged,\n        reloadCategories: this.reloadCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {\n        isLoading: this.state.isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Bartender/bartender/client/src/components/Categories.js"],"names":["React","Component","AddCategory","EditCategory","Category","Loader","API","left","float","right","marginTop","Categories","constructor","props","state","showAddCategory","showEditCategory","categories","selected_category","isLoading","handleCloseModal","bind","reloadCategories","editClicked","onFieldChanged","showLoading","hideLoading","setState","componentDidMount","response","getCategories","data","event","target","value","e","category","preventDefault","render","length","map","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;;AAEA,MAAMC,IAAI,GAAC;AACPC,EAAAA,KAAK,EAAE;AADA,CAAX;AAIA,MAAMC,KAAK,GAAC;AACRD,EAAAA,KAAK,EAAE,OADC;AAERE,EAAAA,SAAS,EAAE;AAFH,CAAZ;AAKA,eAAe,MAAMC,UAAN,SAAyBV,SAAzB,CAAkC;AAC7CW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,KADR;AAETC,MAAAA,gBAAgB,EAAE,KAFT;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,iBAAiB,EAAE,EAJV;AAKTC,MAAAA,SAAS,EAAE;AALF,KAAb;AAQA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKN,eAAL,GAAuB,KAAKA,eAAL,CAAqBM,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBL,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDI,EAAAA,WAAW,GAAE;AACT,SAAKE,QAAL,CAAc;AACVR,MAAAA,SAAS,EAAE;AADD,KAAd;AAGH;;AAEDO,EAAAA,WAAW,GAAE;AACT,SAAKC,QAAL,CAAc;AACVR,MAAAA,SAAS,EAAE;AADD,KAAd;AAGH;;AAEsB,QAAjBS,iBAAiB,GAAE;AACrB,UAAMC,QAAQ,GAAG,MAAMvB,GAAG,CAACwB,aAAJ,EAAvB;AAEA,SAAKJ,WAAL;;AAEA,QAAGG,QAAQ,IAAE,OAAb,EAAqB;AACjB;AACA;AACH;;AAED,QAAGA,QAAQ,IAAIA,QAAQ,CAACE,IAAxB,EAA6B;AACzB,WAAKJ,QAAL,CAAc;AACVV,QAAAA,UAAU,EAAEY,QAAQ,CAACE;AADX,OAAd;AAGH;AACJ;;AAEDX,EAAAA,gBAAgB,GAAI;AAChB,SAAKO,QAAL,CAAc;AACVZ,MAAAA,eAAe,EAAE,KADP;AAEVC,MAAAA,gBAAgB,EAAE,KAFR;AAGVE,MAAAA,iBAAiB,EAAE;AAHT,KAAd;AAKH;;AAEqB,QAAhBI,gBAAgB,GAAE;AACpB,SAAKF,gBAAL;AAEA,UAAMS,QAAQ,GAAG,MAAMvB,GAAG,CAACwB,aAAJ,EAAvB;AAEA,SAAKJ,WAAL;;AAEA,QAAGG,QAAQ,IAAE,OAAb,EAAqB;AACjB;AACA;AACH;;AAED,QAAGA,QAAQ,IAAIA,QAAQ,CAACE,IAAxB,EAA6B;AACzB,WAAKJ,QAAL,CAAc;AACVV,QAAAA,UAAU,EAAEY,QAAQ,CAACE;AADX,OAAd;AAGH;AACJ;;AAEDP,EAAAA,cAAc,CAACQ,KAAD,EAAO;AACjB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEA,SAAKP,QAAL,CAAc;AACVT,MAAAA,iBAAiB,EAAEgB;AADT,KAAd;AAGH;;AAEDX,EAAAA,WAAW,CAACY,CAAD,EAAIC,QAAJ,EAAa;AAEpB,SAAKT,QAAL,CAAc;AACVX,MAAAA,gBAAgB,EAAE,IADR;AAEVE,MAAAA,iBAAiB,EAAEkB;AAFT,KAAd;AAKAD,IAAAA,CAAC,CAACE,cAAF;AACH;;AAEDtB,EAAAA,eAAe,GAAE;AACb,SAAKY,QAAL,CAAc;AACVZ,MAAAA,eAAe,EAAE;AADP,KAAd;AAGH;;AAEDuB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAA4B,YAAA,KAAK,EAAE/B,IAAnC;AAAA,uBAA0C,KAAKO,KAAL,CAAWG,UAAX,CAAsBsB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAQ,YAAA,OAAO,EAAE,KAAKxB,eAAtB;AAAuC,YAAA,SAAS,EAAC,iBAAjD;AAAmE,YAAA,KAAK,EAAEN,KAA1E;AAAA,yCAAkF;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBAEQ,KAAKK,KAAL,CAAWG,UAAX,CAAsBuB,GAAtB,CAA0BJ,QAAQ,IAAI;AAClC,gCAAO,QAAC,QAAD;AAA6B,cAAA,QAAQ,EAAEA,QAAvC;AAAiD,cAAA,WAAW,EAAE,KAAKb;AAAnE,eAAea,QAAQ,CAACK,GAAxB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFD;AAFR;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI,QAAC,WAAD;AAAc,QAAA,gBAAgB,EAAE,KAAMrB,gBAAtC;AAAwD,QAAA,eAAe,EAAE,KAAKN,KAAL,CAAWC,eAApF;AAAqG,QAAA,gBAAgB,EAAE,KAAKO;AAA5H;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI,QAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKG,WAAhC;AAA6C,QAAA,WAAW,EAAE,KAAKC,WAA/D;AAA4E,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWI,iBAAjG;AAAqH,QAAA,gBAAgB,EAAE,KAAME,gBAA7I;AAAgK,QAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWE,gBAA7L;AAA+M,QAAA,cAAc,EAAE,KAAKQ,cAApO;AAAoP,QAAA,gBAAgB,EAAE,KAAKF;AAA3Q;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWK;AAA9B;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AA7H4C","sourcesContent":["import React, { Component } from 'react';\n\nimport AddCategory from '../subcomponents/AddCategory';\nimport EditCategory from '../subcomponents/EditCategory';\nimport Category from '../subcomponents/Category';\n\nimport Loader from '../subcomponents/Loader';\n\nimport * as API from '../api/Api';\n\nconst left={\n    float: \"left\"\n}\n\nconst right={\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Categories extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showAddCategory: false,\n            showEditCategory: false,\n            categories: [],\n            selected_category: {},\n            isLoading: true,\n        };\n\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.reloadCategories = this.reloadCategories.bind(this);\n        this.showAddCategory = this.showAddCategory.bind(this);\n        this.editClicked = this.editClicked.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        const response = await API.getCategories();\n\n        this.hideLoading()\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                categories: response.data\n            })   \n        }\n    }\n\n    handleCloseModal () {\n        this.setState({ \n            showAddCategory: false,\n            showEditCategory: false,\n            selected_category: {}\n        });\n    }\n\n    async reloadCategories(){\n        this.handleCloseModal();\n\n        const response = await API.getCategories();\n\n        this.hideLoading()\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                categories: response.data\n            })   \n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.value;\n\n        this.setState({\n            selected_category: value\n        });\n    }\n\n    editClicked(e, category){\n        \n        this.setState({\n            showEditCategory: true,\n            selected_category: category\n        })\n\n        e.preventDefault();\n    }\n\n    showAddCategory(){\n        this.setState({\n            showAddCategory: true\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h5 className=\"text-center\" style={left}>{this.state.categories.length} Categories</h5>\n                        \n                        <button onClick={this.showAddCategory} className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i> Add Category</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.categories.map(category => {\n                                return <Category key={category._id} category={category} editClicked={this.editClicked}/>\n                            })\n                        }\n                    </div>\n                </div>\n                \n                <AddCategory  handleCloseModal={this. handleCloseModal} showAddCategory={this.state.showAddCategory} reloadCategories={this.reloadCategories}/>\n                <EditCategory showLoading={this.showLoading} hideLoading={this.hideLoading} category={this.state.selected_category}  handleCloseModal={this. handleCloseModal}  showEditCategory={this.state.showEditCategory} onFieldChanged={this.onFieldChanged} reloadCategories={this.reloadCategories}/>\n                <Loader isLoading={this.state.isLoading}/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}