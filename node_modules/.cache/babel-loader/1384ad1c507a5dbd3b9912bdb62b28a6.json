{"ast":null,"code":"var _jsxFileName = \"/Users/user/Bartender/bartender admin/src/subcomponents/EditDrink.js\";\nimport React, { Component } from 'react';\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\nimport * as API from '../api/Api';\nimport * as Utils from '../utils/Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btn_style_left = {\n  marginLeft: \"16px\",\n  marginRight: \"8px\"\n};\nconst btn_style_right = {\n  marginLeft: \"8px\",\n  marginRight: \"16px\"\n};\nReactModal.setAppElement('#main');\nexport default class EditDrink extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      category: \"\",\n      unit: \"bottle\",\n      price: 0,\n      profit: 0,\n      profit_price: 0,\n      image: null,\n      description: \"\",\n      content: [],\n      content_string: \"\",\n      stock: 0,\n      city: \"LAGOS\",\n      file: null\n    };\n    this.onFieldChanged = this.onFieldChanged.bind(this);\n    this.imageChanged = this.imageChanged.bind(this);\n    this.uploadImage = this.uploadImage.bind(this);\n    this.editDrink = this.editDrink.bind(this);\n  }\n\n  componentDidMount() {\n    var contents = \"\";\n\n    if (this.props.drink.content.length > 0) {\n      this.props.drink.content.map(con => {\n        contents += con + \",\";\n      });\n    }\n\n    this.setState({\n      name: this.props.drink.name,\n      category: this.props.drink.category,\n      unit: this.props.drink.unit,\n      profit: this.props.drink.profit,\n      price: Utils.getTruePrice(this.props.drink.price, this.props.drink.profit),\n      profit_price: this.props.drink.price,\n      image: this.props.drink.image,\n      stock: this.props.drink.stock,\n      content: this.props.drink.content,\n      content_string: contents,\n      description: this.props.drink.description,\n      city: this.props.drink.city ? this.props.drink.city : \"LAGOS\",\n      file: null,\n      category: this.props.categories[0].name\n    });\n  }\n\n  async editDrink() {\n    this.setState({\n      error: \"\"\n    });\n\n    if (this.state.name.length <= 0 || this.state.name.length > 100) {\n      this.setState({\n        error: \"Please complete all fields\"\n      });\n      return;\n    }\n\n    if (this.state.price <= 0 || this.state.profit <= 0) {\n      this.setState({\n        error: \"Please complete all fields\"\n      });\n      return;\n    }\n\n    var cont = [];\n\n    if (this.state.content_string.length > 0) {\n      if (this.state.content_string.includes(\",\")) {\n        cont = this.state.content_string.split(\",\");\n      } else {\n        cont.push(this.state.content_string);\n      }\n    }\n\n    const data = {\n      _id: this.props.drink._id,\n      name: this.state.name,\n      category: this.state.category,\n      unit: this.state.unit,\n      profit: this.state.profit,\n      price: this.state.profit_price,\n      image: this.state.image,\n      stock: this.state.stock,\n      description: this.state.description,\n      city: this.state.city,\n      content: cont\n    };\n    const response = await API.editDrink(data);\n\n    if (response === \"error\") {\n      //show error message\n      this.setState({\n        error: \"The drink could not be edited at the moment. try again later\"\n      });\n      return;\n    }\n\n    if (response.data && response.data.response === \"edited\") {\n      this.setState({\n        name: \"\",\n        category: \"\",\n        unit: \"\",\n        price: 0,\n        profit_price: 0,\n        profit: 0,\n        stock: 0,\n        image: null,\n        file: null,\n        description: \"\",\n        content_string: \"\",\n        city: \"\",\n        content: []\n      });\n      this.props.reloadDrinks();\n    } else {\n      this.setState({\n        error: \"An error occurred updating the drink. Please check the network\"\n      });\n    }\n  }\n\n  imageChanged(e) {\n    var file = e.target.files[0];\n\n    if (file) {\n      if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n        //file is not an image\n        this.setState({\n          error: \"File is not a Zip File\"\n        });\n        return;\n      }\n\n      if (file.size > 512000) {\n        //file is too large\n        this.setState({\n          error: \"File is too large\"\n        });\n        return;\n      }\n\n      this.setState({\n        file: file,\n        image: URL.createObjectURL(file)\n      });\n    }\n  }\n\n  async uploadImage() {\n    if (this.state.file != null) {\n      var fd = new FormData();\n      fd.append(\"image\", this.state.file, this.state.file.name);\n      this.props.showLoading();\n      const response = await API.uploadDrinkImage(fd);\n      this.props.hideLoading();\n\n      if (response == \"error\") {\n        //show error message\n        this.setState({\n          error: \"An error occurred uploading the image. Please check the network\"\n        });\n        return;\n      }\n\n      if (response && response.data && response.data.response) {\n        this.setState({\n          image: response.data.response\n        });\n      } else {\n        this.setState({\n          error: \"An error occurred uploading the image. Please check the network\"\n        });\n      }\n    }\n  }\n\n  onFieldChanged(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    if (name === \"price\") {\n      if (value > 0) {\n        var new_value = parseInt(value) + this.state.profit / 100 * parseInt(value);\n      }\n\n      this.setState({\n        price: value,\n        profit_price: new_value\n      });\n    } else if (name === \"profit\") {\n      var new_value = parseInt(this.state.price) + value / 100 * parseInt(this.state.price);\n      this.setState({\n        profit_price: new_value,\n        profit: value\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactModal, {\n        isOpen: this.props.showEditDrink,\n        className: \"DrinkModal\",\n        overlayClassName: \"Overlay\",\n        contentLabel: \"Minimal Modal Example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Edit Drink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"bt-red-text\",\n          children: this.state.error ? this.state.error : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEditDrink, {\n          content: this.state.content,\n          description: this.state.description,\n          content_string: this.state.content_string,\n          uploadImage: this.uploadImage,\n          categories: this.props.categories,\n          imageChanged: this.imageChanged,\n          onFieldChanged: this.onFieldChanged,\n          file: this.state.file,\n          name: this.state.name,\n          profit: this.state.profit,\n          price: this.state.price,\n          profit_price: this.state.profit_price,\n          category: this.state.category,\n          unit: this.state.unit,\n          image: this.state.image,\n          stock: this.state.stock,\n          city: this.state.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline green-bg bt-btn\",\n          style: btn_style_left,\n          onClick: this.editDrink,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline grey-bg bt-btn\",\n          style: btn_style_right,\n          onClick: this.props.handleCloseModal,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Bartender/bartender admin/src/subcomponents/EditDrink.js"],"names":["React","Component","AddEditDrink","ReactModal","API","Utils","btn_style_left","marginLeft","marginRight","btn_style_right","setAppElement","EditDrink","constructor","props","state","name","category","unit","price","profit","profit_price","image","description","content","content_string","stock","city","file","onFieldChanged","bind","imageChanged","uploadImage","editDrink","componentDidMount","contents","drink","length","map","con","setState","getTruePrice","categories","error","cont","includes","split","push","data","_id","response","reloadDrinks","e","target","files","match","size","URL","createObjectURL","fd","FormData","append","showLoading","uploadDrinkImage","hideLoading","event","value","type","checked","new_value","parseInt","render","showEditDrink","handleCloseModal"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport * as Utils from '../utils/Utils';\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n \nReactModal.setAppElement('#main');\n\nexport default class EditDrink extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            category: \"\",\n            unit: \"bottle\",\n            price: 0,\n            profit: 0,\n            profit_price:0,\n            image: null,\n            description: \"\",\n            content: [],\n            content_string:\"\",\n            stock: 0,\n            city: \"LAGOS\",\n            file: null\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.editDrink = this.editDrink.bind(this);\n    }\n\n    componentDidMount(){\n\n        var contents = \"\";\n        \n        if(this.props.drink.content.length > 0){\n            this.props.drink.content.map(con => {\n                contents+=con+\",\";\n            })\n        }\n\n        this.setState({\n            name: this.props.drink.name,\n            category: this.props.drink.category,\n            unit: this.props.drink.unit,\n            profit: this.props.drink.profit,\n            price: Utils.getTruePrice(this.props.drink.price, this.props.drink.profit),\n            profit_price: this.props.drink.price,\n            image: this.props.drink.image,\n            stock: this.props.drink.stock,\n            content: this.props.drink.content,\n            content_string: contents,\n            description: this.props.drink.description,\n            city: this.props.drink.city ? this.props.drink.city : \"LAGOS\",\n            file: null,\n            category: this.props.categories[0].name\n        })\n    }\n\n    async editDrink(){\n\n        this.setState({\n            error: \"\"\n        })\n\n        if(this.state.name.length <= 0 || this.state.name.length > 100){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n           return;\n        }\n\n        if(this.state.price <= 0 || this.state.profit <= 0){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        } \n\n        var cont = [];\n\n        if(this.state.content_string.length > 0){\n            if(this.state.content_string.includes(\",\")){\n                cont = this.state.content_string.split(\",\");\n            }\n            else{\n                cont.push(this.state.content_string)\n            }\n        }\n\n        const data = {\n            _id: this.props.drink._id,\n            name: this.state.name,\n            category: this.state.category,\n            unit: this.state.unit,\n            profit: this.state.profit,\n            price: this.state.profit_price,\n            image: this.state.image,\n            stock: this.state.stock,\n            description: this.state.description,\n            city: this.state.city,\n            content: cont\n        }\n        \n        const response = await API.editDrink(data)\n        \n        if(response===\"error\"){\n            //show error message\n            this.setState({\n                error: \"The drink could not be edited at the moment. try again later\"\n            })\n            return;\n        }\n\n        if(response.data && response.data.response===\"edited\"){\n            this.setState({\n                name: \"\",\n                category: \"\",\n                unit: \"\",\n                price: 0,\n                profit_price: 0,\n                profit: 0,\n                stock: 0,\n                image: null,\n                file: null,\n                description: \"\",\n                content_string: \"\",\n                city: \"\",\n                content: []\n            })\n\n            this.props.reloadDrinks();\n        }\n        else{\n            this.setState({\n                error: \"An error occurred updating the drink. Please check the network\"\n            })\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n            var fd = new FormData();\n            \n            fd.append(\"image\", this.state.file, this.state.file.name);\n\n            this.props.showLoading();\n            \n            const response = await API.uploadDrinkImage(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    image: response.data.response\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n            }\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        if(name===\"price\"){\n            if(value>0){\n                var new_value = parseInt(value) + ((this.state.profit / 100) * parseInt(value));\n            }\n\n            this.setState({\n                price: value,\n                profit_price: new_value\n            })\n        }\n        else if(name===\"profit\"){\n            var new_value = parseInt(this.state.price) + ((value / 100) * parseInt(this.state.price));\n\n            this.setState({\n                profit_price: new_value,\n                profit: value\n            })\n        }\n        else{\n            this.setState({\n                [name]: value\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showEditDrink}\n                    className=\"DrinkModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Edit Drink</h4>\n                    <br/>\n                    <h5 className=\"bt-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\n                    <br/>\n\n                    <AddEditDrink content={this.state.content} description={this.state.description} content_string={this.state.content_string} uploadImage={this.uploadImage} categories={this.props.categories} imageChanged={this.imageChanged} onFieldChanged={this.onFieldChanged} file={this.state.file} name={this.state.name} profit={this.state.profit} price={this.state.price} profit_price={this.state.profit_price} category={this.state.category} unit={this.state.unit} image={this.state.image} stock={this.state.stock} city={this.state.city}/>\n\n                    <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.editDrink}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}