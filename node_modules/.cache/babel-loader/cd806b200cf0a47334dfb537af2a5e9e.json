{"ast":null,"code":"var _jsxFileName = \"/Users/user/Bartender/bartender/client/src/components/Promocodes.js\";\nimport React, { Component } from 'react';\nimport Promocode from '../subcomponents/Promocode';\nimport { BottomScrollListener } from 'react-bottom-scroll-listener';\nimport GeneratePromocodes from '../subcomponents/GeneratePromocodes';\nimport EditPromocode from '../subcomponents/EditPromocode';\nimport Loader from '../subcomponents/Loader';\nimport * as API from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst left = {\n  float: \"left\"\n};\nconst right = {\n  float: \"right\",\n  marginTop: \"-0.01px\"\n};\nexport default class Promocodes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnDocumentBottom = () => {\n      this.getPromocodes();\n    };\n\n    this.onCityChanged = selected => {\n      this.setState({\n        city: selected\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      total_count: 0,\n      promocodes: [],\n      showGenerateCodes: false,\n      showEditPromocode: false,\n      code_to_edit: {},\n      code_name: \"\",\n      count: 0,\n      percentage: 0,\n      city: \"LAGOS\"\n    };\n    this.getPromocodesEmpty = this.getPromocodesEmpty.bind(this);\n    this.onFieldChanged = this.onFieldChanged.bind(this);\n    this.editClicked = this.editClicked.bind(this);\n    this.deactivateClicked = this.deactivateClicked.bind(this);\n    this.getPromocodes = this.getPromocodes.bind(this);\n    this.handleOnDocumentBottom = this.handleOnDocumentBottom.bind(this);\n    this.generateClicked = this.generateClicked.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.showGenerateCodesView = this.showGenerateCodesView.bind(this);\n    this.submitEditedPromocode = this.submitEditedPromocode.bind(this);\n    this.showLoading = this.showLoading.bind(this);\n    this.hideLoading = this.hideLoading.bind(this);\n    this.onCityChanged = this.onCityChanged.bind(this);\n  }\n\n  showLoading() {\n    this.setState({\n      isLoading: true\n    });\n  }\n\n  hideLoading() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  showGenerateCodesView() {\n    this.setState({\n      showGenerateCodes: true\n    });\n  }\n\n  async generateClicked(e) {\n    e.preventDefault();\n\n    if (this.state.code_name.length > 0 && this.state.count > 0 && this.state.percentage > 0) {\n      this.showLoading();\n      const response = await API.generatePromocodes(this.state.code_name, this.state.count, this.state.percentage, this.state.city);\n      this.hideLoading();\n\n      if (response == \"error\") {\n        //show error message\n        return;\n      }\n\n      if (response && response.data) {\n        this.setState({\n          promocodes: [],\n          showGenerateCodes: false,\n          showEditPromocode: false,\n          code_to_edit: {},\n          count: 0,\n          code_name: \"\",\n          percentage: 0\n        });\n        this.getPromocodesEmpty();\n      }\n    }\n  }\n\n  cancelModal(e) {\n    e.preventDefault();\n    this.setState({\n      showGenerateCodes: false,\n      showEditPromocode: false,\n      code_to_edit: {},\n      count: 0,\n      code_name: \"\",\n      percentage: null\n    });\n  }\n\n  onFieldChanged(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async getPromocodesEmpty() {\n    this.showLoading();\n    const response = await API.getPromocodes(0);\n    this.hideLoading();\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.setState(state => {\n        if (state.promocodes.length > 0) {\n          var codes = state.promocodes.concat(response.data);\n          return {\n            promocodes: codes\n          };\n        } else {\n          return {\n            promocodes: response.data\n          };\n        }\n      });\n    } //promocodes count\n\n\n    const response5 = await API.getPromocodesCount();\n\n    if (response5 == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response5 && response5.data) {\n      this.setState({\n        total_count: response5.data.count\n      });\n    }\n  }\n\n  async getPromocodes() {\n    this.showLoading();\n    const response = await API.getPromocodes(this.state.promocodes.length);\n    this.hideLoading();\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.setState(state => {\n        if (state.promocodes.length > 0) {\n          var codes = state.promocodes.concat(response.data);\n          return {\n            promocodes: codes\n          };\n        } else {\n          return {\n            promocodes: response.data\n          };\n        }\n      });\n    } //promocodes count\n\n\n    const response5 = await API.getPromocodesCount();\n\n    if (response5 == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response5 && response5.data) {\n      this.setState({\n        total_count: response5.data.count\n      });\n    }\n  }\n\n  async editClicked(e, promocode) {\n    //show edit promocode\n    this.setState({\n      showEditPromocode: true,\n      code_name: promocode.code,\n      code_to_edit: promocode,\n      count: promocode.usages,\n      percentage: promocode.percentage,\n      city: promocode.city\n    });\n    /*this.showLoading();\n    const response = await API.deletePromocode(promocode._id);\n    this.hideLoading();\n    if(response==\"error\"){\n        //show error message\n        return;\n    }\n     if(response && response.data){\n        this.setState(state => {\n            var codes = state.promocodes;\n             codes.splice(state.promocodes.indexOf(promocode),1);\n             return {\n                promocodes: codes,\n                total_count: (state.total_count - 1)\n            }\n        })\n    }*/\n  }\n\n  async submitEditedPromocode() {\n    if (this.state.code_name.length > 0 && this.state.count > 0 && this.state.percentage > 0) {\n      this.showLoading();\n      const response = await API.editPromocode(this.state.code_to_edit._id, this.state.code_name, this.state.count, this.state.percentage, this.state.code_to_edit.city);\n      this.hideLoading();\n\n      if (response == \"error\") {\n        //show error message\n        return;\n      }\n\n      if (response && response.data) {\n        this.setState(state => {\n          var codes = state.promocodes;\n          codes.splice(state.promocodes.indexOf(this.state.code_to_edit), 1, response.data);\n          return {\n            promocodes: codes,\n            showGenerateCodes: false,\n            showEditPromocode: false,\n            code_to_edit: {},\n            count: 0,\n            code_name: \"\",\n            percentage: null\n          };\n        });\n      }\n    }\n  }\n\n  async deactivateClicked(e, promocode) {\n    e.preventDefault();\n    this.showLoading();\n    const response = await API.deactivatePromocode(promocode._id);\n    this.hideLoading();\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.setState(state => {\n        var codes = state.promocodes;\n        codes.splice(state.promocodes.indexOf(promocode), 1, response.data);\n        return {\n          promocodes: codes\n        };\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getPromocodes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-left\",\n            style: left,\n            children: [this.state.total_count, \" Promocodes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.showGenerateCodesView,\n            className: \"green-bg bt-btn\",\n            style: right,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus white-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 115\n            }, this), \"  Create Code\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.promocodes.map(promo => {\n            return /*#__PURE__*/_jsxDEV(Promocode, {\n              promo: promo,\n              editClicked: this.editClicked,\n              deactivateClicked: this.deactivateClicked\n            }, promo._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {\n        isLoading: this.state.isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BottomScrollListener, {\n        onBottom: this.handleOnDocumentBottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), this.state.showEditPromocode ? /*#__PURE__*/_jsxDEV(EditPromocode, {\n        city: this.state.city,\n        onFieldChanged: this.onFieldChanged,\n        cancelModal: this.cancelModal,\n        showEditPromocode: this.state.showEditPromocode,\n        submitEditedPromocode: this.submitEditedPromocode,\n        code_name: this.state.code_name,\n        count: this.state.count,\n        percentage: this.state.percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 52\n      }, this) : \"\", this.state.showGenerateCodes ? /*#__PURE__*/_jsxDEV(GeneratePromocodes, {\n        onCityChanged: this.onCityChanged,\n        city: this.state.city,\n        onFieldChanged: this.onFieldChanged,\n        code_name: this.state.code_name,\n        count: this.state.count,\n        percentage: this.state.percentage,\n        generateClicked: this.generateClicked,\n        cancelModal: this.cancelModal,\n        showGenerateCodes: this.state.showGenerateCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 52\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Bartender/bartender/client/src/components/Promocodes.js"],"names":["React","Component","Promocode","BottomScrollListener","GeneratePromocodes","EditPromocode","Loader","API","left","float","right","marginTop","Promocodes","constructor","props","handleOnDocumentBottom","getPromocodes","onCityChanged","selected","setState","city","state","isLoading","total_count","promocodes","showGenerateCodes","showEditPromocode","code_to_edit","code_name","count","percentage","getPromocodesEmpty","bind","onFieldChanged","editClicked","deactivateClicked","generateClicked","cancelModal","showGenerateCodesView","submitEditedPromocode","showLoading","hideLoading","e","preventDefault","length","response","generatePromocodes","data","event","target","value","type","checked","name","codes","concat","response5","getPromocodesCount","promocode","code","usages","editPromocode","_id","splice","indexOf","deactivatePromocode","componentDidMount","render","map","promo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n\nimport Promocode from '../subcomponents/Promocode';\n\nimport { BottomScrollListener } from 'react-bottom-scroll-listener'\n\nimport GeneratePromocodes from '../subcomponents/GeneratePromocodes';\n\nimport EditPromocode from '../subcomponents/EditPromocode';\n\nimport Loader from '../subcomponents/Loader';\n\nimport * as API from '../api/Api';\n\nconst left = {\n    float: \"left\"\n}\n\nconst right = {\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Promocodes extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            total_count:0,\n            promocodes: [],\n            showGenerateCodes: false,\n            showEditPromocode: false,\n            code_to_edit: {},\n            code_name: \"\",\n            count: 0,\n            percentage: 0,\n            city: \"LAGOS\"\n        }\n\n        this.getPromocodesEmpty = this.getPromocodesEmpty.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.editClicked = this.editClicked.bind(this);\n        this.deactivateClicked = this.deactivateClicked.bind(this);\n        this.getPromocodes = this.getPromocodes.bind(this)\n        this.handleOnDocumentBottom = this.handleOnDocumentBottom.bind(this);\n        this.generateClicked = this.generateClicked.bind(this);\n        this.cancelModal = this.cancelModal.bind(this);\n        this.showGenerateCodesView = this.showGenerateCodesView.bind(this);\n        this.submitEditedPromocode = this.submitEditedPromocode.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.onCityChanged = this.onCityChanged.bind(this);\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    showGenerateCodesView(){\n        this.setState({\n            showGenerateCodes: true\n        })\n    }\n\n    async generateClicked(e){\n        e.preventDefault();\n        if(this.state.code_name.length>0 && this.state.count>0 && this.state.percentage>0){\n            this.showLoading();\n            const response = await API.generatePromocodes(this.state.code_name, this.state.count, this.state.percentage, this.state.city);\n            this.hideLoading();\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n    \n            if(response && response.data){\n                this.setState({\n                    promocodes: [],\n                    showGenerateCodes: false,\n                    showEditPromocode: false,\n                    code_to_edit: {},\n                    count: 0,\n                    code_name: \"\",\n                    percentage: 0\n                })\n                this.getPromocodesEmpty();\n            }\n        }\n    }\n\n    cancelModal(e){\n        e.preventDefault();\n        this.setState({\n            showGenerateCodes: false,\n            showEditPromocode: false,\n            code_to_edit: {},\n            count: 0,\n            code_name: \"\",\n            percentage: null\n        })\n    }\n\n    handleOnDocumentBottom = () => {\n        this.getPromocodes();\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    onCityChanged = (selected) => {\n        this.setState({\n            city: selected\n        })\n    }\n\n    async getPromocodesEmpty(){\n        this.showLoading();\n        const response = await API.getPromocodes(0);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.promocodes.length>0){\n                    var codes = state.promocodes.concat(response.data);\n\n                    return {\n                        promocodes: codes\n                    }\n                }\n                else{\n                    return {\n                        promocodes: response.data\n                    }\n                }\n            })   \n        }\n\n\n        //promocodes count\n        const response5 = await API.getPromocodesCount();\n\n        if(response5==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response5 && response5.data){\n            this.setState({\n                total_count: response5.data.count\n            })   \n        }\n    }\n\n    async getPromocodes(){\n        this.showLoading();\n        const response = await API.getPromocodes(this.state.promocodes.length);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.promocodes.length>0){\n                    var codes = state.promocodes.concat(response.data);\n\n                    return {\n                        promocodes: codes\n                    }\n                }\n                else{\n                    return {\n                        promocodes: response.data\n                    }\n                }\n            })   \n        }\n\n        //promocodes count\n        const response5 = await API.getPromocodesCount();\n\n        if(response5==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response5 && response5.data){\n            this.setState({\n                total_count: response5.data.count\n            })   \n        }\n\n    }\n\n    async editClicked(e, promocode){\n        //show edit promocode\n        this.setState({\n            showEditPromocode:  true,\n            code_name: promocode.code,\n            code_to_edit: promocode,\n            count: promocode.usages,\n            percentage: promocode.percentage,\n            city: promocode.city\n        })\n        /*this.showLoading();\n        const response = await API.deletePromocode(promocode._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var codes = state.promocodes;\n\n                codes.splice(state.promocodes.indexOf(promocode),1);\n\n                return {\n                    promocodes: codes,\n                    total_count: (state.total_count - 1)\n                }\n            })\n        }*/\n    }\n\n    async submitEditedPromocode(){\n        if(this.state.code_name.length>0 && this.state.count>0 && this.state.percentage>0){\n            this.showLoading();\n            const response = await API.editPromocode(this.state.code_to_edit._id, this.state.code_name, this.state.count, this.state.percentage, this.state.code_to_edit.city);\n            this.hideLoading();\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n\n            if(response && response.data){\n                this.setState(state => {\n                    var codes = state.promocodes;\n\n                    codes.splice(state.promocodes.indexOf(this.state.code_to_edit),1,response.data);\n\n                    return {\n                        promocodes: codes,\n                        showGenerateCodes: false,\n                        showEditPromocode: false,\n                        code_to_edit: {},\n                        count: 0,\n                        code_name: \"\",\n                        percentage: null\n                    }\n                })\n            }\n        }\n    }\n\n    async deactivateClicked(e, promocode){\n        e.preventDefault();\n        this.showLoading();\n        const response = await API.deactivatePromocode(promocode._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var codes = state.promocodes;\n\n                codes.splice(state.promocodes.indexOf(promocode),1,response.data);\n\n                return {\n                    promocodes: codes\n                }\n            })\n        }\n        \n    }\n\n    componentDidMount(){\n        this.getPromocodes();\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h5 className=\"text-left\" style={left}>{this.state.total_count} Promocodes</h5>\n                        <button onClick={ this.showGenerateCodesView } className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i>  Create Code</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.promocodes.map(promo =>{\n                                return <Promocode key={promo._id} promo={promo} editClicked={this.editClicked} deactivateClicked={this.deactivateClicked} />\n                            })\n                        }\n                    </div>\n                </div>\n\n                <Loader isLoading={this.state.isLoading}/>\n\n                <BottomScrollListener onBottom={this.handleOnDocumentBottom} />\n\n                {\n                    this.state.showEditPromocode ? <EditPromocode city={this.state.city} onFieldChanged={this.onFieldChanged} cancelModal={this.cancelModal} showEditPromocode={this.state.showEditPromocode} submitEditedPromocode={this.submitEditedPromocode} code_name={this.state.code_name} count={this.state.count} percentage={this.state.percentage} /> : \"\"\n                }\n\n                {\n                    this.state.showGenerateCodes ? <GeneratePromocodes onCityChanged={this.onCityChanged} city={this.state.city} onFieldChanged={this.onFieldChanged} code_name={this.state.code_name} count={this.state.count} percentage={this.state.percentage} generateClicked={this.generateClicked} cancelModal={this.cancelModal} showGenerateCodes={this.state.showGenerateCodes} /> : \"\"\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}