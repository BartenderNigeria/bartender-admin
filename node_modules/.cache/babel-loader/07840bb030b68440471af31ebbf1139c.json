{"ast":null,"code":"var _jsxFileName = \"/Users/user/Bartender/bartender/client/src/subcomponents/AddCategory.js\";\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport * as API from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btn_style_left = {\n  marginRight: \"8px\"\n};\nconst btn_style_right = {\n  marginLeft: \"8px\",\n  marginRight: \"16px\"\n};\nReactModal.setAppElement('#main');\nexport default class AddCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\"\n    };\n    this.onFieldChanged = this.onFieldChanged.bind(this);\n    this.createCategory = this.createCategory.bind(this);\n  }\n\n  async createCategory() {\n    if (this.state.name.length <= 0 && this.state.name.length > 100) {\n      return;\n    }\n\n    const response = await API.createCategory(this.state.name);\n\n    if (response === \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response.data && response.data.response === \"created\") {\n      this.setState({\n        name: \"\"\n      });\n      this.props.reloadCategories();\n    }\n  }\n\n  onFieldChanged(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: this.props.showAddCategory,\n      className: \"CategoryModal\",\n      overlayClassName: \"Overlay\",\n      contentLabel: \"Minimal Modal Example\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bt-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"unit\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          id: \"name\",\n          type: \"text\",\n          name: \"name\",\n          className: \"form-control\",\n          value: this.state.name,\n          onChange: this.onFieldChanged,\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline green-bg bt-btn\",\n          style: btn_style_left,\n          onClick: this.createCategory,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline grey-bg bt-btn\",\n          style: btn_style_right,\n          onClick: this.props.handleCloseModal,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Bartender/bartender/client/src/subcomponents/AddCategory.js"],"names":["React","Component","ReactModal","API","btn_style_left","marginRight","btn_style_right","marginLeft","setAppElement","AddCategory","constructor","props","state","name","onFieldChanged","bind","createCategory","length","response","data","setState","reloadCategories","event","target","value","type","checked","render","showAddCategory","handleCloseModal"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\n\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nconst btn_style_left = {\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n\nReactModal.setAppElement('#main');\n\nexport default class AddCategory extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\"\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.createCategory = this.createCategory.bind(this);\n    }\n\n    async createCategory(){\n        if(this.state.name.length <= 0 && this.state.name.length > 100){\n           return;\n        }\n\n        const response = await API.createCategory(this.state.name)\n        \n        if(response===\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response.data && response.data.response===\"created\"){\n            this.setState({\n                name: \"\"\n            })\n            this.props.reloadCategories();\n        }\n\n    }\n        \n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        });\n    }\n\n    render(){\n        return (\n                <ReactModal \n                    isOpen={this.props.showAddCategory}\n                    className=\"CategoryModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Add Category</h4>\n                    <div className=\"bt-item\">\n                        <label htmlFor=\"unit\"><h6>Name</h6></label>\n                        <input autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={this.state.name} onChange={this.onFieldChanged}  placeholder=\"Name\"/>\n                        <br/>\n                        <br/>\n                        <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.createCategory}>save</button>\n                        <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                    </div>\n                </ReactModal>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}