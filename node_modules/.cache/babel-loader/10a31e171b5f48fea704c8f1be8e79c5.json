{"ast":null,"code":"var _jsxFileName = \"/Users/user/Bartender/bartender admin/src/components/Drinks.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddDrink from '../subcomponents/AddDrink';\nimport EditDrink from '../subcomponents/EditDrink';\nimport Drink from '../subcomponents/Drink';\nimport Loader from '../subcomponents/Loader';\nimport ConfirmAction from \"../subcomponents/ConfirmAction\";\nimport * as API from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst left = {\n  float: \"left\"\n};\nconst right = {\n  float: \"right\",\n  marginTop: \"-0.01px\"\n};\nexport default class Drinks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showConfirm: false,\n      title: \"Confirm Delete\",\n      message: \"Are you sure you want to delete the selected drink item ?\",\n      isLoading: true,\n      showAddDrink: false,\n      showEditDrink: false,\n      categories: [],\n      drinks: [],\n      selected_drink: {},\n      city: \"LAGOS\"\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.reloadDrinks = this.reloadDrinks.bind(this);\n    this.showAddDrink = this.showAddDrink.bind(this);\n    this.showEditDrink = this.showEditDrink.bind(this);\n    this.deleteDrink = this.deleteDrink.bind(this);\n    this.showLoading = this.showLoading.bind(this);\n    this.hideLoading = this.hideLoading.bind(this);\n    this.hideConfirm = this.hideConfirm.bind(this);\n    this.showConfirm = this.showConfirm.bind(this);\n    this.yesClicked = this.yesClicked.bind(this);\n    this.noClicked = this.noClicked.bind(this);\n    this.onFieldChanged = this.onFieldChanged.bind(this);\n  }\n\n  async yesClicked() {\n    this.hideConfirm();\n    this.showLoading();\n    const response = await API.deleteDrink(this.state.selected_drink._id);\n    this.hideLoading();\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.reloadDrinks();\n    }\n  }\n\n  noClicked() {\n    this.hideConfirm();\n  }\n\n  showConfirm() {\n    this.setState({\n      showConfirm: true\n    });\n  }\n\n  hideConfirm() {\n    this.setState({\n      showConfirm: false\n    });\n  }\n\n  showLoading() {\n    this.setState({\n      isLoading: true\n    });\n  }\n\n  hideLoading() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  async componentDidMount() {\n    this.showLoading();\n    const response = await API.getCategories(this.state.city);\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.setState({\n        categories: response.data\n      });\n    }\n\n    const response1 = await API.getDrinks(this.state.city);\n    this.hideLoading();\n\n    if (response1 == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response1 && response1.data) {\n      this.setState({\n        drinks: response1.data\n      });\n    }\n  }\n\n  async reloadDrinks() {\n    this.handleCloseModal();\n    this.showLoading();\n    const response = await API.getDrinks(this.state.city);\n    this.hideLoading();\n\n    if (response == \"error\") {\n      //show error message\n      return;\n    }\n\n    if (response && response.data) {\n      this.setState({\n        drinks: response.data\n      });\n    }\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showAddDrink: false,\n      showEditDrink: false\n    });\n  }\n\n  showAddDrink() {\n    this.setState({\n      showAddDrink: true\n    });\n  }\n\n  showEditDrink(e, drink) {\n    this.setState({\n      showEditDrink: true,\n      selected_drink: drink\n    });\n    e.preventDefault();\n  }\n\n  deleteDrink(e, drink) {\n    e.preventDefault();\n    this.setState({\n      selected_drink: drink\n    });\n    this.showConfirm();\n  }\n\n  onFieldChanged(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    }); //load the drinks based on the category selected\n\n    this.reloadDrinks();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bt-city-holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-left\",\n            style: left,\n            children: [this.state.drinks.length, \" Drinks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bt-center\",\n            style: {\n              width: \"200px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"city\",\n              name: \"city\",\n              value: this.state.city,\n              onChange: this.onFieldChanged,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"LAGOS\",\n                children: \"Lagos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ACCRA\",\n                children: \"Accra\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.showAddDrink,\n            className: \"green-bg bt-btn\",\n            style: right,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus white-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 104\n            }, this), \" Add Drink\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.drinks.map(drink => {\n            return /*#__PURE__*/_jsxDEV(Drink, {\n              editClicked: this.showEditDrink,\n              deleteDrink: this.deleteDrink,\n              drink: drink\n            }, drink._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {\n        isLoading: this.state.isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmAction, {\n        yesClicked: this.yesClicked,\n        noClicked: this.noClicked,\n        showConfirm: this.state.showConfirm,\n        title: this.state.title,\n        message: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), this.state.showAddDrink ? /*#__PURE__*/_jsxDEV(AddDrink, {\n        showLoading: this.showLoading,\n        hideLoading: this.hideLoading,\n        categories: this.state.categories,\n        handleCloseModal: this.handleCloseModal,\n        showAddDrink: this.state.showAddDrink,\n        reloadDrinks: this.reloadDrinks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 45\n      }, this) : \"\", this.state.showEditDrink ? /*#__PURE__*/_jsxDEV(EditDrink, {\n        showLoading: this.showLoading,\n        hideLoading: this.hideLoading,\n        drink: this.state.selected_drink,\n        categories: this.state.categories,\n        handleCloseModal: this.handleCloseModal,\n        showEditDrink: this.state.showEditDrink,\n        reloadDrinks: this.reloadDrinks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 48\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Bartender/bartender admin/src/components/Drinks.js"],"names":["React","Component","Link","AddDrink","EditDrink","Drink","Loader","ConfirmAction","API","left","float","right","marginTop","Drinks","constructor","props","state","showConfirm","title","message","isLoading","showAddDrink","showEditDrink","categories","drinks","selected_drink","city","handleCloseModal","bind","reloadDrinks","deleteDrink","showLoading","hideLoading","hideConfirm","yesClicked","noClicked","onFieldChanged","response","_id","data","setState","componentDidMount","getCategories","response1","getDrinks","e","drink","preventDefault","event","target","value","type","checked","name","render","length","width","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport AddDrink from '../subcomponents/AddDrink';\nimport EditDrink from '../subcomponents/EditDrink';\n\nimport Drink from '../subcomponents/Drink';\n\nimport Loader from '../subcomponents/Loader';\nimport ConfirmAction from \"../subcomponents/ConfirmAction\";\n\nimport * as API from '../api/Api';\n\nconst left={\n    float: \"left\"\n}\n\nconst right={\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Drinks extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showConfirm: false,\n            title: \"Confirm Delete\",\n            message: \"Are you sure you want to delete the selected drink item ?\",\n            isLoading: true,\n            showAddDrink: false,\n            showEditDrink: false,\n            categories: [],\n            drinks: [],\n            selected_drink: {},\n            city: \"LAGOS\"\n        };\n\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.reloadDrinks = this.reloadDrinks.bind(this);\n        this.showAddDrink = this.showAddDrink.bind(this);\n        this.showEditDrink = this.showEditDrink.bind(this);\n        this.deleteDrink = this.deleteDrink.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.hideConfirm = this.hideConfirm.bind(this);\n        this.showConfirm = this.showConfirm.bind(this);\n        this.yesClicked = this.yesClicked.bind(this);\n        this.noClicked = this.noClicked.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this)\n    }\n\n    async yesClicked(){\n        this.hideConfirm();\n        this.showLoading();\n        const response = await API.deleteDrink(this.state.selected_drink._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.reloadDrinks()  \n        }\n    }\n\n    noClicked(){\n        this.hideConfirm();\n    }\n\n    showConfirm(){\n        this.setState({\n            showConfirm: true\n        })\n    }\n\n    hideConfirm(){\n        this.setState({\n            showConfirm: false\n        })\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        this.showLoading()\n        const response = await API.getCategories(this.state.city);\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                categories: response.data\n            })   \n        }\n\n        const response1 = await API.getDrinks(this.state.city);\n        this.hideLoading();\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                drinks: response1.data\n            })   \n        }\n    }\n\n    async reloadDrinks(){\n        this.handleCloseModal();\n        this.showLoading();\n        const response = await API.getDrinks(this.state.city);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                drinks: response.data\n            })   \n        }\n    }\n\n    handleCloseModal () {\n        this.setState({ \n            showAddDrink: false,\n            showEditDrink: false \n        });\n    }\n\n    showAddDrink(){\n        this.setState({\n            showAddDrink: true\n        })\n    }\n\n    showEditDrink(e,drink){\n        this.setState({\n            showEditDrink: true,\n            selected_drink: drink\n        });\n\n        e.preventDefault();\n    }\n\n    deleteDrink(e, drink){\n        e.preventDefault();\n\n        this.setState({\n            selected_drink: drink\n        });\n        this.showConfirm();\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        //load the drinks based on the category selected\n        this.reloadDrinks()\n\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\">\n                        <h5 className=\"text-left\" style={left}>{this.state.drinks.length} Drinks</h5>\n\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n\n                        <button onClick={this.showAddDrink} className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i> Add Drink</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.drinks.map(drink => {\n                                return <Drink key={drink._id} editClicked={this.showEditDrink} deleteDrink={this.deleteDrink} drink={drink}/>\n                            })\n                        }\n                    </div>\n                </div>\n                <Loader isLoading={this.state.isLoading}/>\n\n                <ConfirmAction yesClicked={this.yesClicked} noClicked={this.noClicked} showConfirm={this.state.showConfirm} title={this.state.title} message={this.state.message}/>\n                \n                { this.state.showAddDrink ? <AddDrink showLoading={this.showLoading} hideLoading={this.hideLoading} categories={this.state.categories}  handleCloseModal={this. handleCloseModal} showAddDrink={this.state.showAddDrink} reloadDrinks={this.reloadDrinks}/> : \"\" }\n                \n                {\n                    this.state.showEditDrink ? <EditDrink showLoading={this.showLoading} hideLoading={this.hideLoading} drink={this.state.selected_drink} categories={this.state.categories}  handleCloseModal={this. handleCloseModal} showEditDrink={this.state.showEditDrink} reloadDrinks={this.reloadDrinks}/> : \"\"\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}