{"ast":null,"code":"var _jsxFileName = \"/Users/user/Bartender/bartender/client/src/subcomponents/AddDrink.js\";\nimport React, { Component } from 'react';\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\nimport S3FileUpload from 'react-s3';\nimport * as API from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  bucketName: process.env.AWS_BUCKET,\n  dirName: 'drinkimages',\n\n  /* optional */\n  region: process.env.AWS_REGION,\n  accessKeyId: process.env.AWS_KEY,\n  secretAccessKey: process.env.AWS_SECRET\n};\nconst btn_style_left = {\n  marginLeft: \"16px\",\n  marginRight: \"8px\"\n};\nconst btn_style_right = {\n  marginLeft: \"8px\",\n  marginRight: \"16px\"\n};\nReactModal.setAppElement('#main');\nexport default class AddDrink extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      category: \"\",\n      unit: \"bottle\",\n      price: 0,\n      profit_price: 0,\n      profit: 0,\n      error: \"\",\n      stock: 0,\n      image_uploaded: false,\n      image: null,\n      file: null,\n      description: \"\",\n      content_string: \"\",\n      content: [],\n      city: []\n    };\n    this.onFieldChanged = this.onFieldChanged.bind(this);\n    this.imageChanged = this.imageChanged.bind(this);\n    this.uploadImage = this.uploadImage.bind(this);\n    this.createDrink = this.createDrink.bind(this);\n  }\n\n  async createDrink() {\n    this.setState({\n      error: \"\"\n    });\n\n    if (this.state.name.length <= 0 || this.state.name.length > 100) {\n      this.setState({\n        error: \"Please complete all fields\"\n      });\n      return;\n    }\n\n    if (this.state.price <= 0 || this.state.profit <= 0) {\n      this.setState({\n        error: \"Please complete all fields\"\n      });\n      return;\n    }\n\n    var cities = [];\n    cities = this.state.city.map(selection => {\n      return selection.value;\n    });\n    var cont = [];\n\n    if (this.state.content_string.length > 0) {\n      if (this.state.content_string.includes(\",\")) {\n        cont = this.state.content_string.split(\",\");\n      } else {\n        cont.push(this.state.content_string);\n      }\n    }\n\n    const data = {\n      name: this.state.name,\n      category: this.state.category.length <= 0 ? this.props.categories[0].name : this.state.category,\n      unit: this.state.unit,\n      price: this.state.profit_price,\n      profit: this.state.profit,\n      image: this.state.image,\n      stock: this.state.stock,\n      description: this.state.description,\n      content: cont,\n      city: cities\n    };\n    this.props.showLoading();\n    const response = await API.createDrink(data);\n    this.props.hideLoading();\n\n    if (response === \"error\") {\n      //show error message\n      this.setState({\n        error: \"Your drink could not be added at the moment. try again later\"\n      });\n      return;\n    }\n\n    if (response.data && response.data.response === \"created\") {\n      this.setState({\n        name: \"\",\n        category: \"Special Packages\",\n        unit: \"bottle\",\n        price: 0,\n        profit_price: 0,\n        image_uploaded: false,\n        stock: 0,\n        profit: 0,\n        image: null,\n        file: null,\n        description: \"\",\n        content_string: \"\",\n        content: [],\n        city: []\n      });\n      this.props.reloadDrinks();\n    } else {\n      this.setState({\n        error: \"Your drink could not be added at the moment. try again later\"\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.categories.length) {\n      this.setState({\n        category: this.props.categories[0].name\n      });\n    }\n  }\n\n  imageChanged(e) {\n    var file = e.target.files[0];\n\n    if (file) {\n      if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n        //file is not an image\n        this.setState({\n          error: \"File is not a Zip File\"\n        });\n        return;\n      }\n\n      if (file.size > 512000) {\n        //file is too large\n        this.setState({\n          error: \"File is too large\"\n        });\n        return;\n      }\n\n      this.setState({\n        file: file,\n        image: URL.createObjectURL(file)\n      });\n    }\n  }\n\n  async uploadImage() {\n    if (this.state.file != null) {\n      var fd = new FormData();\n      fd.append(\"image\", this.state.file, this.state.file.name);\n      this.props.showLoading();\n      S3FileUpload.uploadFile(this.state.file, config).then(data => {\n        console.log(data);\n      }).catch(err => {\n        console.error(err); //show error message\n\n        this.setState({\n          error: \"An error occurred uploading the image. Please check the network\"\n        });\n        return;\n      });\n      /*const response = await API.uploadDrinkImage(fd);\n       this.props.hideLoading();\n       if(response==\"error\"){\n          //show error message\n          this.setState({\n              error: \"An error occurred uploading the image. Please check the network\"\n          })\n          return;\n      }\n       if(response && response.data && response.data.response){\n          this.setState({\n              image: response.data.response,\n              image_uploaded: true\n          })   \n      }\n      else{\n          this.setState({\n              error: \"An error occurred uploading the image. Please check the network\"\n          })\n      }*/\n    }\n  }\n\n  onFieldChanged(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    if (name === \"price\") {\n      if (value > 0) {\n        var new_value = parseInt(value) + this.state.profit / 100 * parseInt(value);\n      }\n\n      this.setState({\n        price: value,\n        profit_price: new_value\n      });\n    } else if (name === \"profit\") {\n      var new_value = parseInt(this.state.price) + value / 100 * parseInt(this.state.price);\n      this.setState({\n        profit_price: new_value,\n        profit: value\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactModal, {\n        isOpen: this.props.showAddDrink,\n        className: \"DrinkModal\",\n        overlayClassName: \"Overlay\",\n        contentLabel: \"Minimal Modal Example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Add Drink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"bt-red-text\",\n          children: this.state.error ? this.state.error : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), this.state.image_uploaded ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"bt-green-text\",\n          children: \"Image Successfully Uploaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 51\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(AddEditDrink, {\n          city: this.state.city,\n          content: this.state.content,\n          description: this.state.description,\n          content_string: this.state.content_string,\n          uploadImage: this.uploadImage,\n          categories: this.props.categories,\n          imageChanged: this.imageChanged,\n          onFieldChanged: this.onFieldChanged,\n          file: this.state.file,\n          name: this.state.name,\n          profit: this.state.profit,\n          profit_price: this.state.profit_price,\n          price: this.state.price,\n          category: this.state.category,\n          unit: this.state.unit,\n          image: this.state.image,\n          stock: this.state.stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline green-bg bt-btn bt-inline\",\n          style: btn_style_left,\n          onClick: this.createDrink,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"laser-inline grey-bg bt-btn bt-inline\",\n          style: btn_style_right,\n          onClick: this.props.handleCloseModal,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Bartender/bartender/client/src/subcomponents/AddDrink.js"],"names":["React","Component","AddEditDrink","ReactModal","S3FileUpload","API","config","bucketName","process","env","AWS_BUCKET","dirName","region","AWS_REGION","accessKeyId","AWS_KEY","secretAccessKey","AWS_SECRET","btn_style_left","marginLeft","marginRight","btn_style_right","setAppElement","AddDrink","constructor","props","state","name","category","unit","price","profit_price","profit","error","stock","image_uploaded","image","file","description","content_string","content","city","onFieldChanged","bind","imageChanged","uploadImage","createDrink","setState","length","cities","map","selection","value","cont","includes","split","push","data","categories","showLoading","response","hideLoading","reloadDrinks","componentDidMount","e","target","files","match","size","URL","createObjectURL","fd","FormData","append","uploadFile","then","console","log","catch","err","event","type","checked","new_value","parseInt","render","showAddDrink","handleCloseModal"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\n\nimport S3FileUpload from 'react-s3';\n\nimport * as API from '../api/Api';\n\nconst config = {\n    bucketName: process.env.AWS_BUCKET,\n    dirName: 'drinkimages', /* optional */\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_KEY,\n    secretAccessKey: process.env.AWS_SECRET,\n}\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n \nReactModal.setAppElement('#main');\n\n\nexport default class AddDrink extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            category: \"\",\n            unit: \"bottle\",\n            price: 0,\n            profit_price: 0,\n            profit: 0,\n            error: \"\",\n            stock: 0,\n            image_uploaded: false,\n            image: null,\n            file: null,\n            description: \"\",\n            content_string: \"\",\n            content: [],\n            city: []\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.createDrink = this.createDrink.bind(this);\n    }\n\n    async createDrink(){\n        this.setState({\n            error: \"\"\n        })\n\n        if(this.state.name.length <= 0 || this.state.name.length > 100){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        }\n\n        if(this.state.price <= 0 || this.state.profit <= 0){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        } \n\n        var cities = []\n\n        cities = this.state.city.map(selection => {\n            return selection.value;\n        })\n\n        var cont = [];\n        \n        if(this.state.content_string.length > 0){\n            if(this.state.content_string.includes(\",\")){\n                cont = this.state.content_string.split(\",\");\n            }\n            else{\n                cont.push(this.state.content_string)\n            }\n        }\n\n        const data = {\n            name: this.state.name,\n            category: this.state.category.length <= 0 ? this.props.categories[0].name : this.state.category,\n            unit: this.state.unit,\n            price: this.state.profit_price,\n            profit: this.state.profit,\n            image: this.state.image,\n            stock: this.state.stock,\n            description: this.state.description,\n            content: cont,\n            city: cities\n        }\n        \n        this.props.showLoading();\n\n        const response = await API.createDrink(data)\n        \n        this.props.hideLoading();\n        \n        if(response===\"error\"){\n            //show error message\n            this.setState({\n                error: \"Your drink could not be added at the moment. try again later\"\n            })\n            return;\n        }\n\n        if(response.data && response.data.response===\"created\"){\n            this.setState({\n                name: \"\",\n                category: \"Special Packages\",\n                unit: \"bottle\",\n                price: 0,\n                profit_price: 0,\n                image_uploaded: false,\n                stock: 0,\n                profit: 0,\n                image: null,\n                file: null,\n                description: \"\",\n                content_string: \"\",\n                content: [],\n                city: []\n            })\n\n            this.props.reloadDrinks();\n        }\n        else{\n            this.setState({\n                error: \"Your drink could not be added at the moment. try again later\"\n            })\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.categories.length){\n            this.setState({\n                category: this.props.categories[0].name\n            })\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n\n            var fd = new FormData();\n            \n            fd.append(\"image\", this.state.file, this.state.file.name);\n            \n            this.props.showLoading();\n\n            S3FileUpload\n                .uploadFile(this.state.file, config)\n                .then( data => { \n                    console.log(data) \n                })\n                .catch(err => { \n                    console.error(err)  \n                    //show error message\n                    this.setState({\n                        error: \"An error occurred uploading the image. Please check the network\"\n                    })\n                    return;\n                })\n\n            /*const response = await API.uploadDrinkImage(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    image: response.data.response,\n                    image_uploaded: true\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n            }*/\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        if(name===\"price\"){\n            if(value>0){\n                var new_value = parseInt(value) + ((this.state.profit / 100) * parseInt(value));\n            }\n\n            this.setState({\n                price: value,\n                profit_price: new_value\n            })\n        }\n        else if(name===\"profit\"){\n            var new_value = parseInt(this.state.price) + ((value / 100) * parseInt(this.state.price));\n\n            this.setState({\n                profit_price: new_value,\n                profit: value\n            })\n        }\n        else{\n            this.setState({\n                [name]: value\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showAddDrink}\n                    className=\"DrinkModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Add Drink</h4>\n                    <br/>\n                    <h5 className=\"bt-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\n                    <br/>\n                    { this.state.image_uploaded ? <h5 className=\"bt-green-text\">Image Successfully Uploaded</h5> : \"\" }\n\n                    <AddEditDrink city={this.state.city} content={this.state.content} description={this.state.description} content_string={this.state.content_string} uploadImage={this.uploadImage} categories={this.props.categories} imageChanged={this.imageChanged} onFieldChanged={this.onFieldChanged} file={this.state.file} name={this.state.name} profit={this.state.profit} profit_price={this.state.profit_price} price={this.state.price} category={this.state.category} unit={this.state.unit} image={this.state.image} stock={this.state.stock}/>\n\n                    <button className=\"laser-inline green-bg bt-btn bt-inline\" style={btn_style_left} onClick={this.createDrink}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn bt-inline\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}