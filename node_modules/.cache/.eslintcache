[{"/Users/user/Bartender/bartender/client/src/index.js":"1","/Users/user/Bartender/bartender/client/src/NewApp.js":"2","/Users/user/Bartender/bartender/client/src/serviceWorker.js":"3","/Users/user/Bartender/bartender/client/src/components/Login.js":"4","/Users/user/Bartender/bartender/client/src/components/Landing.js":"5","/Users/user/Bartender/bartender/client/src/auth/AuthHelperMethods.js":"6","/Users/user/Bartender/bartender/client/src/components/Drinks.js":"7","/Users/user/Bartender/bartender/client/src/components/Orders.js":"8","/Users/user/Bartender/bartender/client/src/components/Users.js":"9","/Users/user/Bartender/bartender/client/src/components/Categories.js":"10","/Users/user/Bartender/bartender/client/src/components/Home.js":"11","/Users/user/Bartender/bartender/client/src/components/Agents.js":"12","/Users/user/Bartender/bartender/client/src/components/Promocodes.js":"13","/Users/user/Bartender/bartender/client/src/components/Financials.js":"14","/Users/user/Bartender/bartender/client/src/auth/withAuth.js":"15","/Users/user/Bartender/bartender/client/src/subcomponents/OrderStats.js":"16","/Users/user/Bartender/bartender/client/src/subcomponents/Message.js":"17","/Users/user/Bartender/bartender/client/src/subcomponents/Loader.js":"18","/Users/user/Bartender/bartender/client/src/api/Api.js":"19","/Users/user/Bartender/bartender/client/src/subcomponents/Drink.js":"20","/Users/user/Bartender/bartender/client/src/subcomponents/AddDrink.js":"21","/Users/user/Bartender/bartender/client/src/subcomponents/ViewAgent.js":"22","/Users/user/Bartender/bartender/client/src/subcomponents/EditDrink.js":"23","/Users/user/Bartender/bartender/client/src/subcomponents/ConfirmAction.js":"24","/Users/user/Bartender/bartender/client/src/subcomponents/Order.js":"25","/Users/user/Bartender/bartender/client/src/subcomponents/AssignAgent.js":"26","/Users/user/Bartender/bartender/client/src/subcomponents/OrderItems.js":"27","/Users/user/Bartender/bartender/client/src/subcomponents/AddCategory.js":"28","/Users/user/Bartender/bartender/client/src/subcomponents/OrderStatus.js":"29","/Users/user/Bartender/bartender/client/src/subcomponents/User.js":"30","/Users/user/Bartender/bartender/client/src/subcomponents/EditCategory.js":"31","/Users/user/Bartender/bartender/client/src/subcomponents/Category.js":"32","/Users/user/Bartender/bartender/client/src/subcomponents/Agent.js":"33","/Users/user/Bartender/bartender/client/src/subcomponents/AddAgent.js":"34","/Users/user/Bartender/bartender/client/src/subcomponents/EditAgent.js":"35","/Users/user/Bartender/bartender/client/src/subcomponents/Promocode.js":"36","/Users/user/Bartender/bartender/client/src/subcomponents/GeneratePromocodes.js":"37","/Users/user/Bartender/bartender/client/src/subcomponents/EditPromocode.js":"38","/Users/user/Bartender/bartender/client/src/utils/Utils.js":"39","/Users/user/Bartender/bartender/client/src/subcomponents/AddEditDrink.js":"40","/Users/user/Bartender/bartender/client/src/subcomponents/Option.js":"41","/Users/user/Bartender/bartender/client/src/subcomponents/AddEditAgent.js":"42","/Users/user/Bartender/bartender admin/src/index.js":"43","/Users/user/Bartender/bartender admin/src/NewApp.js":"44","/Users/user/Bartender/bartender admin/src/serviceWorker.js":"45","/Users/user/Bartender/bartender admin/src/components/Login.js":"46","/Users/user/Bartender/bartender admin/src/components/Landing.js":"47","/Users/user/Bartender/bartender admin/src/auth/AuthHelperMethods.js":"48","/Users/user/Bartender/bartender admin/src/components/Categories.js":"49","/Users/user/Bartender/bartender admin/src/components/Drinks.js":"50","/Users/user/Bartender/bartender admin/src/components/Orders.js":"51","/Users/user/Bartender/bartender admin/src/components/Users.js":"52","/Users/user/Bartender/bartender admin/src/components/Home.js":"53","/Users/user/Bartender/bartender admin/src/components/Agents.js":"54","/Users/user/Bartender/bartender admin/src/components/Financials.js":"55","/Users/user/Bartender/bartender admin/src/auth/withAuth.js":"56","/Users/user/Bartender/bartender admin/src/components/Promocodes.js":"57","/Users/user/Bartender/bartender admin/src/subcomponents/OrderStats.js":"58","/Users/user/Bartender/bartender admin/src/subcomponents/Message.js":"59","/Users/user/Bartender/bartender admin/src/subcomponents/Loader.js":"60","/Users/user/Bartender/bartender admin/src/api/Api.js":"61","/Users/user/Bartender/bartender admin/src/subcomponents/Category.js":"62","/Users/user/Bartender/bartender admin/src/subcomponents/AddCategory.js":"63","/Users/user/Bartender/bartender admin/src/subcomponents/EditCategory.js":"64","/Users/user/Bartender/bartender admin/src/subcomponents/AddDrink.js":"65","/Users/user/Bartender/bartender admin/src/subcomponents/EditDrink.js":"66","/Users/user/Bartender/bartender admin/src/subcomponents/Drink.js":"67","/Users/user/Bartender/bartender admin/src/subcomponents/ConfirmAction.js":"68","/Users/user/Bartender/bartender admin/src/subcomponents/Order.js":"69","/Users/user/Bartender/bartender admin/src/subcomponents/OrderItems.js":"70","/Users/user/Bartender/bartender admin/src/subcomponents/AssignAgent.js":"71","/Users/user/Bartender/bartender admin/src/subcomponents/ViewAgent.js":"72","/Users/user/Bartender/bartender admin/src/subcomponents/OrderStatus.js":"73","/Users/user/Bartender/bartender admin/src/subcomponents/User.js":"74","/Users/user/Bartender/bartender admin/src/subcomponents/Agent.js":"75","/Users/user/Bartender/bartender admin/src/subcomponents/AddAgent.js":"76","/Users/user/Bartender/bartender admin/src/subcomponents/EditAgent.js":"77","/Users/user/Bartender/bartender admin/src/subcomponents/Promocode.js":"78","/Users/user/Bartender/bartender admin/src/subcomponents/GeneratePromocodes.js":"79","/Users/user/Bartender/bartender admin/src/subcomponents/EditPromocode.js":"80","/Users/user/Bartender/bartender admin/src/utils/Utils.js":"81","/Users/user/Bartender/bartender admin/src/subcomponents/Option.js":"82","/Users/user/Bartender/bartender admin/src/subcomponents/AddEditDrink.js":"83","/Users/user/Bartender/bartender admin/src/subcomponents/AddEditAgent.js":"84","/Users/user/Bartender/bartender admin/src/config.js":"85"},{"size":1597,"mtime":1634663339764,"results":"86","hashOfConfig":"87"},{"size":10253,"mtime":1634663339737,"results":"88","hashOfConfig":"87"},{"size":4951,"mtime":1634663339765,"results":"89","hashOfConfig":"87"},{"size":4202,"mtime":1634663339752,"results":"90","hashOfConfig":"87"},{"size":2097,"mtime":1634663339752,"results":"91","hashOfConfig":"87"},{"size":3086,"mtime":1635194122489,"results":"92","hashOfConfig":"87"},{"size":6640,"mtime":1635174130276,"results":"93","hashOfConfig":"87"},{"size":17673,"mtime":1635174130279,"results":"94","hashOfConfig":"87"},{"size":3002,"mtime":1634663339755,"results":"95","hashOfConfig":"87"},{"size":4168,"mtime":1635195976241,"results":"96","hashOfConfig":"87"},{"size":8407,"mtime":1634663339751,"results":"97","hashOfConfig":"87"},{"size":5125,"mtime":1634663339745,"results":"98","hashOfConfig":"87"},{"size":10387,"mtime":1635232491046,"results":"99","hashOfConfig":"87"},{"size":5553,"mtime":1635174130277,"results":"100","hashOfConfig":"87"},{"size":1783,"mtime":1634663339738,"results":"101","hashOfConfig":"87"},{"size":1056,"mtime":1634663339781,"results":"102","hashOfConfig":"87"},{"size":269,"mtime":1634663339778,"results":"103","hashOfConfig":"87"},{"size":860,"mtime":1634663339778,"results":"104","hashOfConfig":"87"},{"size":11496,"mtime":1634680754266,"results":"105","hashOfConfig":"87"},{"size":2558,"mtime":1634663339773,"results":"106","hashOfConfig":"87"},{"size":8610,"mtime":1635174130282,"results":"107","hashOfConfig":"87"},{"size":1476,"mtime":1634663339785,"results":"108","hashOfConfig":"87"},{"size":8136,"mtime":1635196749089,"results":"109","hashOfConfig":"87"},{"size":1054,"mtime":1634663339773,"results":"110","hashOfConfig":"87"},{"size":2948,"mtime":1635174130293,"results":"111","hashOfConfig":"87"},{"size":2137,"mtime":1634663339771,"results":"112","hashOfConfig":"87"},{"size":2149,"mtime":1634663339780,"results":"113","hashOfConfig":"87"},{"size":2380,"mtime":1635194889095,"results":"114","hashOfConfig":"87"},{"size":1934,"mtime":1634663339782,"results":"115","hashOfConfig":"87"},{"size":1672,"mtime":1634663339784,"results":"116","hashOfConfig":"87"},{"size":6417,"mtime":1635196714884,"results":"117","hashOfConfig":"87"},{"size":1354,"mtime":1635197054131,"results":"118","hashOfConfig":"87"},{"size":1272,"mtime":1634663339771,"results":"119","hashOfConfig":"87"},{"size":10185,"mtime":1634663339768,"results":"120","hashOfConfig":"87"},{"size":10790,"mtime":1634663339774,"results":"121","hashOfConfig":"87"},{"size":1369,"mtime":1634663339783,"results":"122","hashOfConfig":"87"},{"size":3502,"mtime":1635232127195,"results":"123","hashOfConfig":"87"},{"size":3493,"mtime":1635232141042,"results":"124","hashOfConfig":"87"},{"size":2673,"mtime":1635231491751,"results":"125","hashOfConfig":"87"},{"size":5717,"mtime":1635174130283,"results":"126","hashOfConfig":"87"},{"size":362,"mtime":1635174130292,"results":"127","hashOfConfig":"87"},{"size":10258,"mtime":1634663339770,"results":"128","hashOfConfig":"87"},{"size":1597,"mtime":1634663339764,"results":"129","hashOfConfig":"130"},{"size":10253,"mtime":1634663339737,"results":"131","hashOfConfig":"130"},{"size":4951,"mtime":1634663339765,"results":"132","hashOfConfig":"130"},{"size":4202,"mtime":1634663339752,"results":"133","hashOfConfig":"130"},{"size":2097,"mtime":1634663339752,"results":"134","hashOfConfig":"130"},{"size":3086,"mtime":1635194122489,"results":"135","hashOfConfig":"130"},{"size":4168,"mtime":1635195976241,"results":"136","hashOfConfig":"130"},{"size":6657,"mtime":1635274982757,"results":"137","hashOfConfig":"130"},{"size":17663,"mtime":1635323237222,"results":"138","hashOfConfig":"130"},{"size":3002,"mtime":1634663339755,"results":"139","hashOfConfig":"130"},{"size":8407,"mtime":1634663339751,"results":"140","hashOfConfig":"130"},{"size":5125,"mtime":1634663339745,"results":"141","hashOfConfig":"130"},{"size":5601,"mtime":1635299519360,"results":"142","hashOfConfig":"130"},{"size":1783,"mtime":1634663339738,"results":"143","hashOfConfig":"130"},{"size":10927,"mtime":1635236259700,"results":"144","hashOfConfig":"130"},{"size":1056,"mtime":1634663339781,"results":"145","hashOfConfig":"130"},{"size":269,"mtime":1634663339778,"results":"146","hashOfConfig":"130"},{"size":860,"mtime":1634663339778,"results":"147","hashOfConfig":"130"},{"size":11518,"mtime":1635276117144,"results":"148","hashOfConfig":"130"},{"size":1354,"mtime":1635197054131,"results":"149","hashOfConfig":"130"},{"size":6310,"mtime":1635296651331,"results":"150","hashOfConfig":"130"},{"size":7007,"mtime":1635296636819,"results":"151","hashOfConfig":"130"},{"size":8807,"mtime":1635296969759,"results":"152","hashOfConfig":"130"},{"size":8476,"mtime":1635273899688,"results":"153","hashOfConfig":"130"},{"size":2558,"mtime":1634663339773,"results":"154","hashOfConfig":"130"},{"size":1054,"mtime":1634663339773,"results":"155","hashOfConfig":"130"},{"size":2948,"mtime":1635174130293,"results":"156","hashOfConfig":"130"},{"size":2149,"mtime":1634663339780,"results":"157","hashOfConfig":"130"},{"size":2137,"mtime":1634663339771,"results":"158","hashOfConfig":"130"},{"size":1476,"mtime":1634663339785,"results":"159","hashOfConfig":"130"},{"size":1934,"mtime":1634663339782,"results":"160","hashOfConfig":"130"},{"size":1672,"mtime":1634663339784,"results":"161","hashOfConfig":"130"},{"size":1272,"mtime":1634663339771,"results":"162","hashOfConfig":"130"},{"size":10185,"mtime":1634663339768,"results":"163","hashOfConfig":"130"},{"size":10790,"mtime":1634663339774,"results":"164","hashOfConfig":"130"},{"size":1369,"mtime":1634663339783,"results":"165","hashOfConfig":"130"},{"size":3502,"mtime":1635232127195,"results":"166","hashOfConfig":"130"},{"size":3493,"mtime":1635232141042,"results":"167","hashOfConfig":"130"},{"size":2680,"mtime":1635251851502,"results":"168","hashOfConfig":"130"},{"size":362,"mtime":1635174130292,"results":"169","hashOfConfig":"130"},{"size":5587,"mtime":1635296801428,"results":"170","hashOfConfig":"130"},{"size":10258,"mtime":1634663339770,"results":"171","hashOfConfig":"130"},{"size":235,"mtime":1635278511545,"results":"172","hashOfConfig":"130"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},"zfmx00",{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"176"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"176"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"176"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"193","usedDeprecatedRules":"176"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"176"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"176"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"202","usedDeprecatedRules":"176"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"176"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"208","usedDeprecatedRules":"176"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"176"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"176"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"176"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"176"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"176"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"176"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"176"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"176"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"176"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"176"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"176"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"176"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"176"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"176"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"176"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"176"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"288"},"95d9bo",{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"288"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"288"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"288"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"288"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"202","usedDeprecatedRules":"288"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"303","usedDeprecatedRules":"288"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"288"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"288"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"208","usedDeprecatedRules":"288"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"288"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"288"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"288"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"288"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"288"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"288"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"288"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"288"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"288"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"288"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"288"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"288"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"288"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"288"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"288"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"288"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"288"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"288"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"288"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"288"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},"/Users/user/Bartender/bartender/client/src/index.js",["384","385"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './NewApp';\nimport Login from './components/Login'\nimport Landing from './components/Landing'\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    Redirect,\n    withRouter\n  } from 'react-router-dom';\n\n//Our Auth Service\nimport AuthHelperMethods from './auth/AuthHelperMethods';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst Auth = new AuthHelperMethods();\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n      Auth.loggedIn() === true\n        ? <Component {...props} />\n        : <Redirect to='/auth/login'/>\n    )} />\n)\n\nconst AuthProtectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n      Auth.loggedIn() === false\n        ? <Component {...props} />\n        : <Redirect to='/app'/>\n    )} />\n)\n\nconst routing = (\n    <Router>\n        <div>\n            <Switch>\n                <Route path =\"view\" exact component={Landing} />\n                <ProtectedRoute path=\"/view\" component={App} />\n                <ProtectedRoute path=\"/app\" component={App} />\n                <AuthProtectedRoute path=\"/auth/login\" component={Login} />\n            </Switch>\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["386","387"],"/Users/user/Bartender/bartender/client/src/NewApp.js",["388","389","390","391","392","393","394","395","396","397"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch, Link, Redirect } from 'react-router-dom'\nimport Orders from './components/Orders';\nimport Drinks from './components/Drinks'\nimport Categories from './components/Categories'\nimport Users from './components/Users'\nimport Home from './components/Home'\nimport Agents from './components/Agents'\nimport Login from './components/Login'\nimport Financials from './components/Financials'\nimport OrderStats from './subcomponents/OrderStats';\nimport Promocodes from './components/Promocodes'\nimport Message from \"./subcomponents/Message\"\n\n\n\nimport icon from './images/icon.png' \n\nimport alert from \"./sounds/alert.mp3\";\n\nimport Sound from 'react-sound';\n\nimport withAuth from './auth/withAuth';\n\nimport * as API from './api/Api';\n\n//import PubNubReact from 'pubnub-react';\n\nimport PubNub from 'pubnub';\nimport { PubNubProvider, usePubNub } from 'pubnub-react';\n\nimport './App.css';\nimport { clearInterval } from 'timers';\n\nconst zeropadding = {\n    padding: \"0px\",\n    marginTop: \"6px\"\n};\n\nconst greenbg  = {\n    backgroundColor: \"#287428\"\n}\n\nconst redbg  = {\n    backgroundColor: \"#A93226\"\n}\n\nconst channels = [\"neworder\", \"orderstatus\", \"routerequest\"]\n\nvar timer_id = null\n\nconst pubnub = new PubNub({\n    publishKey: 'pub-c-da5b31c8-45d5-4018-82be-843221a3b91c',\n    subscribeKey: 'sub-c-de1f05de-af97-11e9-a732-8a2b99383297',\n    uuid: 'Bartender247ng'\n});\n\nexport default function App() {\n    return (\n      <PubNubProvider client={pubnub}>\n        <Dashboard />\n      </PubNubProvider>\n    );\n}\n\nconst Dashboard = () => {\n    const pubnub = usePubNub();\n\n    const [time, setTime] = useState(5)\n    \n    const [showMessage,setShowMessage] = useState(false)\n    const [message, setMessage] = useState(\"\")\n    \n    const [data, setData] = useState({})\n    const [latest_order, setLatestOrder] = useState(false)\n    const [play_sound, setPlaySound] = useState(false)\n    const [online, setOnline] = useState(false)\n\n    useEffect(() => {\n        pubnub.subscribe({\n            channels: channels\n        });\n        \n        pubnub.addListener({\n            status: (st) => {\n                if(st.category === \"PNNetworkUpCategory\"){\n                    setOnline(true)\n                    getStats();\n                }\n\n                if(st.category === \"PNConnectedCategory\"){\n                    setOnline(true)\n                    getStats();\n                }\n\n                if (st.category === \"PNReconnectedCategory\") {\n                    setOnline(true)\n                    getStats();\n                }\n\n                if (st.category === \"PNNetworkIssuesCategory\") {\n                    setOnline(false)\n                }\n\n                if (st.category === \"PNNetworkDownCategory\") {\n                    setOnline(false)\n                }\n\n                if (st.category === \"PNTimeoutCategory\") {\n                    setOnline(false)\n                }\n            },\n            message: (message) => { \n                switch(message.channel){\n                    case \"neworder\":\n                        getStats();\n\n                        setLatestOrder(true)\n                        setPlaySound(true)\n                    break;\n                    case \"orderstatus\":\n                    break;\n                    case \"routerequest\":\n                    break;\n                }\n            }\n        });\n\n        /*pubnub.getMessageActions({ channel: 'neworder'}, (msg) => {\n            getStats();\n\n            setLatestOrder(true)\n            setPlaySound(true)\n        })\n\n        pubnub.getMessageActions({ channel: 'routerequest'}, (dat) => {\n            var agent = dat.userMetadata;\n        \n            var response = dat.message.response;\n            \n            if(response==\"accepted\"){\n                var msg = \"Agent \" +agent.firstname+\" \"+agent.lastname +\" has confirmed the order and is on the way to pick up the items\";\n                showMessage(msg);\n            }\n\n            if(response==\"declined\"){\n                var msg = \"Agent \" +agent.firstname+\" \"+agent.lastname +\" declined the request to deliver the items\";\n                showMessage(msg);\n            }\n            \n        })\n\n        pubnub.getMessageActions({channels: 'orderstatus'}, (msg) => {\n            console.log({msg});\n        })\n\n        /*pubnub.getMessage('neworder', (msg) => {\n            getStats();\n\n            setLatestOrder(true)\n            setPlaySound(true)\n        });\n\n        pubnub.getMessage('routerequest', (dat) => {\n            var agent = dat.userMetadata;\n        \n            var response = dat.message.response;\n            \n            if(response==\"accepted\"){\n                var msg = \"Agent \" +agent.firstname+\" \"+agent.lastname +\" has confirmed the order and is on the way to pick up the items\";\n                showMessage(msg);\n            }\n\n            if(response==\"declined\"){\n                var msg = \"Agent \" +agent.firstname+\" \"+agent.lastname +\" declined the request to deliver the items\";\n                showMessage(msg);\n            }\n            \n        });\n\n        pubnub.getMessage('orderstatus', (msg) => {\n            console.log({msg});\n        });\n \n        /*this.pubnub.getStatus((st) => {\n            this.pubnub.publish({\n                message: 'hello world from react',\n                channel: 'channel1'\n            });\n        });*/\n\n        getStats();\n\n\n        return () => {\n            pubnub.unsubscribe({\n                channels: channels\n            });\n            window.clearInterval(timer_id);\n        }\n    }, [pubnub, channels])\n\n\n    function revealMessage(msg){\n        window.clearInterval(timer_id);\n\n        setMessage(msg)\n        setShowMessage(true)\n\n        startTimer();\n    }\n\n    function startTimer(){\n        timer_id = setInterval(() => {\n            var t = time;\n                t-=1;\n\n                if(t==0){\n                    stopTimer();\n                    setTime(5)\n                    showMessage(false)\n                    setMessage(\"\")\n                }\n                else{\n                    setTime(time)\n                }\n        }, 1000);\n    }\n\n\n    function stopTimer(){\n        window.clearInterval(timer_id);\n    }\n\n    function handleSongFinishedPlaying(){\n        setPlaySound(false)\n    }\n\n    const getStats = async() => {\n        const response = await API.getOrdersStats();\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            setData(response.data.data)\n        }\n    }\n\n    return (\n        <BrowserRouter>\n            <div>\n                <nav className=\"navbar navbar-default navbar-fixed-top\">\n                    <div className=\"container\">\n                        <div className=\"navbar-header\">\n                            <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\n                                <span className=\"sr-only\">Toggle navigation</span>\n                                <span className=\"icon-bar\"></span>\n                                <span className=\"icon-bar\"></span>\n                                <span className=\"icon-bar\"></span>\n                            </button>\n\n                            <div className=\"bartender-logo\">\n                                <span style={online ? greenbg : redbg} className=\"bt-online-indicator laser-inline\"></span> <Link to={'/'} className=\"nav-link laser-inline\"><a className=\"navbar-brand med-blue-text\">Bartender</a></Link>\n                            </div>\n                        </div>\n                        <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n                            <ul className=\"nav navbar-nav navbar-right\">\n                                <li><Link to={'/app'} className=\"nav-link\">Dashboard</Link></li>\n                                <li><Link to={'/app/orders'} className=\"nav-link\">Orders</Link></li>\n                                <li><Link to={'/app/financials'} className=\"nav-link\">Financials</Link></li>\n                                <li><Link to={'/app/drinks'} className=\"nav-link\">Drinks</Link></li>\n                                <li><Link to={'/app/categories'} className=\"nav-link\">Categories</Link></li>\n                                <li><Link to={'/app/agents'} className=\"nav-link\">Agents</Link></li>\n                                <li><Link to={'/app/users'} className=\"nav-link\">Users</Link></li>\n                                <li><Link to={'/app/promocodes'} className=\"nav-link\">Promocodes</Link></li>\n                                {latest_order ? <li><Link to={'/app/orders'} style={zeropadding}><button className=\"bt-btn-nav red-bg\">New</button></Link></li> : \"\"}\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n                \n                <div className=\"bartender-content\">\n                    <Switch>\n                        <Route path='/app' exact component={Home}/>\n                        <Route path='/app/drinks' render = { (props) => <Drinks {...props} showMessage={revealMessage} /> }/>\n                        <Route path='/app/categories' component={Categories}/>\n                        <Route path='/app/orders' render = { (props) => <Orders {...props} showMessage={revealMessage} /> }/>\n                        <Route path='/app/financials' component={Financials}/>\n                        <Route path='/app/agents' component={Agents}/>\n                        <Route path='/app/users' component={Users}/>\n                        <Route path='/app/promocodes' component={Promocodes}/>\n                    </Switch>\n                </div>\n            </div>\n            { data ? <OrderStats data={data}/> : \"\" }\n\n            {showMessage ? <Message message={message} /> : \"\"}\n\n            {play_sound ? <Sound\n                url={alert}\n                playStatus={Sound.status.PLAYING}\n                playFromPosition={1 /* in milliseconds */}\n                onFinishedPlaying={handleSongFinishedPlaying}/> : \"\" }\n        </BrowserRouter>\n        \n    );   \n\n}","/Users/user/Bartender/bartender/client/src/serviceWorker.js",[],"/Users/user/Bartender/bartender/client/src/components/Login.js",["398","399","400"],"import React, { Component } from 'react';\n\nimport logo from '../images/logo_white.png';\n\nimport Loader from '../subcomponents/Loader';\n\nimport {\n    Redirect,\n    withRouter\n  } from 'react-router-dom';\n\n//Our Auth Service\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\n\nconst Auth = new AuthHelperMethods();\n\nconst right = {\n    float: \"right\",\n    marginRight: \"80px\"\n}\n\nconst btwidth = {\n    width: \"400px\",\n    height: \"50px\",\n    borderRadius: \"24px\"\n}\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            error: \"\",\n            isLoading: false\n        }\n\n        this.performLogin = this.performLogin.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n    \n    async performLogin(){\n\n        this.setState({\n            error: \"\"\n        })\n\n        if(this.state.username.length<=0 || this.state.password.length<=0){\n            this.setState({\n                error: \"Please make sure all fields are completed\"\n            })\n            \n            return;\n        }\n\n        this.showLoading();\n\n        const response = await(Auth.login(this.state.username, this.state.password));\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n\n            this.setState({\n                error: \"An error occurred login you in. Please try again later.\"\n            })\n\n            return;\n        }\n\n        if(response && response.data){\n            this.props.history.push('/app')\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"bt-login-div\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-6\">\n                        <div className=\"bt-login-left\">\n                            <div>\n                                <img style={right} src={logo} width=\"200\" heiht=\"200\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 col-sm-6\">\n                        <div className=\"bt-login-right\">\n                            <div>\n                                <h2 className=\"bt-blue-text\">Login</h2>\n                                <br/>\n                                <br/>\n                                <h5 className=\"bt-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\n                                <br/>\n                                <label htmlFor=\"category\"><h5>User Name</h5></label>\n                                <input style={btwidth} required=\"true\" autoComplete=\"off\" id=\"username\" type=\"text\" name=\"username\" onChange={this.onFieldChanged} value={this.state.username} className=\"form-control bt-login-input\" placeholder=\"User Name\"/>\n                                <br/>\n                                <label htmlFor=\"category\"><h5>Password</h5></label>\n                                <input style={btwidth} required=\"true\" autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" onChange={this.onFieldChanged} value={this.state.password} className=\"form-control bt-login-input\" placeholder=\"Password\"/>\n                                <br/>\n                                <br/>\n                                <button className=\"blue-bg bt-btn\" style={btwidth} onClick={this.performLogin}>CONTINUE</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Loader isLoading={this.state.isLoading}/>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login)","/Users/user/Bartender/bartender/client/src/components/Landing.js",["401","402","403","404","405","406","407","408","409","410"],"import React, { Component } from 'react';\nimport { Switch, Link, Redirect } from 'react-router-dom'\n\nexport default class Landing extends Component{\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        return (\n            <div className=\"top-top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-row\">\n                        <div>\n                            <img src=\"./images/logo_white.png\" width=\"287\" height=\"214\"/>\n                            <br/>\n                            <br/>\n                            <h2 className=\"bt-top-h1\"><img src=\"../images/cart.png\" width=\"40\" height=\"40\"/> <b>Purchase your beverages</b></h2>\n                            <br/>\n                            <h2 className=\"bt-top-h1\"><img src=\"./images/delivery.png\" width=\"40\" height=\"40\"/> <b>Get it delivered to your house</b></h2>\n                            <br/>\n                            <h2 className=\"bt-top-h1\"><img src=\"./images/track.png\" width=\"40\" height=\"40\"/> <b>Track your order</b></h2>\n                            <br/>\n                        </div>\n\n                        <div>\n                            <h2 className=\"bt-white-text\"><b>We currently deliver to Lagos:</b></h2>\n                            <br/>\n                            <h3 className=\"bt-white-text\">Lekki</h3>\n                            <h3 className=\"bt-white-text\">Victoria Island</h3>\n                            <h3 className=\"bt-white-text\">Ikoyi</h3>\n                            <br/>\n                            <br/>\n                            <div>\n                                <a href=\"https://play.google.com/store/apps/details?id=com.epicteck.bartender&hl=en\"><img src=\"./images/google_play.png\" width=\"185\"/> </a>\n                                <a href=\"https://apps.apple.com/us/app/bartender-nigeria/id1486608166?ls=1\"><img src=\"./images/app_store.png\" width=\"150\"/></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","/Users/user/Bartender/bartender/client/src/auth/AuthHelperMethods.js",["411"],"import React from 'react'\n\nimport axios from 'axios';\n\nimport decode from 'jwt-decode'\n\nconst login_url = '/login'\n\nexport default class AuthHelperMethods{\n\n    login = (username, password) => {\n        return  this.axios(login_url, {username,password})\n                    .then(res => {\n                        this.setToken(res.data.token); \n                        return res;\n                    })\n                    .catch(err => {\n                        console.log(err);\n                        return \"error\";\n                    })\n    }\n\n    loggedIn = () => {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken(); // Getting token from localstorage\n        return !!token && !this.isTokenExpired(token); // handwaiving here\n    };\n\n    isTokenExpired = token => {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n            // Checking if token is expired.\n            return true;\n            } else return false;\n        } catch (err) {\n            console.log(\"expired check failed! Line 42: AuthService.js\");\n            return false;\n        }\n    };\n\n    setToken = idToken => {\n        // Saves user token to localStorage\n        localStorage.setItem(\"id_token\", idToken);\n    };\n\n    getToken = () => {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem(\"id_token\");\n    };\n\n    logout = () => {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem(\"id_token\");\n    };\n\n    getConfirm = () => {\n        // Using jwt-decode npm package to decode the token\n        let answer = decode(this.getToken());\n        console.log(\"Recieved answer!\");\n        return answer;\n    };\n    \n    axios = (url, data) => {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        };\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers[\"Authorization\"] = \"Bearer:\" + this.getToken();\n        }\n\n        return axios({\n            url:url,\n            method: \"post\",\n            data: data, \n            baseURL: 'https://vast-wave-93458.herokuapp.com/admin',\n            //baseURL: 'https://api.bartender247ng.com/admin',\n            //baseURL: ' http://localhost:3777/admin',\n            timeout: 30000,\n            headers: headers\n        })\n        .then(this._checkStatus)\n        .then(response => response)\n        .catch(err => err)\n    };\n\n    _checkStatus = response => {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) {\n            // Success status lies between 200 to 300\n            return response;\n        } else {\n            var error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n        }\n    };\n\n}","/Users/user/Bartender/bartender/client/src/components/Drinks.js",["412","413","414","415","416","417","418"],"import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport AddDrink from '../subcomponents/AddDrink';\nimport EditDrink from '../subcomponents/EditDrink';\n\nimport Drink from '../subcomponents/Drink';\n\nimport Loader from '../subcomponents/Loader';\nimport ConfirmAction from \"../subcomponents/ConfirmAction\";\n\nimport * as API from '../api/Api';\n\nconst left={\n    float: \"left\"\n}\n\nconst right={\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Drinks extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showConfirm: false,\n            title: \"Confirm Delete\",\n            message: \"Are you sure you want to delete the selected drink item ?\",\n            isLoading: true,\n            showAddDrink: false,\n            showEditDrink: false,\n            categories: [],\n            drinks: [],\n            selected_drink: {},\n            city: \"LAGOS\"\n        };\n\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.reloadDrinks = this.reloadDrinks.bind(this);\n        this.showAddDrink = this.showAddDrink.bind(this);\n        this.showEditDrink = this.showEditDrink.bind(this);\n        this.deleteDrink = this.deleteDrink.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.hideConfirm = this.hideConfirm.bind(this);\n        this.showConfirm = this.showConfirm.bind(this);\n        this.yesClicked = this.yesClicked.bind(this);\n        this.noClicked = this.noClicked.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this)\n    }\n\n    async yesClicked(){\n        this.hideConfirm();\n        this.showLoading();\n        const response = await API.deleteDrink(this.state.selected_drink._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.reloadDrinks()  \n        }\n    }\n\n    noClicked(){\n        this.hideConfirm();\n    }\n\n    showConfirm(){\n        this.setState({\n            showConfirm: true\n        })\n    }\n\n    hideConfirm(){\n        this.setState({\n            showConfirm: false\n        })\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        this.showLoading()\n        const response = await API.getCategories(this.state.city);\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                categories: response.data\n            })   \n        }\n\n        const response1 = await API.getDrinks(this.state.city);\n        this.hideLoading();\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                drinks: response1.data\n            })   \n        }\n    }\n\n    async reloadDrinks(){\n        this.handleCloseModal();\n        this.showLoading();\n        const response = await API.getDrinks(this.state.city);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                drinks: response.data\n            })   \n        }\n    }\n\n    handleCloseModal () {\n        this.setState({ \n            showAddDrink: false,\n            showEditDrink: false \n        });\n    }\n\n    showAddDrink(){\n        this.setState({\n            showAddDrink: true\n        })\n    }\n\n    showEditDrink(e,drink){\n        this.setState({\n            showEditDrink: true,\n            selected_drink: drink\n        });\n\n        e.preventDefault();\n    }\n\n    deleteDrink(e, drink){\n        e.preventDefault();\n\n        this.setState({\n            selected_drink: drink\n        });\n        this.showConfirm();\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        //load the drinks based on the category selected\n        this.reloadDrinks()\n\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\">\n                        <h5 className=\"text-left\" style={left}>{this.state.drinks.length} Drinks</h5>\n\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n\n                        <button onClick={this.showAddDrink} className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i> Add Drink</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.drinks.map(drink => {\n                                return <Drink key={drink._id} editClicked={this.showEditDrink} deleteDrink={this.deleteDrink} drink={drink}/>\n                            })\n                        }\n                    </div>\n                </div>\n                <Loader isLoading={this.state.isLoading}/>\n\n                <ConfirmAction yesClicked={this.yesClicked} noClicked={this.noClicked} showConfirm={this.state.showConfirm} title={this.state.title} message={this.state.message}/>\n                \n                { this.state.showAddDrink ? <AddDrink showLoading={this.showLoading} hideLoading={this.hideLoading} categories={this.state.categories}  handleCloseModal={this. handleCloseModal} showAddDrink={this.state.showAddDrink} reloadDrinks={this.reloadDrinks}/> : \"\" }\n                \n                {\n                    this.state.showEditDrink ? <EditDrink showLoading={this.showLoading} hideLoading={this.hideLoading} drink={this.state.selected_drink} categories={this.state.categories}  handleCloseModal={this. handleCloseModal} showEditDrink={this.state.showEditDrink} reloadDrinks={this.reloadDrinks}/> : \"\"\n                }\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/components/Orders.js",["419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"import React, { Component } from 'react';\n\nimport Order from '../subcomponents/Order';\n\nimport OrderItems from '../subcomponents/OrderItems';\nimport AssignAgent from '../subcomponents/AssignAgent';\nimport Loader from '../subcomponents/Loader';\nimport ViewAgent  from '../subcomponents/ViewAgent'\nimport ConfirmAction from \"../subcomponents/ConfirmAction\";\nimport OrderStatus from \"../subcomponents/OrderStatus\";\n\nimport { BottomScrollListener } from 'react-bottom-scroll-listener'\n\nimport PubNub from 'pubnub';\nimport { PubNubProvider, usePubNub } from 'pubnub-react';\n\nimport * as API from '../api/Api';\n\nconst left = {\n    float: \"left\"\n}\n\nconst right = {\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nconst btn_style = {\n    marginLeft: \"8px\",\n    marginRight: \"8px\",\n    width: \"120px\"\n}\n\nconst btn_grey = {\n    background: \"#797d7f\",\n    marginLeft: \"8px\",\n    marginRight: \"8px\",\n    width: \"120px\"\n}\n\nconst btn_blue = {\n    background: \"#2E86C1\",\n    marginLeft: \"8px\",\n    marginRight: \"8px\",\n    width: \"120px\"\n}\n\nconst pubnub = new PubNub({\n    publishKey: 'pub-c-da5b31c8-45d5-4018-82be-843221a3b91c',\n    subscribeKey: 'sub-c-de1f05de-af97-11e9-a732-8a2b99383297',\n    uuid: 'Bartender247ng'\n});\n\nexport default function Orders() {\n    return (\n      <PubNubProvider client={pubnub}>\n        <OrdersContent />\n      </PubNubProvider>\n    );\n}\n\nclass OrdersContent extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showConfirm: false,\n            title: \"Confirm Order Fulfillment\",\n            message: \"Please confirm that you want to mark this order as completed, this cant be undone.\",\n            isLoading: true,\n            channels: [\"neworder\", \"orderstatus\", \"routerequest\"],\n            total_count:0,\n            orders: [],\n            agents: [],\n            showOrderStatus: false,\n            orderStatusAgent: {},\n            showOrderItems: false,\n            showAgentsToAssign: false,\n            showAgent: false,\n            showInvoice: false,\n            selected_order: {},\n            selected_agent: {},\n            order_type: \"all\",\n            city: \"LAGOS\"\n        }\n\n        /*this.pubnub = new PubNubReact({\n            publishKey: 'pub-c-da5b31c8-45d5-4018-82be-843221a3b91c',\n            subscribeKey: 'sub-c-de1f05de-af97-11e9-a732-8a2b99383297'\n        });*/\n\n        this.pubnub.init(this);\n\n        this.showOrderItems = this.showOrderItems.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.agentSelected = this.agentSelected.bind(this);\n        this.showAgentsToAssign = this.showAgentsToAssign.bind(this);\n        this.removeAgentFromRoute = this.removeAgentFromRoute.bind(this);\n        this.getAgents = this.getAgents.bind(this);\n\n        this.getOrders = this.getOrders.bind(this);\n        this.getCompleted = this.getCompleted.bind(this);\n        this.getPending = this.getPending.bind(this);\n        this.getCount = this.getCount.bind(this);\n\n        this.markOrderAsFulfilled = this.markOrderAsFulfilled.bind(this);\n        this.markOrderAsFulfilledWithId = this.markOrderAsFulfilledWithId.bind(this);\n        this.closeOrderStatus = this.closeOrderStatus.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.hideConfirm = this.hideConfirm.bind(this);\n        this.showConfirm = this.showConfirm.bind(this);\n        this.yesClicked = this.yesClicked.bind(this);\n        this.noClicked = this.noClicked.bind(this);\n        this.showAgent = this.showAgent.bind(this);\n        this.hideAgent = this.hideAgent.bind(this);\n    }\n\n    async yesClicked(){\n        this.hideConfirm();\n        this.showLoading();\n\n        const response = await API.fulfillOrder(this.state.selected_order._id);\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var orders = state.orders;\n\n                orders.splice(state.orders.indexOf(state.selected_order),1,response.data);\n\n                return {\n                    orders: orders,\n                    selected_order: {}\n                }\n            })\n\n            this.getAgents();\n        }\n    }\n    \n    noClicked(){\n        this.hideConfirm();\n    }\n\n    showConfirm(order){\n        this.setState({\n            selected_order: order,\n            showConfirm: true\n        })\n    }\n\n    hideConfirm(){\n        this.setState({\n            showConfirm: false\n        })\n    }\n\n    markOrderAsFulfilled(e,order){\n        this.showConfirm(order);\n    }\n\n    async markOrderAsFulfilledWithId(e,id){\n        this.showLoading();\n\n        const response = await API.fulfillOrder(id);\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var orders = state.orders;\n\n                this.props.showMessage(\"Order has been successfully fulfilled\");\n\n                orders.map(order => {\n                    if(order._id === id){\n                        orders.splice(state.orders.indexOf(order),1,response.data);\n                    }\n                })\n                \n                return {\n                    showOrderStatus: false,\n                    orderStatusAgent: {},\n                    orders: orders\n                }\n            })\n\n            this.getAgents();\n        }\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    showAgent(e, order){\n        this.setState({\n            selected_agent: order.agent,\n            showAgent: true\n        })\n    }\n\n    hideAgent(){\n        this.setState({\n            showAgent: false\n        })\n    }\n\n    handleOnDocumentBottom = () => {\n        switch(this.state.order_type){\n            case \"all\":\n                this.getOrders();\n            break;\n            case \"completed\":\n                this.getCompleted();\n            break;\n            case \"pending\":\n                this.getPending()\n            break;\n        }\n    }\n\n    showOrderItems(e,order){\n        this.setState({\n            showOrderItems: true,\n            selected_order: order\n        })\n        e.preventDefault();\n    }\n\n    showAgentsToAssign(e, order){\n        this.setState({\n            showAgentsToAssign: true,\n            selected_order: order\n        })\n        e.preventDefault();\n    }\n\n    async agentSelected(e, agent){\n        e.preventDefault();\n\n        this.showLoading();\n\n        const response = await API.assignAgentToOrder(agent._id, this.state.selected_order._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            //set the selected order to agent assigned \n            this.getAgents();\n            this.props.showMessage(\"Request to fulfill order has been sent to agent\")\n        }\n    }\n\n    async removeAgentFromRoute(e, agent){\n        e.preventDefault();\n\n        this.showLoading();\n\n        const response = await API.removeAgentFromOrder(agent._id, this.state.selected_order._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            //set the selected order to agent assigned\n            this.getAgents();\n            this.props.showMessage(\"Agent was successfully unassigned from order\");\n        }\n    }\n\n    async getAgents(){\n        const response1 = await API.getAgents();\n\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                agents: response1.data\n            })   \n        }\n    }\n\n    showInvoice(order){\n        this.setState({\n            showInvoice: true,\n            selected_order: order\n        })\n    }\n\n    handleCloseModal(){\n        this.setState({\n            showOrderItems: false,\n            showAgentsToAssign: false,\n            showInvoice: false\n        })\n    }\n\n    closeOrderStatus(){\n        this.setState({\n            showOrderStatus: false,\n            orderStatusAgent: {}\n        })\n    }\n\n    async getOrders(){\n        this.showLoading();\n\n        const response = await API.getOrders((this.state.order_type === \"all\") ? this.state.orders.length : 0, this.state.city);\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n\n            this.setState({\n                order_type: \"all\"\n            });\n\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.orders.length>0){\n                    if(state.order_type === \"all\"){\n                        var orders = state.orders.concat(response.data);\n\n                        return {\n                            selected_order: {},\n                            orders: orders,\n                            order_type: \"all\"\n                        }\n                    }\n                    else{\n                        return {\n                            selected_order: {},\n                            orders: response.data,\n                            order_type: \"all\"\n                        }\n                    }\n                }\n                else{\n                    return {\n                        selected_order: {},\n                        orders: response.data,\n                        order_type: \"all\"\n                    }\n                }\n            })\n        }\n\n        this.getCount();\n    }\n\n    async getCompleted(){\n        this.showLoading();\n\n        const response = await API.getCompletedOrders( (this.state.order_type === \"completed\") ? this.state.orders.length : 0, this.state.city );\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n\n            this.setState({\n                order_type: \"completed\"\n            });\n\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.orders.length>0){\n                    if(state.order_type === \"completed\"){\n                        var orders = state.orders.concat(response.data);\n\n                        return {\n                            selected_order: {},\n                            orders: orders,\n                            order_type: \"completed\"\n                        }\n                    }\n                    else{\n                        return {\n                            selected_order: {},\n                            orders: response.data,\n                            order_type: \"completed\"\n                        }\n                    }\n                }\n                else{\n                    return {\n                        selected_order: {},\n                        orders: response.data,\n                        order_type: \"completed\"\n                    }\n                }\n            })\n        }\n\n        this.getCount();\n    }\n\n    async getPending(){\n        this.showLoading();\n        \n        const response = await API.getPendingOrders( (this.state.order_type === \"pending\") ? this.state.orders.length : 0, this.state.city );\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n\n            this.setState({\n                order_type: \"pending\"\n            });\n\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.orders.length>0){\n                    if(state.order_type === \"pending\"){\n                        var orders = state.orders.concat(response.data);\n\n                        return {\n                            selected_order: {},\n                            orders: orders,\n                            order_type: \"pending\"\n                        }\n                    }\n                    else{\n                        return {\n                            selected_order: {},\n                            orders: response.data,\n                            order_type: \"pending\"\n                        }\n                    }\n                }\n                else{\n                    return {\n                        selected_order: {},\n                        orders: response.data,\n                        order_type: \"pending\"\n                    }\n                }\n            })\n        }\n\n        this.getCount();\n    }\n\n    async getCount(){\n        //orders count\n        const response1 = await API.getOrdersCount(this.state.city);\n\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                total_count: response1.data.count\n            })   \n        }\n    }\n\n    componentDidMount(){\n        this.getOrders();\n\n        this.getAgents();\n\n        this.pubnub.subscribe({\n            channels: this.state.channels\n        });\n        \n        this.pubnub.getMessage('neworder', (msg) => {\n            this.getOrders();\n        });\n\n        this.pubnub.getMessage('orderstatus', (data) => {\n            \n            var agent = data.userMetadata;\n        \n            var response = data.message.status;\n\n            if(response===\"completed\"){\n                this.setState({\n                    showOrderStatus: true,\n                    orderStatusAgent: agent,\n                })\n            }\n\n            if(response===\"abandoned\"){\n                var msg = \"Agent \" +agent.firstname+\" \"+agent.lastname +\" has abandoned his delivery\";\n                this.props.showMessage(msg);\n            }\n        });\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        //load the drinks based on the category selected\n        this.reloadDrinks()\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\" >\n                        <h5 className=\"text-left\" style={left}>{this.state.total_count} Order(s)</h5>\n\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"bt-item-drink-profit shadow\">\n                            <button className=\"laser-inline blue-bg bt-btn\" onClick={this.getOrders} style={ (this.state.order_type === \"all\") ? btn_blue : btn_grey}>all</button>\n                            <button className=\"laser-inline grey-bg bt-btn\" onClick={this.getCompleted} style={ (this.state.order_type === \"completed\") ? btn_blue : btn_grey}>completed</button>\n                            <button className=\"laser-inline grey-bg bt-btn\" onClick={this.getPending} style={ (this.state.order_type === \"pending\") ? btn_blue : btn_grey}>pending</button>\n                        </div>\n                        <br/>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.orders.map(order => {\n                                return <Order key={order._id} showAgent={this.showAgent} order={order} markOrderAsFulfilled={this.markOrderAsFulfilled} showAgentsToAssign={this.showAgentsToAssign} showOrderItems={this.showOrderItems}/>\n                            })\n                        }\n                    </div>\n                </div>\n\n                {\n                    this.state.showAgent ? <ViewAgent agent={this.state.selected_agent} showViewAgent={this.state.showAgent} hideAgent={this.hideAgent}/> : \"\"\n                }\n\n                {\n                    this.state.showOrderStatus ? <OrderStatus agent={this.state.orderStatusAgent} markOrderAsFulfilledWithId={this.markOrderAsFulfilledWithId} closeOrderStatus={this.closeOrderStatus} showOrderStatus={this.state.showOrderStatus} /> : \"\"\n                }\n\n                <ConfirmAction yesClicked={this.yesClicked} noClicked={this.noClicked} showConfirm={this.state.showConfirm} title={this.state.title} message={this.state.message}/>\n\n                <Loader isLoading={this.state.isLoading}/>\n\n                <BottomScrollListener onBottom={this.handleOnDocumentBottom} />\n                \n                { this.state.showAgentsToAssign ? <AssignAgent agents={this.state.agents} removeAgentFromRoute={this.removeAgentFromRoute} showAgentsToAssign={this.state.showAgentsToAssign} handleCloseModal={this.handleCloseModal} agentSelected={this.agentSelected} /> : \"\"}\n               \n                { this.state.showOrderItems ? <OrderItems showOrderItems={this.state.showOrderItems} order={this.state.selected_order} handleCloseModal={this.handleCloseModal}/> : \"\" }\n\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/components/Users.js",["433","434","435"],"import React, { Component } from 'react';\n\nimport { BottomScrollListener } from 'react-bottom-scroll-listener'\n\nimport User from '../subcomponents/User';\n\nimport Loader from '../subcomponents/Loader';\n\nimport * as API from '../api/Api';\n\nconst left = {\n    float: \"left\"\n}\n\nconst right = {\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Users extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            total_count:0,\n            users: []\n        }\n\n        this.getUsers = this.getUsers.bind(this);\n        this.countUsers = this.countUsers.bind(this);\n        this.handleOnDocumentBottom = this.handleOnDocumentBottom.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    handleOnDocumentBottom = () => {\n        this.getUsers();\n    }\n\n    async getUsers(){\n        this.showLoading();\n        const response1 = await API.getUsers(this.state.users.length);\n        this.hideLoading();\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState(state => {\n\n                if(state.users.length>0){\n                    var users = state.users.concat(response1.data);\n\n                    return {\n                        users: users\n                    }\n                }\n                else{\n                    return {\n                        users: response1.data\n                    }\n                }\n            })   \n        }\n    }\n\n    async countUsers(){\n        const response1 = await API.countUsers(this.state.users.length);\n\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                total_count: response1.data.count\n            })   \n        }\n    }\n\n    componentDidMount(){\n        this.getUsers();\n        this.countUsers();\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h5 className=\"text-left\" style={left}>{this.state.total_count} User(s)</h5>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.users.map(user => {\n                                return <User key={user._id} user={user}/>\n                            })\n                        }\n                    </div>\n                </div>\n                <Loader isLoading={this.state.isLoading}/>\n                <BottomScrollListener onBottom={this.handleOnDocumentBottom} />\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/components/Categories.js",["436","437","438","439"],"import React, { Component } from 'react';\n\nimport AddCategory from '../subcomponents/AddCategory';\nimport EditCategory from '../subcomponents/EditCategory';\nimport Category from '../subcomponents/Category';\n\nimport Loader from '../subcomponents/Loader';\n\nimport * as API from '../api/Api';\n\nconst left={\n    float: \"left\"\n}\n\nconst right={\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Categories extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showAddCategory: false,\n            showEditCategory: false,\n            categories: [],\n            selected_category: {},\n            isLoading: true,\n        };\n\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.reloadCategories = this.reloadCategories.bind(this);\n        this.showAddCategory = this.showAddCategory.bind(this);\n        this.editClicked = this.editClicked.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        const response = await API.getCategories();\n\n        this.hideLoading()\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                categories: response.data\n            })   \n        }\n    }\n\n    handleCloseModal () {\n        this.setState({ \n            showAddCategory: false,\n            showEditCategory: false,\n            selected_category: null\n        });\n    }\n\n    async reloadCategories(){\n        this.handleCloseModal();\n\n        this.showLoading()\n\n        const response = await API.getCategories();\n\n        this.hideLoading()\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                categories: response.data\n            })   \n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.value;\n\n        this.setState({\n            selected_category: value\n        });\n    }\n\n    editClicked(e, category){\n        \n        this.setState({\n            showEditCategory: true,\n            selected_category: category\n        })\n\n        e.preventDefault();\n    }\n\n    showAddCategory(){\n        this.setState({\n            showAddCategory: true\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h5 className=\"text-center\" style={left}>{this.state.categories.length} Categories</h5>\n                        \n                        <button onClick={this.showAddCategory} className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i> Add Category</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.categories.map(category => {\n                                return <Category key={category._id} category={category} editClicked={this.editClicked}/>\n                            })\n                        }\n                    </div>\n                </div>\n                \n                <AddCategory  handleCloseModal={this. handleCloseModal} showAddCategory={this.state.showAddCategory} reloadCategories={this.reloadCategories}/>\n                { this.state.showEditCategory && <EditCategory showLoading={this.showLoading} hideLoading={this.hideLoading} category={this.state.selected_category}  handleCloseModal={this. handleCloseModal}  showEditCategory={this.state.showEditCategory} onFieldChanged={this.onFieldChanged} reloadCategories={this.reloadCategories}/> }\n                <Loader isLoading={this.state.isLoading}/>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/components/Home.js",["440","441","442","443","444","445","446","447","448","449","450","451","452","453"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport category_img from '../images/categories.png' \nimport drink_img from '../images/drinks.png' \nimport orders_img from '../images/order.png' \nimport users_img from '../images/user.png' \nimport agents_img from '../images/agent.png' \nimport promo_img from '../images/promo.png' \n\nimport * as Utils from '../utils/Utils';\n\nimport * as API from '../api/Api';\n\nconst margin={\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Home extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            orders_count: 0,\n            drinks_count: 0,\n            categories_count: 0,\n            agents_count: 0,\n            users_count: 0,\n            promocodes_count: 0,\n            finance: 0\n        };\n    }\n\n    async componentDidMount(){\n        //orders\n        const res = await API.getFinancials();\n        \n        if(res==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(res && res.data){\n            this.setState({\n                finance: res.data\n            })   \n        }\n\n        //orders\n        const response = await API.getOrdersCount();\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                orders_count: response.data.count\n            })   \n        }\n\n\n        //agents\n        const response1 = await API.countAgents();\n\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                agents_count: response1.data.count\n            })   \n        }\n\n\n        //categories\n        const response2 = await API.countCategories();\n\n        if(response2==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response2 && response2.data){\n            this.setState({\n                categories_count: response2.data.count\n            })   \n        }\n\n\n        //drinks\n        const response3 = await API.countDrinks();\n\n        if(response3==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response3 && response3.data){\n            this.setState({\n                drinks_count: response3.data.count\n            })   \n        }\n\n\n        //users\n        const response4 = await API.countUsers();\n\n        if(response4==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response4 && response4.data){\n            this.setState({\n                users_count: response4.data.count\n            })   \n        }\n\n\n        //promocodes\n        const response5 = await API.getPromocodesCount();\n\n        if(response5==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response5 && response5.data){\n            this.setState({\n                promocodes_count: response5.data.count\n            })   \n        }\n    }\n\n    render(){\n\n        \n\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-item-drink-profit shadow\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Revenue - {Utils.getAmount(this.state.finance.revenue)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Profit - {Utils.getAmount(this.state.finance.profit)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Tax - {Utils.getAmount(this.state.finance.tax)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Expennses - {Utils.getAmount(this.state.finance.expenses)}</h5>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6 col-xs-6\">\n                                <Link to={'/app/financials'} className=\"nav-link link blue-text text-left\"><h5>View Break Down</h5></Link>\n                            </div>\n                        </div>\n                    </div>\n                    <br/>\n                    <div className=\"bt-item shadow\">\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <Link to={'/app/orders'} className=\"nav-link white-text link\">\n                                    <div className=\"bt-home-item green-bg shadow\">\n                                        <img src={orders_img} width=\"50\" height=\"50\"/>\n                                        <h4 className=\"text-right\">{this.state.orders_count}</h4>\n                                        <h4 className=\"text-center\">Orders</h4>\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <Link to={'/app/drinks'} className=\"nav-link white-text link\">\n                                    <div className=\"bt-home-item blue-bg shadow\">\n                                        <img  src={drink_img} width=\"50\" height=\"50\"/>\n                                        <h4 className=\"text-right\">{this.state.drinks_count}</h4>\n                                        <h4 className=\"text-center\">Drinks</h4>\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <Link to={'/app/categories'} className=\"nav-link white-text link\">\n                                    <div className=\"bt-home-item yellow-bg shadow\">\n                                        <img src={category_img} width=\"50\" height=\"50\"/>\n                                        <h4 className=\"text-right\">{this.state.categories_count}</h4>\n                                        <h4 className=\"text-center\">Categories</h4>\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <Link to={'/app/agents'} className=\"nav-link white-text link\">\n                                    <div className=\"bt-home-item red-bg shadow\">\n                                        <img src={agents_img} width=\"50\" height=\"50\"/>\n                                        <h4 className=\"text-right\">{this.state.agents_count}</h4>\n                                        <h4 className=\"text-center\">Agents</h4>\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <Link to={'/app/users'} className=\"nav-link white-text link\">\n                                    <div className=\"bt-home-item purple-bg shadow\">\n                                        <img src={users_img} width=\"50\" height=\"50\"/>\n                                        <h4 className=\"text-right\">{this.state.users_count}</h4>\n                                        <h4 className=\"text-center\">Users</h4>\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <Link to={'/app/promocodes'} className=\"nav-link white-text link\">\n                                    <div className=\"bt-home-item black-bg shadow\">\n                                        <img src={promo_img} width=\"50\" height=\"50\"/>\n                                        <h4 className=\"text-right\">{this.state.promocodes_count}</h4>\n                                        <h4 className=\"text-center\">Promocodes</h4>\n                                    </div>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/components/Agents.js",["454","455","456","457","458"],"import React, { Component } from 'react';\n\nimport Agent from '../subcomponents/Agent';\nimport AddAgent from '../subcomponents/AddAgent';\nimport EditAgent from '../subcomponents/EditAgent';\n\nimport Loader from '../subcomponents/Loader';\nimport ConfirmAction from \"../subcomponents/ConfirmAction\";\n\nimport * as API from '../api/Api';\n\nconst left={\n    float: \"left\"\n}\n\nconst right={\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Agents extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            showConfirm: false,\n            title: \"Confirm Delete\",\n            message: \"Are you sure you want to delete the selected agent profile ?\",\n            isLoading: true,\n            showAddAgent: false,\n            showEditAgent: false,\n            selected_agent: {},\n            agents: []\n        };\n\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.reloadAgents = this.reloadAgents.bind(this);\n        this.showAddAgent = this.showAddAgent.bind(this);\n        this.showEditAgent = this.showEditAgent.bind(this);\n        this.deleteAgent = this.deleteAgent.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.hideConfirm = this.hideConfirm.bind(this);\n        this.showConfirm = this.showConfirm.bind(this);\n        this.yesClicked = this.yesClicked.bind(this);\n        this.noClicked = this.noClicked.bind(this);\n    }\n\n    async yesClicked(){\n        this.hideConfirm();\n        this.showLoading();\n        const response = await API.deleteAgent(this.state.selected_agent._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.reloadAgents()  \n        }\n    }\n\n    noClicked(){\n        this.hideConfirm();\n    }\n\n    showConfirm(){\n        this.setState({\n            showConfirm: true\n        })\n    }\n\n    hideConfirm(){\n        this.setState({\n            showConfirm: false\n        })\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        this.showLoading();\n        const response = await API.getAgents();\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                agents: response.data\n            })   \n        }\n    }\n\n    async reloadAgents(){\n        this.handleCloseModal();\n\n        const response = await API.getAgents();\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                agents: response.data\n            })   \n        }\n    }\n\n    handleCloseModal () {\n        this.setState({ \n            showAddAgent: false,\n            showEditAgent: false,\n        });\n    }\n\n    showAddAgent(){\n        this.setState({\n            showAddAgent: true\n        })\n    }\n\n    showEditAgent(e, agent){\n        this.setState({\n            showEditAgent: true,\n            selected_agent: agent\n        })\n\n        e.preventDefault()\n    }\n\n    deleteAgent(e, agent){\n        e.preventDefault();\n\n        this.setState({\n            selected_agent: agent\n        });\n        this.showConfirm();\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h5 className=\"text-left\" style={left}>{this.state.agents.length} Agents</h5>\n\n                        <button onClick={this.showAddAgent} className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i> Add Agent</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.agents.map(agent => {\n                                return <Agent key={agent._id} agent={agent} deleteAgent={this.deleteAgent} editClicked={this.showEditAgent}/>\n                            })\n                        }\n                    </div>\n                </div>\n\n                <Loader isLoading={this.state.isLoading}/>\n\n                <ConfirmAction yesClicked={this.yesClicked} noClicked={this.noClicked} showConfirm={this.state.showConfirm} title={this.state.title} message={this.state.message}/>\n\n                <AddAgent showLoading={this.showLoading} hideLoading={this.hideLoading}  handleCloseModal={this. handleCloseModal} showAddAgent={this.state.showAddAgent} reloadAgents={this.reloadAgents}/>\n\n                {\n                    this.state.showEditAgent ? <EditAgent agent={this.state.selected_agent} handleCloseModal={this. handleCloseModal} showEditAgent={this.state.showEditAgent} reloadAgents={this.reloadAgents}/> : \"\"\n                }\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/components/Promocodes.js",["459","460","461","462","463","464","465","466"],"/Users/user/Bartender/bartender/client/src/components/Financials.js",["467","468"],"import React, { Component } from 'react';\n\nimport * as Utils from '../utils/Utils';\n\nimport * as API from '../api/Api';\nimport Loader from '../subcomponents/Loader';\n\nexport default class Financials extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            financials: [],\n            finance: 0,\n            city: \"LAGOS\"\n        }\n\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this)\n        this.loadFinancials = this.loadFinancials.bind(this)\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        \n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        //load the drinks based on the category selected\n        this.loadFinancials()\n    }\n\n    loadFinancials = async() => {\n        this.showLoading();\n        //orders\n        const res = await API.getFinancials(this.state.city);\n        this.hideLoading();\n        if(res==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(res && res.data){\n            this.setState({\n                finance: res.data\n            })   \n        }\n\n\n        this.showLoading();\n        const response = await API.getMonthlyFinancials(this.state.city);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                financials: response.data\n            })   \n        }\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\">\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"ALL\">All</option>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"bt-item-drink-profit shadow\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Revenue - {Utils.getAmount(this.state.finance.revenue)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Profit - {Utils.getAmount(this.state.finance.profit)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Tax - {Utils.getAmount(this.state.finance.tax)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Expenses - {Utils.getAmount(this.state.finance.expenses)}</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                        {\n                            this.state.financials.map((fin,index) => {\n                                return <div key={index} className=\"col-md-6 col-sm-6\">\n                                            <div className=\"bt-item shadow\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-3 col-sm-3\">\n                                                        <h4 className=\"bt-blue-text\">{Utils.getMonth(fin._id.month)}</h4>\n                                                        <h5>{fin._id.year}</h5>\n                                                    </div>\n                                                    <div className=\"col-md-4 col-sm-4\">\n                                                        <h5>Revenue - {Utils.getAmount(fin.revenue)}</h5>\n                                                        <h5>Orders - {fin.orders}</h5>\n                                                    </div>\n                                                    <div className=\"col-md-5 col-sm-5\">\n                                                        <h5>Tax - {Utils.getAmount(fin.tax)}</h5>\n                                                        <h5>Profit - {Utils.getAmount(fin.profit)}</h5>\n                                                        <h5>Expenses - {Utils.getAmount(fin.expenses)}</h5>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                       </div>\n                            })\n                        }\n                    </div>\n                </div>\n                <Loader isLoading={this.state.isLoading}/>\n            </div>\n        )\n    }\n\n}","/Users/user/Bartender/bartender/client/src/auth/withAuth.js",["469","470"],"import React, { Component } from \"react\";\nimport AuthHelperMethods from \"./AuthHelperMethods\";\n\nimport { withRouter } from 'react-router-dom';\n\nexport default function withAuth(AuthComponent) {\n    const Auth = new AuthHelperMethods();\n  \n    return class AuthWrapped extends Component {\n      state = {\n        confirm: null,\n        loaded: false\n      };\n  \n      /* In the componentDid<ount, we would want to do a couple of important tasks in order to verify the current users authentication status\n      prior to granting them enterance into the app. */\n      componentDidMount() {\n        if (!Auth.loggedIn()) {\n          window.location = '/login';\n        } else {\n          /* Try to get confirmation message from the Auth helper. */\n          try {\n            const confirm = Auth.getConfirm();\n            console.log(\"confirmation is:\", confirm);\n            this.setState({\n              confirm: confirm,\n              loaded: true\n            });\n          } catch (err) {\n            /* Oh snap! Looks like there's an error so we'll print it out and log the user out for security reasons. */\n            console.log(err);\n            Auth.logout();\n            window.location = '/login';\n          }\n        }\n      }\n  \n      render() {\n        if (this.state.loaded == true) {\n          if (this.state.confirm) {\n            console.log(\"confirmed!\");\n            return (\n              /* component that is currently being wrapper(App.js) */\n              <AuthComponent\n                history={this.props.history}\n                confirm={this.state.confirm}\n              />\n            );\n          } else {\n            console.log(\"not confirmed!\");\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    };\n\n  }","/Users/user/Bartender/bartender/client/src/subcomponents/OrderStats.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/Message.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/Loader.js",[],"/Users/user/Bartender/bartender/client/src/api/Api.js",["471"],"\n//Our Auth Service\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\n\nconst Auth = new AuthHelperMethods();\n\nconst Axios = Auth.axios;\n\nconst drinksUrl = '/drinks'\nconst createDrinkUrl = '/drinks/create'\nconst deleteDrinkUrl = '/drinks/delete'\nconst editDrinkUrl = '/drinks/edit'\nconst countDrinksUrl = '/drinks/count'\n\nconst categoriesUrl = '/categories'\nconst createCategoryUrl = '/categories/create'\nconst deleteCategoryUrl = '/categories/delete'\nconst editCategoryUrl = '/categories/edit'\nconst countCategoriesUrl = '/categories/count'\n\nconst agentsUrl = '/agents'\nconst createAgentUrl = '/agents/create'\nconst deleteAgentUrl = '/agents/delete'\nconst editAgentUrl = '/agents/edit'\nconst countAgentsUrl = '/agents/count'\n\nconst ordersUrl = '/orders'\nconst ordersCompletedUrl = '/orders/completed'\nconst ordersPendingUrl = '/orders/pending'\nconst ordersCountUrl = '/orders/count'\nconst ordersAssignAgentUrl = '/orders/assign_agent'\nconst ordersRemoveAgentUrl = '/orders/remove_agent'\nconst orderStatsUrl = '/orders/stats'\nconst orderFulfillUrl = '/orders/fulfill'\n\nconst uploadAgentIdUrl = '/uploads/agentid';\nconst uploadAgentAvatarUrl = '/uploads/agentavatar';\nconst uploadDrinkImageUrl='/uploads/drinkimage'; \n\nconst financialsUrl = \"/financials\";\nconst monthlyFinancialsUrl = \"/financials/monthly\";\n\nconst promocodeUrl = \"/promocodes\"\nconst promocodeUrlGenerate = \"/promocodes/generate\"\nconst promocodeUrlEdit = \"/promocodes/edit\"\nconst promocodeUrlDelete = \"/promocodes/delete\"\nconst promocodeUrlDeactivate = \"/promocodes/deactivate\"\nconst promocodesCountUrl = \"/promocodes/count\"\n\nconst usersUrl = \"/users\";\nconst countUsersUrl = '/users/count'\n\nexport const getAgents = () => {\n    return  Axios(agentsUrl)\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log({err});\n                    return \"error\";\n                })\n}\n\nexport const createAgent = (data) => {\n    return Axios(createAgentUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editAgent = (data) => {\n    return Axios(editAgentUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deleteAgent = (id) => {\n    return Axios(deleteAgentUrl, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const countAgents = () => {\n    return Axios(countAgentsUrl)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getOrders = (count, city) => {\n    return  Axios(ordersUrl, {count, city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getCompletedOrders = (count, city) => {\n    return  Axios(ordersCompletedUrl, {count, city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getPendingOrders = (count, city) => {\n    return  Axios(ordersPendingUrl, {count, city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const assignAgentToOrder = (agent_id, order_id) => {\n    return  Axios(ordersAssignAgentUrl, {agent_id, order_id})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const removeAgentFromOrder = (agent_id, order_id) => {\n    return  Axios(ordersRemoveAgentUrl, {agent_id, order_id})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getOrdersCount = (city) => {\n    return  Axios(ordersCountUrl, {city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getOrdersStats = (city) => {\n    return  Axios(orderStatsUrl, {city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const fulfillOrder = (id) => {\n    return  Axios(orderFulfillUrl, {id})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getDrinks = (city) => {\n    return  Axios(drinksUrl, {city: city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const createDrink = (data) => {\n    return Axios(createDrinkUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editDrink = (data) => {\n    return Axios(editDrinkUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deleteDrink = (id) => {\n    return Axios(deleteDrinkUrl, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const countDrinks = (city) => {\n    return Axios(countDrinksUrl, {city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getCategories = (city) => {\n    return Axios(categoriesUrl, {city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const createCategory = (name, city) => {\n    return Axios(createCategoryUrl, {name, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editCategory = (id,name, city) => {\n    return Axios(editCategoryUrl, {id,name, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const countCategories = () => {\n    return Axios(countCategoriesUrl)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const uploadDrinkImage = (file) => {\n    return Axios(uploadDrinkImageUrl, file)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const uploadAgentAvatar = (file) => {\n    return Axios(uploadAgentAvatarUrl, file)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const uploadAgentId = (file) => {\n    return Axios(uploadAgentIdUrl, file)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getFinancials = (city) => {\n    return Axios(financialsUrl, {city: city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getMonthlyFinancials = (city) => {\n    return Axios(monthlyFinancialsUrl, {city: city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getPromocodes = (count, city) => {\n    return Axios(promocodeUrl, {count, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const generatePromocodes = (name, usages, percentage, city) => {\n    return Axios(promocodeUrlGenerate, {name, usages, percentage, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editPromocode = (id, name, usages, percentage, city) => {\n    return Axios(promocodeUrlEdit, {id, name, usages, percentage, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deletePromocode = (id) => {\n    return Axios(promocodeUrlDelete, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deactivatePromocode = (id) => {\n    return Axios(promocodeUrlDeactivate, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getPromocodesCount = () => {\n    return  Axios(promocodesCountUrl)\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\n\n\n//Users\nexport const getUsers = (count) => {\n    return  Axios(usersUrl, {count})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const countUsers = () => {\n    return Axios(countUsersUrl)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}","/Users/user/Bartender/bartender/client/src/subcomponents/Drink.js",["472"],"import React from 'react';\n\nimport logo1 from '../images/logo1.png';\n\nimport * as Utils from '../utils/Utils';\n\nexport default function Drink(props){\n\n    return <div className=\"col-md-6 col-sm-6\">\n                <div className=\"shadow bt-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4 col-sm-4\">\n                            <img className=\"bt-center\" id=\"image\" src={(props.drink.image!=null && props.drink.image.length>0) ? props.drink.image : logo1} width=\"60\" height=\"60\"/>\n                        </div>\n                        <div className=\"col-md-5 col-sm-5\">\n                            <h4>{props.drink.name}</h4>\n                            <br/>\n                            <h5>{props.drink.category}</h5>\n                        </div>\n                        <div className=\"col-md-3 col-sm-3\">\n                            <h5>{Utils.getAmount(props.drink.price)} per {props.drink.unit}</h5>\n                            <br/>\n                            <h5>Stock - {props.drink.stock}</h5>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            props.drink.content ? <div className=\"col-md-12 col-sm-12\">\n                                                        <h6>Description - {props.drink.description}</h6>\n                                                        <br/>\n                                                        <h6 className=\"bt-inline\">Content - </h6>\n                                                        {\n                                                            props.drink.content.map(con => {\n                                                                return <h6 className=\"bt-inline\">{con},</h6>\n                                                            })\n                                                        }\n                                                  </div> : \"\" \n                        }\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 col-sm-6\">\n                            <button onClick={e => props.editClicked(e, props.drink)} className=\"shadow blue-bg bt-btn bt-inline\">edit</button>\n                            <br/>\n                            <button onClick={e => props.deleteDrink(e, props.drink)} className=\"shadow red-bg bt-btn bt-inline\">delete</button>\n                        </div>\n                    </div>\n                </div>\n           </div>\n\n}","/Users/user/Bartender/bartender/client/src/subcomponents/AddDrink.js",["473"],"import React, {Component} from 'react'\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\n\nimport S3FileUpload from 'react-s3';\n\nimport * as API from '../api/Api';\n\nconst config = {\n    bucketName: process.env.AWS_BUCKET,\n    dirName: 'drinkimages', /* optional */\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_KEY,\n    secretAccessKey: process.env.AWS_SECRET,\n}\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n \nReactModal.setAppElement('#main');\n\n\nexport default class AddDrink extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            category: \"\",\n            unit: \"bottle\",\n            price: 0,\n            profit_price: 0,\n            profit: 0,\n            error: \"\",\n            stock: 0,\n            image_uploaded: false,\n            image: null,\n            file: null,\n            description: \"\",\n            content_string: \"\",\n            content: [],\n            city: []\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.createDrink = this.createDrink.bind(this);\n    }\n\n    async createDrink(){\n        this.setState({\n            error: \"\"\n        })\n\n        if(this.state.name.length <= 0 || this.state.name.length > 100){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        }\n\n        if(this.state.price <= 0 || this.state.profit <= 0){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        } \n\n        var cities = []\n\n        cities = this.state.city.map(selection => {\n            return selection.value;\n        })\n\n        var cont = [];\n        \n        if(this.state.content_string.length > 0){\n            if(this.state.content_string.includes(\",\")){\n                cont = this.state.content_string.split(\",\");\n            }\n            else{\n                cont.push(this.state.content_string)\n            }\n        }\n\n        const data = {\n            name: this.state.name,\n            category: this.state.category.length <= 0 ? this.props.categories[0].name : this.state.category,\n            unit: this.state.unit,\n            price: this.state.profit_price,\n            profit: this.state.profit,\n            image: this.state.image,\n            stock: this.state.stock,\n            description: this.state.description,\n            content: cont,\n            city: cities\n        }\n        \n        this.props.showLoading();\n\n        const response = await API.createDrink(data)\n        \n        this.props.hideLoading();\n        \n        if(response===\"error\"){\n            //show error message\n            this.setState({\n                error: \"Your drink could not be added at the moment. try again later\"\n            })\n            return;\n        }\n\n        if(response.data && response.data.response===\"created\"){\n            this.setState({\n                name: \"\",\n                category: \"Special Packages\",\n                unit: \"bottle\",\n                price: 0,\n                profit_price: 0,\n                image_uploaded: false,\n                stock: 0,\n                profit: 0,\n                image: null,\n                file: null,\n                description: \"\",\n                content_string: \"\",\n                content: [],\n                city: []\n            })\n\n            this.props.reloadDrinks();\n        }\n        else{\n            this.setState({\n                error: \"Your drink could not be added at the moment. try again later\"\n            })\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.categories.length){\n            this.setState({\n                category: this.props.categories[0].name\n            })\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n\n            var fd = new FormData();\n            \n            fd.append(\"image\", this.state.file, this.state.file.name);\n            \n            this.props.showLoading();\n\n            S3FileUpload\n                .uploadFile(this.state.file, config)\n                .then( data => { \n                    console.log(data) \n                })\n                .catch(err => { \n                    console.error(err)  \n                    //show error message\n                    this.setState({\n                        error: \"An error occurred uploading the image. Please check the network\"\n                    })\n                    return;\n                })\n\n            /*const response = await API.uploadDrinkImage(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    image: response.data.response,\n                    image_uploaded: true\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n            }*/\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        if(name===\"price\"){\n            if(value>0){\n                var new_value = parseInt(value) + ((this.state.profit / 100) * parseInt(value));\n            }\n\n            this.setState({\n                price: value,\n                profit_price: new_value\n            })\n        }\n        else if(name===\"profit\"){\n            var new_value = parseInt(this.state.price) + ((value / 100) * parseInt(this.state.price));\n\n            this.setState({\n                profit_price: new_value,\n                profit: value\n            })\n        }\n        else{\n            this.setState({\n                [name]: value\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showAddDrink}\n                    className=\"DrinkModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Add Drink</h4>\n                    <br/>\n                    <h5 className=\"bt-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\n                    <br/>\n                    { this.state.image_uploaded ? <h5 className=\"bt-green-text\">Image Successfully Uploaded</h5> : \"\" }\n\n                    <AddEditDrink city={this.state.city} content={this.state.content} description={this.state.description} content_string={this.state.content_string} uploadImage={this.uploadImage} categories={this.props.categories} imageChanged={this.imageChanged} onFieldChanged={this.onFieldChanged} file={this.state.file} name={this.state.name} profit={this.state.profit} profit_price={this.state.profit_price} price={this.state.price} category={this.state.category} unit={this.state.unit} image={this.state.image} stock={this.state.stock}/>\n\n                    <button className=\"laser-inline green-bg bt-btn bt-inline\" style={btn_style_left} onClick={this.createDrink}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn bt-inline\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/subcomponents/ViewAgent.js",["474"],"import React from \"react\"\n\nimport ReactModal from 'react-modal';\n\nimport agent_grey from '../images/agent_grey.png';\n\nconst left = {\n    marginTop: \"50px\",\n    marginLeft: \"20px\"\n}\n\n\nReactModal.setAppElement('#main');\n\nexport default function ViewAgent(props){\n    return <div>\n                <ReactModal \n                    isOpen={props.showViewAgent}\n                    className=\"ViewAgentModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n\n                        <div className=\"row\">\n                            <div className=\"col-md-3 col-sm-3\">\n                                <img className=\"bt-center\" id=\"image\" src={(props.agent.avatar!=null && props.agent.avatar.length>0) ? props.agent.avatar : agent_grey} width=\"60\" height=\"60\"/>\n                            </div>\n                            <div className=\"col-md-5 col-sm-5\">\n                                <h4>{props.agent.firstname} {props.agent.lastname}</h4>\n                            </div>\n                            <div className=\"col-md-4 col-sm-4\">\n                                <h5>{props.agent.phone_number}</h5>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <button style={left} onClick={props.hideAgent} className=\"bt-btn blue-bg\">close</button>\n                        </div>\n\n                </ReactModal>\n           </div>\n}","/Users/user/Bartender/bartender/client/src/subcomponents/EditDrink.js",["475","476","477","478"],"import React, {Component} from 'react'\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport * as Utils from '../utils/Utils';\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n \nReactModal.setAppElement('#main');\n\nexport default class EditDrink extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            category: \"\",\n            unit: \"bottle\",\n            price: 0,\n            profit: 0,\n            profit_price:0,\n            image: null,\n            description: \"\",\n            content: [],\n            content_string:\"\",\n            stock: 0,\n            city: \"LAGOS\",\n            file: null\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.editDrink = this.editDrink.bind(this);\n    }\n\n    componentDidMount(){\n\n        var contents = \"\";\n        \n        if(this.props.drink.content.length > 0){\n            this.props.drink.content.map(con => {\n                contents+=con+\",\";\n            })\n        }\n\n        this.setState({\n            name: this.props.drink.name,\n            category: this.props.drink.category,\n            unit: this.props.drink.unit,\n            profit: this.props.drink.profit,\n            price: Utils.getTruePrice(this.props.drink.price, this.props.drink.profit),\n            profit_price: this.props.drink.price,\n            image: this.props.drink.image,\n            stock: this.props.drink.stock,\n            content: this.props.drink.content,\n            content_string: contents,\n            description: this.props.drink.description,\n            city: this.props.drink.city ? this.props.drink.city : \"LAGOS\",\n            file: null,\n            category: this.props.categories[0].name\n        })\n    }\n\n    async editDrink(){\n\n        this.setState({\n            error: \"\"\n        })\n\n        if(this.state.name.length <= 0 || this.state.name.length > 100){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n           return;\n        }\n\n        if(this.state.price <= 0 || this.state.profit <= 0){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        } \n\n        var cont = [];\n\n        if(this.state.content_string.length > 0){\n            if(this.state.content_string.includes(\",\")){\n                cont = this.state.content_string.split(\",\");\n            }\n            else{\n                cont.push(this.state.content_string)\n            }\n        }\n\n        const data = {\n            _id: this.props.drink._id,\n            name: this.state.name,\n            category: this.state.category,\n            unit: this.state.unit,\n            profit: this.state.profit,\n            price: this.state.profit_price,\n            image: this.state.image,\n            stock: this.state.stock,\n            description: this.state.description,\n            city: this.state.city,\n            content: cont\n        }\n        \n        const response = await API.editDrink(data)\n        \n        if(response===\"error\"){\n            //show error message\n            this.setState({\n                error: \"The drink could not be edited at the moment. try again later\"\n            })\n            return;\n        }\n\n        if(response.data && response.data.response===\"edited\"){\n            this.setState({\n                name: \"\",\n                category: \"\",\n                unit: \"\",\n                price: 0,\n                profit_price: 0,\n                profit: 0,\n                stock: 0,\n                image: null,\n                file: null,\n                description: \"\",\n                content_string: \"\",\n                city: \"\",\n                content: []\n            })\n\n            this.props.reloadDrinks();\n        }\n        else{\n            this.setState({\n                error: \"An error occurred updating the drink. Please check the network\"\n            })\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n            var fd = new FormData();\n            \n            fd.append(\"image\", this.state.file, this.state.file.name);\n\n            this.props.showLoading();\n            \n            const response = await API.uploadDrinkImage(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    image: response.data.response\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n            }\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        if(name===\"price\"){\n            if(value>0){\n                var new_value = parseInt(value) + ((this.state.profit / 100) * parseInt(value));\n            }\n\n            this.setState({\n                price: value,\n                profit_price: new_value\n            })\n        }\n        else if(name===\"profit\"){\n            var new_value = parseInt(this.state.price) + ((value / 100) * parseInt(this.state.price));\n\n            this.setState({\n                profit_price: new_value,\n                profit: value\n            })\n        }\n        else{\n            this.setState({\n                [name]: value\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showEditDrink}\n                    className=\"DrinkModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Edit Drink</h4>\n                    <br/>\n                    <h5 className=\"bt-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\n                    <br/>\n\n                    <AddEditDrink content={this.state.content} description={this.state.description} content_string={this.state.content_string} uploadImage={this.uploadImage} categories={this.props.categories} imageChanged={this.imageChanged} onFieldChanged={this.onFieldChanged} file={this.state.file} name={this.state.name} profit={this.state.profit} price={this.state.price} profit_price={this.state.profit_price} category={this.state.category} unit={this.state.unit} image={this.state.image} stock={this.state.stock} city={this.state.city}/>\n\n                    <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.editDrink}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/subcomponents/ConfirmAction.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/Order.js",["479","480"],"import React from 'react'\n\nimport * as Utils from '../utils/Utils' \n\nexport default function Order(props){\n\n    //const cart = getCart(props.order.cart);\n\n    return <div className=\"bt-item shadow\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <h5><b>Order No.</b></h5>\n                        <h4>{props.order._id}</h4>\n                        <h5>{Utils.getDate(props.order.created)}</h5>\n                        <br/>\n                        <button onClick={e => props.showOrderItems(e,props.order)} className=\"bt-btn blue-bg\">{props.order.cart.drinkQuantityList.length} items ordered</button>\n                        <h5><b>Total Cost</b></h5>\n                        <h5>{Utils.getAmount(props.order.cart.totalPrice + props.order.cart.tax + props.order.cart.delivery_cost)}</h5>\n                        <br/>\n                        <h5><b>City</b></h5>\n                        <h5>{props.order.city}</h5>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <h5><b>Customer Name</b></h5>\n                        <h5>{props.order.user.firstname} {props.order.user.lastname}</h5>\n                        <br/>\n                        <h5><b>Customer Phone Number</b></h5>\n                        <h5>{props.order.user.phone_number}</h5>\n                        <br/>\n                        <h5><b>Customer Delivery Address</b></h5>\n                        <h5>{props.order.user.delivery_address}</h5>\n                        <br/>\n                        <h5><b>Delivery Date</b></h5>\n                        <h5>{props.order.delivery_date ? props.order.delivery_date : \"\"}</h5>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <br/>\n                        {\n                            props.order.status==\"fulfilled\" ? <h5 className=\"bt-green-text\">Order Completed</h5> : <button onClick={e => props.markOrderAsFulfilled(e,props.order)} className=\"bt-btn blue-bg\">Mark as fulfilled</button>\n                        }  \n                        <br/>\n                        {\n                            (props.order.status!==\"fulfilled\") ? <button onClick={e => props.showAgentsToAssign(e,props.order)} className=\"bt-btn blue-bg\">Assign agent to order</button>  : \"\" \n                        }\n                        <br/>\n                        {\n                            props.order.agent ? <button onClick={e => props.showAgent(e,props.order)} className=\"bt-btn purple-bg\">View Agent</button> : \"\"\n                        }\n                        <br/>\n                        <br/>\n                        {\n                            props.order.status==\"fulfilled\" ? <h5 className=\"bt-black-text\">Invoice Number - {props.order.invoice}</h5> : \"\"\n                        }\n                    </div>\n                </div>\n           </div>\n}","/Users/user/Bartender/bartender/client/src/subcomponents/AssignAgent.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/OrderItems.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/AddCategory.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/OrderStatus.js",["481"],"import React from \"react\"\n\nimport ReactModal from 'react-modal';\n\nimport agent_grey from '../images/agent_grey.png';\n\nconst box_style = {\n    margin: \"16px\"\n}\n\nconst left = {\n    float: \"left\",\n    marginLeft: \"20px\"\n}\n\nexport default function OrderStatus(props){\n    return <div>\n                <ReactModal \n                    isOpen={props.showOrderStatus}\n                    className=\"Modal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Message From Agent</h4>\n                    <button className=\"grey-bg bt-btn pull-right\" style={box_style} onClick={props.closeOrderStatus}>close</button>\n                    <br/>\n                    <br/>\n\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-sm-3\">\n                                <img className=\"bt-center\" id=\"image\" src={(props.agent.avatar!=null && props.agent.avatar.length>0) ? props.agent.avatar : agent_grey} width=\"60\" height=\"60\"/>\n                        </div>\n                        <div className=\"col-md-6 col-sm-6\">\n                            <h5 className=\"black-text\">{props.agent.firstname} {props.agent.lastname} has completed the assigned order </h5>\n                            <h5>Order Number - {props.agent.order}</h5>\n                        </div>\n                        <div className=\"col-md-3 col-sm-3\">\n                            <h5><b>Phone Number</b></h5>\n                            <h5>{props.agent.phone_number}</h5>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <h5><button className=\"green-bg bt-btn\" style={left} onClick={e => props.markOrderAsFulfilledWithId(e, props.agent.order)}>Mark Order as fulfilled</button></h5>\n                    </div>\n\n                </ReactModal>\n           </div>\n}","/Users/user/Bartender/bartender/client/src/subcomponents/User.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/EditCategory.js",["482"],"import React,{Component} from 'react'\n\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport S3FileUpload from 'react-s3';\n\nimport logo1 from '../images/logo1.png';\n\nimport { default as ReactSelect } from \"react-select\";\n\nimport Option from \"./Option\"\n\nconst cityOptions = [\n    { value: \"LAGOS\", label: \"Lagos\" },\n    { value: \"ACCRA\", label: \"Accra\" }\n];\n\n\nconst image_text = \"Add Image with size <= 500 KB\"\n\nconst btn_style_left = {\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n\nconst config = {\n    bucketName: process.env.AWS_BUCKET,\n    dirName: 'categories', /* optional */\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_KEY,\n    secretAccessKey: process.env.AWS_SECRET,\n}\n\nReactModal.setAppElement('#main');\n\nexport default class EditCategory extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            image_url: props.category.image_url,\n            file: null,\n            image_uploaded: false,\n            city: [\"LAGOS\"]\n        }\n\n        this.editCategory = this.editCategory.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({\n            image_url: this.props.category.image_url,\n            city: this.props.category.city ? this.props.category.city : [\"LAGOS\"]\n        })\n    }\n\n    async editCategory(){\n        if(this.state.name.length <= 0 && this.state.name.length > 100){\n           return;\n        }\n\n        const response = await API.editCategory(this.props.category._id,this.state.name, this.state.image_uploaded ? this.state.image_url : \"\" )\n        \n        if(response===\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response.data && response.data.response===\"success\"){\n            this.setState({\n                name: \"\"\n            })\n            this.props.reloadCategories();\n        }\n\n    }\n        \n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image_url: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    uploadImage(){\n        if(this.state.file){\n            S3FileUpload\n                .uploadFile(this.state.file, config)\n                .then(data => { \n                    console.log(data)\n                    this.setState({\n                        image_uploaded: true\n                    })\n                })\n                .catch(err => console.error(err))\n        }\n    }\n\n    render(){\n        return (\n                <ReactModal \n                    isOpen={this.props.showEditCategory}\n                    className=\"EditCategoryModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Edit Category</h4>\n                    <div className=\"bt-item\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <h4>{this.props.category.name}</h4>\n                                <br/>\n                                <label htmlFor=\"unit\"><h6>New Name</h6></label>\n                                <input autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={ this.state.name } onChange={this.onFieldChanged}  placeholder={this.props.category.name}/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <label htmlFor=\"city\"><h6>City</h6></label>\n                                <ReactSelect\n                                    options={cityOptions}\n                                    isMulti\n                                    closeMenuOnSelect={true}\n                                    hideSelectedOptions={false}\n                                    components={{\n                                        Option\n                                    }}\n                                    onChange={this.onFieldChanged}\n                                    allowSelectAll={true}\n                                    value={this.state.city}\n                                    />\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <img className=\"bt-center\" id=\"image\" src={this.state.image_url == null ? logo1 : this.state.image_url} width=\"90\" height=\"90\"/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <h6>{image_text}</h6>\n                                <input className=\"\" type=\"file\" onChange={this.imageChanged}/>\n                                <button className=\"laser-inline green-bg bt-btn\" onClick={this.uploadImage}>Upload Image</button>\n                            </div>\n                        </div>\n                        <br/>\n                        <br/>\n                        <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.editCategory}>save</button>\n                        <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                    </div>\n                </ReactModal>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/subcomponents/Category.js",["483","484"],"import React,{Component} from 'react'\n\nimport logo1 from '../images/logo1.png';\n\nconst btn_style_left = {\n    marginLeft: \"8px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"8px\"\n}\n\nexport default function Category(props){\n    return <div className=\"col-md-4 col-sm-4\">\n                <div className=\"bt-item shadow\" style={{height: \"200px\"}}>\n                    <div className=\"row\">\n                        <div className=\"col-md-5 col-sm-5\">\n                            <h4>{props.category.name}</h4>\n                            <img className=\"bt-center\" id=\"image\" src={props.category.image_url == null ? logo1 : props.category.image_url} width=\"90\" height=\"90\"/>\n                        </div>\n                        <div className=\"col-md-3 col-sm-3\">\n                            <h5>{props.category.drinks_count} Drinks</h5>\n                        </div>\n                        <div className=\"col-md-4 col-sm-4\">\n                            <button className=\"laser-inline blue-bg bt-btn\" onClick={e => props.editClicked(e,props.category)} style={btn_style_left}>edit</button>\n                            <button className=\"laser-inline red-bg bt-btn\" style={btn_style_right}>delete</button>\n                        </div>\n                    </div>\n                </div>\n           </div>\n}","/Users/user/Bartender/bartender/client/src/subcomponents/Agent.js",["485"],"import React from 'react';\n\nimport agent_grey from '../images/agent_grey.png';\n\nexport default function Agent(props){\n\n    return <div className=\"col-md-4 col-sm-4\">\n                <div className=\"shadow bt-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-sm-3\">\n                            <img className=\"bt-center\" id=\"image\" src={(props.agent.avatar!=null && props.agent.avatar.length>0) ? props.agent.avatar : agent_grey} width=\"60\" height=\"60\"/>\n                        </div>\n                        <div className=\"col-md-5 col-sm-5\">\n                            <h4>{props.agent.firstname} {props.agent.lastname}</h4>\n                            <br/>\n                            <h5>{props.agent.phone_number}</h5>\n                        </div>\n                        <div className=\"col-md-4 col-sm-4\">\n                            <button onClick={e => props.editClicked(e, props.agent)} className=\"shadow blue-bg bt-btn\">edit</button>\n                            <br/>\n                            <button onClick={e => props.deleteAgent(e, props.agent)} className=\"shadow red-bg bt-btn\">delete</button>\n                        </div>\n                    </div>\n                </div>\n           </div>\n\n}","/Users/user/Bartender/bartender/client/src/subcomponents/AddAgent.js",["486","487"],"import React, {Component} from 'react'\n\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport AddEditAgent from './AddEditAgent';\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n\nReactModal.setAppElement('#main');\n\nexport default class AddAgent extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            firstname: \"\",\n            lastname: \"\",\n            phone_number: \"\",\n            password: \"\",\n            avatar: null,\n            file: null,\n            ver_file: null,\n            verification_type: \"\",\n            verification_image: null,\n\n            phone_number_1: \"\",\n            address: \"\",\n            email: \"\",\n            referee_name_1: \"\",\n            referee_name_2: \"\",\n            referee_address_1: \"\",\n            referee_address_2: \"\",\n            referee_phone_1: \"\",\n            referee_phone_2: \"\",\n            age: 0,\n            marital_status: \"Single\",\n            gender: \"Male\",\n            bank_name: \"\",\n            account_name: \"\",\n            account_number: \"\"\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.verificationChanged = this.verificationChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.uploadVerification = this.uploadVerification.bind(this);\n        this.createAgent = this.createAgent.bind(this);\n    }\n    \n    async createAgent(){\n        if(this.state.firstname.length <= 0 || this.state.firstname.length > 100){\n           return;\n        }\n\n        if(this.state.lastname.length <= 0 || this.state.lastname.length > 100){\n            return;\n        }\n\n        if(this.state.phone_number.length <= 0 || this.state.phone_number.length > 100){\n            return;\n        }\n\n        if(this.state.password.length <= 0 || this.state.password.length > 100){\n            return;\n        }\n\n        const data = {\n            firstname: this.state.firstname,\n            lastname: this.state.lastname,\n            phone_number: this.state.phone_number,\n            password: this.state.password,\n            avatar: this.state.avatar,\n            verification_type: this.state.verification_type,\n            verification_image: this.state.verification_image,\n            phone_number_1: this.state.phone_number_1,\n            address: this.state.address,\n            email: this.state.email,\n            referee_name_1: this.state.referee_name_1,\n            referee_name_2: this.state.referee_name_2,\n            referee_address_1: this.state.referee_address_1,\n            referee_address_2: this.state.referee_address_2,\n            referee_phone_1: this.state.referee_phone_1,\n            referee_phone_2: this.state.referee_phone_2,\n            age: this.state.age,\n            marital_status: this.state.marital_status,\n            gender: this.state.gender,\n            bank_name: this.state.bank_name,\n            account_name: this.state.account_name,\n            account_number: this.state.account_number\n        }\n        \n        this.props.showLoading();\n\n        const response = await API.createAgent(data)\n        \n        this.props.hideLoading();\n        \n        if(response===\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response.data && response.data.response===\"created\"){\n            this.setState({\n                firstname: \"\",\n                lastname: \"\",\n                phone_number: \"\",\n                password: \"\",\n                avatar: null,\n                file: null,\n                ver_file: null,\n                verification_type: \"\",\n                verification_image: null,\n                phone_number_1: \"\",\n                address: \"\",\n                email: \"\",\n                referee_name_1: \"\",\n                referee_name_2: \"\",\n                referee_address_1: \"\",\n                referee_address_2: \"\",\n                referee_phone_1: \"\",\n                referee_phone_2: \"\",\n                age: 0,\n                marital_status: \"\",\n                gender: \"\",\n                bank_name: \"\",\n                account_name: \"\",\n                account_number: \"\"\n            })\n\n            this.props.reloadAgents();\n        }\n    }\n\n    verificationChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.error_message = \"File is not a Zip File\";\n                return;\n            }\n            \n            if(file.size>256000){\n                //file is too large\n                this.error_message = \"File is too large\";\n                return;\n            }\n    \n            this.setState({\n                ver_file: file,\n                verification_image: URL.createObjectURL(file)\n            });\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.error_message = \"File is not a Zip File\";\n                return;\n            }\n            \n            if(file.size>256000){\n                //file is too large\n                this.error_message = \"File is too large\";\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                avatar: URL.createObjectURL(file)\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n\n            var fd = new FormData();\n            \n            fd.append(\"avatar\", this.state.file, this.state.file.name);\n            \n            this.props.showLoading();\n\n            const response = await API.uploadAgentAvatar(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    avatar: response.data.response\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the file. Please check the network\"\n                })\n            }\n        }\n    }\n\n    async uploadVerification(){\n        if(this.state.ver_file!=null){\n\n            var fd = new FormData();\n\n            fd.append(\"verification_image\", this.state.ver_file, this.state.ver_file.name);\n            fd.append(\"verification_type\", this.state.verification_type);\n            \n            this.props.showLoading();\n\n            const response = await API.uploadAgentId(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    verification_image: response.data.response\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the file. Please check the network\"\n                })\n            }\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showAddAgent}\n                    className=\"AgentModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Add Agent</h4>\n\n                    <AddEditAgent \n                        verification_type={this.state.verification_type} \n                        uploadVerification={this.uploadVerification} \n                        verificationChanged={this.verificationChanged} \n                        uploadImage={this.uploadImage} \n                        imageChanged={this.imageChanged} \n                        onFieldChanged={this.onFieldChanged} \n                        ver_file={this.state.ver_file} \n                        file={this.state.file} \n                        firstname={this.state.firstname} \n                        lastname={this.state.lastname} \n                        password={this.state.password} \n                        phone_number={this.state.phone_number} \n                        avatar={this.state.avatar} \n                        verification_image={this.state.verification_image}\n                        phone_number_1={this.state.phone_number_1}\n                        address={this.state.address}\n                        email={this.state.email}\n                        referee_name_1={this.state.referee_name_1}\n                        referee_name_2={this.state.referee_name_2}\n                        referee_address_1={this.state.referee_address_1}\n                        referee_address_2={this.state.referee_address_2}\n                        referee_phone_1={this.state.referee_phone_1}\n                        referee_phone_2={this.state.referee_phone_2}\n                        age={this.state.age}\n                        marital_status={this.state.marital_status}\n                        gender={this.state.gender}\n                        bank_name={this.state.bank_name}\n                        account_name={this.state.account_name}\n                        account_number={this.state.account_number}/>\n\n                    <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.createAgent}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/subcomponents/EditAgent.js",["488","489"],"import React, {Component} from 'react'\n\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport AddEditAgent from './AddEditAgent';\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n\nReactModal.setAppElement('#main');\n\nexport default class EditAgent extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            firstname: \"\",\n            lastname: \"\",\n            phone_number: \"\",\n            password: \"\",\n            avatar: null,\n            file: null,\n            ver_file: null,\n            verification_type: \"National Id Card\",\n            verification_image:\"\",\n\n            phone_number_1: \"\",\n            address: \"\",\n            email: \"\",\n            referee_name_1: \"\",\n            referee_name_2: \"\",\n            referee_address_1: \"\",\n            referee_address_2: \"\",\n            referee_phone_1: \"\",\n            referee_phone_2: \"\",\n            age: 0,\n            marital_status: \"Single\",\n            gender: \"Male\",\n            bank_name: \"\",\n            account_name: \"\",\n            account_number: \"\"\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.verificationChanged = this.verificationChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.uploadVerification = this.uploadVerification.bind(this);\n        this.editAgent = this.editAgent.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({\n            firstname: this.props.agent.firstname,\n            lastname: this.props.agent.lastname,\n            phone_number: this.props.agent.phone_number,\n            avatar: this.props.agent.avatar,\n            verification_type: this.props.agent.verification_type,\n            verification_image: this.props.agent.verification_image,\n            phone_number_1: this.props.agent.phone_number_1,\n            address: this.props.agent.address,\n            email: this.props.agent.email,\n            referee_name_1: this.props.agent.referee_name_1,\n            referee_name_2: this.props.agent.referee_name_2,\n            referee_address_1: this.props.agent.referee_address_1,\n            referee_address_2: this.props.agent.referee_address_2,\n            referee_phone_1: this.props.agent.referee_phone_1,\n            referee_phone_2: this.props.agent.referee_phone_2,\n            age: this.props.agent.age,\n            marital_status: this.props.agent.marital_status,\n            gender: this.props.agent.gender,\n            bank_name: this.props.agent.bank_name,\n            account_name: this.props.agent.account_name,\n            account_number: this.props.agent.account_number\n        })\n    }\n\n    async editAgent(){\n        if(this.state.firstname.length <= 0 || this.state.firstname.length > 100){\n           return;\n        }\n\n        if(this.state.lastname.length <= 0 || this.state.lastname.length > 100){\n            return;\n        }\n\n        if(this.state.phone_number.length <= 0 || this.state.phone_number.length > 100){\n            return;\n        }\n\n        const data = {\n            _id: this.props.agent._id,\n            firstname: this.state.firstname,\n            lastname: this.state.lastname,\n            phone_number: this.state.phone_number,\n            password: this.state.password,\n            avatar: this.state.avatar,\n            verification_type: this.state.verification_type,\n            verification_image: this.state.verification_image,\n            phone_number_1: this.state.phone_number_1,\n            address: this.state.address,\n            email: this.state.email,\n            referee_name_1: this.state.referee_name_1,\n            referee_name_2: this.state.referee_name_2,\n            referee_address_1: this.state.referee_address_1,\n            referee_address_2: this.state.referee_address_2,\n            referee_phone_1: this.state.referee_phone_1,\n            referee_phone_2: this.state.referee_phone_2,\n            age: this.state.age,\n            marital_status: this.state.marital_status,\n            gender: this.state.gender,\n            bank_name: this.state.bank_name,\n            account_name: this.state.account_name,\n            account_number: this.state.account_number\n        }\n\n        const response = await API.editAgent(data)\n        \n        if(response===\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response.data && response.data.response===\"edited\"){\n            this.setState({\n                firstname: \"\",\n                lastname: \"\",\n                phone_number: \"\",\n                password: \"\",\n                avatar: null,\n                file: null,\n                ver_file: null,\n                verification_type: \"\",\n                verification_image:\"\",\n                phone_number_1: \"\",\n                address: \"\",\n                email: \"\",\n                referee_name_1: \"\",\n                referee_name_2: \"\",\n                referee_address_1: \"\",\n                referee_address_2: \"\",\n                referee_phone_1: \"\",\n                referee_phone_2: \"\",\n                age: 0,\n                marital_status: \"\",\n                gender: \"\",\n                bank_name: \"\",\n                account_name: \"\",\n                account_number: \"\"\n            })\n\n            this.props.reloadAgents();\n        }\n    }\n\n    verificationChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.error_message = \"File is not a Zip File\";\n                return;\n            }\n            \n            if(file.size>256000){\n                //file is too large\n                this.error_message = \"File is too large\";\n                return;\n            }\n    \n            this.setState({\n                ver_file: file,\n                verification_image: URL.createObjectURL(file)\n            });\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.error_message = \"File is not a Zip File\";\n                return;\n            }\n            \n            if(file.size>256000){\n                //file is too large\n                this.error_message = \"File is too large\";\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                avatar: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n\n            var fd = new FormData();\n            \n            fd.append(\"avatar\", this.state.file, this.state.file.name);\n            \n            const response = await API.uploadAgentAvatar(fd);\n\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    avatar: response.data.response\n                })   \n            }\n        }\n    }\n\n    async uploadVerification(){\n        if(this.state.ver_file!=null){\n\n            var fd = new FormData();\n\n            fd.append(\"verification_image\", this.state.ver_file, this.state.ver_file.name);\n            fd.append(\"verification_type\", this.state.verification_type);\n            \n            const response = await API.uploadAgentId(fd);\n\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    verification_image: response.data.response\n                })   \n            }\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showEditAgent}\n                    className=\"AgentModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Edit Agent</h4>\n                    \n                    <AddEditAgent \n                        verification_type={this.state.verification_type} \n                        uploadVerification={this.uploadVerification} \n                        verificationChanged={this.verificationChanged} \n                        uploadImage={this.uploadImage} \n                        imageChanged={this.imageChanged} \n                        onFieldChanged={this.onFieldChanged} \n                        ver_file={this.state.ver_file} \n                        file={this.state.file} \n                        firstname={this.state.firstname} \n                        lastname={this.state.lastname} \n                        password={this.state.password} \n                        phone_number={this.state.phone_number} \n                        avatar={this.state.avatar} \n                        verification_image={this.state.verification_image}\n                        phone_number_1={this.state.phone_number_1}\n                        address={this.state.address}\n                        email={this.state.email}\n                        referee_name_1={this.state.referee_name_1}\n                        referee_name_2={this.state.referee_name_2}\n                        referee_address_1={this.state.referee_address_1}\n                        referee_address_2={this.state.referee_address_2}\n                        referee_phone_1={this.state.referee_phone_1}\n                        referee_phone_2={this.state.referee_phone_2}\n                        age={this.state.age}\n                        marital_status={this.state.marital_status}\n                        gender={this.state.gender}\n                        bank_name={this.state.bank_name}\n                        account_name={this.state.account_name}\n                        account_number={this.state.account_number}/>\n\n                    <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.editAgent}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender/client/src/subcomponents/Promocode.js",["490","491","492"],"import React from 'react'\n\nexport default function(props){\n    return <div className=\"col-md-3 col-sm-3\">\n                <div className=\"shadow bt-item-promo\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 col-sm-6 col-xs-6\">\n                            <h4>{props.promo.code}</h4>\n                            <h5>{props.promo.percentage}% off</h5>\n                            <br/>\n                            {props.promo.status==\"activated\" ? <h5 className=\"bt-blue-text\">{props.promo.status}</h5> : <h5 className=\"bt-red-text\">{props.promo.status}</h5>}\n                        </div>\n                        <div className=\"col-md-5 col-sm-5 col-xs-6\">\n                            <button onClick={e => props.editClicked(e, props.promo)} className=\"shadow red-bg bt-btn\">edit</button>\n                            <br/>\n                            {\n                                props.promo.status == \"activated\" ?\n                                <button onClick={e => props.deactivateClicked(e, props.promo)} className=\"shadow purple-bg bt-btn\">deactivate</button> : \"\"\n                            }\n                        </div>\n                    </div>\n                    <br/>\n                    {<h5 className=\"bt-blue-text\">{props.promo.usages} usages left</h5>}\n                </div>\n           </div>\n}","/Users/user/Bartender/bartender/client/src/subcomponents/GeneratePromocodes.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/EditPromocode.js",[],"/Users/user/Bartender/bartender/client/src/utils/Utils.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507"],"/Users/user/Bartender/bartender/client/src/subcomponents/AddEditDrink.js",["508"],"import React from 'react';\n\nimport logo1 from '../images/logo1.png';\n\nimport * as Utils from '../utils/Utils';\n\nimport { default as ReactSelect } from \"react-select\";\n\nimport Option from \"./Option\"\n\nconst image_text = \"Add Image with size <= 500 KB\"\n\nconst cityOptions = [\n    { value: \"LAGOS\", label: \"Lagos\" },\n    { value: \"ACCRA\", label: \"Accra\" }\n];\n\nexport default function AddEditDrink(props){\n    return  <div className=\"bt-item\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-6\">\n                        <img className=\"bt-center\" id=\"image\" src={props.image == null ? logo1 : props.image} width=\"90\" height=\"90\"/>\n                    </div>\n                    <div className=\"col-md-6 col-sm-6\">\n                        <h6>{image_text}</h6>\n                        <input className=\"\" type=\"file\" onChange={props.imageChanged}/>\n                        <button className=\"laser-inline green-bg bt-btn\" onClick={props.uploadImage}>Upload Image</button>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Name</h6></label>\n                        <input autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={props.name} onChange={props.onFieldChanged}  placeholder=\"Name\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Category</h6></label>\n                        <select className=\"form-control\" id=\"category\" name=\"category\" value={props.category} onChange={props.onFieldChanged}>\n                            {\n                                props.categories.map(cat => {\n                                    return <option key={cat._id}>{cat.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"unit\"><h6>Unit</h6></label>\n                        <select className=\"form-control\" id=\"unit\" name=\"unit\" value={props.unit} onChange={props.onFieldChanged}>\n                            <option>bottle</option>\n                            <option>carton</option>\n                            <option>crate</option>\n                            <option>item</option>\n                        </select>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Description</h6></label>\n                        <input autoComplete=\"off\" id=\"description\" type=\"text\" name=\"description\" className=\"form-control\" value={props.description} onChange={props.onFieldChanged}  placeholder=\"Description\"/>\n                    </div>\n                    <div className=\"col-md-8 col-sm-8\">\n                        <label htmlFor=\"profit\"><h6>Content (Ingredient's or recipe's)</h6></label>\n                        <input autoComplete=\"off\" id=\"content_string\" type=\"text\" name=\"content_string\" className=\"form-control\" value={props.content_string} onChange={props.onFieldChanged}  placeholder=\"seperate contents with a comma\"/>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Price</h6></label>\n                        <input autoComplete=\"off\" id=\"price\" type=\"number\" name=\"price\" className=\"form-control\" value={props.price} onChange={props.onFieldChanged}  placeholder=\"Price\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"profit\"><h6>Profit %</h6></label>\n                        <input autoComplete=\"off\" id=\"profit\" type=\"number\" name=\"profit\" className=\"form-control\" value={props.profit} onChange={props.onFieldChanged}  placeholder=\"Profit %\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Price with profit</h6></label>\n                        <div className=\"bt-item-drink-profit shadow\">\n                            <h5>{Utils.getAmount(props.profit_price)}</h5>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Stock</h6></label>\n                        <input autoComplete=\"off\" id=\"stock\" type=\"number\" name=\"stock\" className=\"form-control\" value={props.stock} onChange={props.onFieldChanged}  placeholder=\"Stock\"/>\n                    </div>\n                    \n                    <div className=\"col-md-6 col-sm-6\">\n                        <br/>\n                        <label htmlFor=\"city\"><h6>City</h6></label>\n                        <ReactSelect\n                            options={cityOptions}\n                            isMulti\n                            closeMenuOnSelect={true}\n                            hideSelectedOptions={false}\n                            components={{\n                                Option\n                            }}\n                            onChange={props.onFieldChanged}\n                            allowSelectAll={true}\n                            value={props.city}\n                            />\n                    </div>\n                </div>\n            </div>\n}","/Users/user/Bartender/bartender/client/src/subcomponents/Option.js",[],"/Users/user/Bartender/bartender/client/src/subcomponents/AddEditAgent.js",["509","510"],"import React from 'react';\n\nimport agent_grey from '../images/agent_grey.png';\nimport id_grey from '../images/id_grey.png';\n\nconst image_text = \"Add Image with size <= 500 KB\"\n\nexport default function AddEditAgent(props){\n    return  <div className=\"bt-item-no-margin\">\n                <div className=\"row\">\n                    <h5 className=\"text-center\"><b>Add Agents Avatar</b></h5>\n                    <div className=\"col-md-6 col-sm-6\">\n                        <img className=\"bt-center\" id=\"image\" src={props.avatar == null ? agent_grey : props.avatar} width=\"90\" height=\"90\"/>\n                    </div>\n                    <div className=\"col-md-6 col-sm-6\">\n                        <h6>{image_text}</h6>\n                        <input className=\"\" type=\"file\" onChange={props.imageChanged}/>\n                        <button className=\"laser-inline green-bg bt-btn\" onClick={props.uploadImage}>Upload Image</button>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"row\">\n                    <h5 className=\"text-center\"><b>Add Identification</b></h5>\n                    <div className=\"col-md-3 col-sm-3\">\n                        <img className=\"bt-center\" id=\"image\" src={props.verification_image == null ? id_grey : props.verification_image} width=\"60\" height=\"60\"/>\n                    </div>\n                    <div className=\"col-md-5 col-sm-5\">\n                        <h6>{image_text}</h6>\n                        <input className=\"\" type=\"file\" onChange={props.verificationChanged}/>\n                        <button className=\"laser-inline green-bg bt-btn\" onClick={props.uploadVerification}>Upload Verification</button>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"verification_type\"><h5>Verification Type</h5></label>\n                        <select className=\"form-control\" id=\"verification_type\" name=\"verification_type\" value={props.verification_type} onChange={props.onFieldChanged}>\n                            <option>National Id Card</option>\n                            <option>Drivers License</option>\n                            <option>Passport</option>\n                        </select>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>FirstName</h6></label>\n                        <input autoComplete=\"off\" id=\"firstname\" type=\"text\" name=\"firstname\" className=\"form-control\" value={props.firstname} onChange={props.onFieldChanged}  placeholder=\"FirstName\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>LastName</h6></label>\n                        <input autoComplete=\"off\" id=\"lastname\" type=\"text\" name=\"lastname\" className=\"form-control\" value={props.lastname} onChange={props.onFieldChanged}  placeholder=\"LastName\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Email</h6></label>\n                        <input autoComplete=\"off\" id=\"email\" type=\"text\" name=\"email\" className=\"form-control\" value={props.email} onChange={props.onFieldChanged}  placeholder=\"Email\"/>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Phone Number</h6></label>\n                        <input autoComplete=\"off\" id=\"phone_number\" type=\"tel\" name=\"phone_number\" className=\"form-control\" value={props.phone_number} onChange={props.onFieldChanged}  placeholder=\"Phone Number\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Second Phone Number</h6></label>\n                        <input autoComplete=\"off\" id=\"phone_number_1\" type=\"tel\" name=\"phone_number_1\" className=\"form-control\" value={props.phone_number_1} onChange={props.onFieldChanged}  placeholder=\"Second Phone Number\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"unit\"><h6>Password</h6></label>\n                        <input autoComplete=\"off\" id=\"password\" type=\"text\" name=\"password\" className=\"form-control\" value={props.password} onChange={props.onFieldChanged}  placeholder=\"Password\"/>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Address</h6></label>\n                        <input autoComplete=\"off\" id=\"address\" type=\"text\" name=\"address\" className=\"form-control\" value={props.address} onChange={props.onFieldChanged}  placeholder=\"Address\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Age</h6></label>\n                        <input autoComplete=\"off\" id=\"age\" type=\"number\" name=\"age\" className=\"form-control\" value={props.age} onChange={props.onFieldChanged}  placeholder=\"Age\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Gender</h6></label>\n                        <select className=\"form-control\" id=\"gender\" name=\"gender\" value={props.gender} onChange={props.onFieldChanged}>\n                            <option>Male</option>\n                            <option>Female</option>\n                        </select>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Marital Status</h6></label>\n                        <select className=\"form-control\" id=\"marital_status\" name=\"marital_status\" value={props.marital_status} onChange={props.onFieldChanged}>\n                            <option>Single</option>\n                            <option>Married</option>\n                            <option>Divorced</option>\n                            <option>Widowed</option>\n                        </select>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Referee 1 Name</h6></label>\n                        <input autoComplete=\"off\" id=\"referee_name_1\" type=\"text\" name=\"referee_name_1\" className=\"form-control\" value={props.referee_name_1} onChange={props.onFieldChanged}  placeholder=\"Referee 1 Name\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Referee 1 Address</h6></label>\n                        <input autoComplete=\"off\" id=\"referee_address_1\" type=\"text\" name=\"referee_address_1\" className=\"form-control\" value={props.referee_address_1} onChange={props.onFieldChanged}  placeholder=\"Referee 1 Address\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Referee 1 Phone Number</h6></label>\n                        <input autoComplete=\"off\" id=\"referee_phone_1\" type=\"tel\" name=\"referee_phone_1\" className=\"form-control\" value={props.referee_phone_1} onChange={props.onFieldChanged}  placeholder=\"Referee 1 Phone Number\"/>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Referee 2 Name</h6></label>\n                        <input autoComplete=\"off\" id=\"referee_name_2\" type=\"text\" name=\"referee_name_2\" className=\"form-control\" value={props.referee_name_2} onChange={props.onFieldChanged}  placeholder=\"Referee 2 Name\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Referee 2 Address</h6></label>\n                        <input autoComplete=\"off\" id=\"referee_address_2\" type=\"text\" name=\"referee_address_2\" className=\"form-control\" value={props.referee_address_2} onChange={props.onFieldChanged}  placeholder=\"Referee 2 Address\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Referee 2 Phone Number</h6></label>\n                        <input autoComplete=\"off\" id=\"referee_phone_2\" type=\"tel\" name=\"referee_phone_2\" className=\"form-control\" value={props.referee_phone_2} onChange={props.onFieldChanged}  placeholder=\"Referee 2 Phone Number\"/>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Bank Name</h6></label>\n                        <input autoComplete=\"off\" id=\"bank_name\" type=\"text\" name=\"bank_name\" className=\"form-control\" value={props.bank_name} onChange={props.onFieldChanged}  placeholder=\"Bank Name\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Account Name</h6></label>\n                        <input autoComplete=\"off\" id=\"account_name\" type=\"text\" name=\"account_name\" className=\"form-control\" value={props.account_name} onChange={props.onFieldChanged}  placeholder=\"Account Name\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Account Number</h6></label>\n                        <input autoComplete=\"off\" id=\"account_number\" type=\"text\" name=\"account_number\" className=\"form-control\" value={props.account_number} onChange={props.onFieldChanged}  placeholder=\"Account Number\"/>\n                    </div>\n                </div>\n            </div>\n}","/Users/user/Bartender/bartender admin/src/index.js",["511","512"],["513","514"],"/Users/user/Bartender/bartender admin/src/NewApp.js",["515","516","517","518","519","520","521","522","523","524"],"/Users/user/Bartender/bartender admin/src/serviceWorker.js",[],"/Users/user/Bartender/bartender admin/src/components/Login.js",["525","526","527"],"/Users/user/Bartender/bartender admin/src/components/Landing.js",["528","529","530","531","532","533","534","535","536","537"],"/Users/user/Bartender/bartender admin/src/auth/AuthHelperMethods.js",["538"],"/Users/user/Bartender/bartender admin/src/components/Categories.js",["539","540","541","542"],"/Users/user/Bartender/bartender admin/src/components/Drinks.js",["543","544","545","546","547","548","549"],"import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport AddDrink from '../subcomponents/AddDrink';\nimport EditDrink from '../subcomponents/EditDrink';\n\nimport Drink from '../subcomponents/Drink';\n\nimport Loader from '../subcomponents/Loader';\nimport ConfirmAction from \"../subcomponents/ConfirmAction\";\n\nimport * as API from '../api/Api';\n\nconst left={\n    float: \"left\"\n}\n\nconst right={\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Drinks extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showConfirm: false,\n            title: \"Confirm Delete\",\n            message: \"Are you sure you want to delete the selected drink item ?\",\n            isLoading: true,\n            showAddDrink: false,\n            showEditDrink: false,\n            categories: [],\n            drinks: [],\n            selected_drink: {},\n            city: \"LAGOS\"\n        };\n\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.reloadDrinks = this.reloadDrinks.bind(this);\n        this.showAddDrink = this.showAddDrink.bind(this);\n        this.showEditDrink = this.showEditDrink.bind(this);\n        this.deleteDrink = this.deleteDrink.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.hideConfirm = this.hideConfirm.bind(this);\n        this.showConfirm = this.showConfirm.bind(this);\n        this.yesClicked = this.yesClicked.bind(this);\n        this.noClicked = this.noClicked.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this)\n    }\n\n    async yesClicked(){\n        this.hideConfirm();\n        this.showLoading();\n        const response = await API.deleteDrink(this.state.selected_drink._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.reloadDrinks()  \n        }\n    }\n\n    noClicked(){\n        this.hideConfirm();\n    }\n\n    showConfirm(){\n        this.setState({\n            showConfirm: true\n        })\n    }\n\n    hideConfirm(){\n        this.setState({\n            showConfirm: false\n        })\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        this.showLoading()\n        const response = await API.getCategories(this.state.city);\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                categories: response.data\n            })   \n        }\n\n        const response1 = await API.getDrinks(this.state.city);\n        this.hideLoading();\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                drinks: response1.data\n            })   \n        }\n    }\n\n    async reloadDrinks(ct){\n        this.handleCloseModal();\n        this.showLoading();\n        const response = await API.getDrinks(ct ? ct : this.state.city);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                drinks: response.data\n            })   \n        }\n    }\n\n    handleCloseModal () {\n        this.setState({ \n            showAddDrink: false,\n            showEditDrink: false \n        });\n    }\n\n    showAddDrink(){\n        this.setState({\n            showAddDrink: true\n        })\n    }\n\n    showEditDrink(e,drink){\n        this.setState({\n            showEditDrink: true,\n            selected_drink: drink\n        });\n\n        e.preventDefault();\n    }\n\n    deleteDrink(e, drink){\n        e.preventDefault();\n\n        this.setState({\n            selected_drink: drink\n        });\n        this.showConfirm();\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        //load the drinks based on the category selected\n        this.reloadDrinks(value)\n\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\">\n                        <h5 className=\"text-left\" style={left}>{this.state.drinks.length} Drinks</h5>\n\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n\n                        <button onClick={this.showAddDrink} className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i> Add Drink</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.drinks.map(drink => {\n                                return <Drink key={drink._id} editClicked={this.showEditDrink} deleteDrink={this.deleteDrink} drink={drink}/>\n                            })\n                        }\n                    </div>\n                </div>\n                <Loader isLoading={this.state.isLoading}/>\n\n                <ConfirmAction yesClicked={this.yesClicked} noClicked={this.noClicked} showConfirm={this.state.showConfirm} title={this.state.title} message={this.state.message}/>\n                \n                { this.state.showAddDrink ? <AddDrink showLoading={this.showLoading} hideLoading={this.hideLoading} categories={this.state.categories}  handleCloseModal={this. handleCloseModal} showAddDrink={this.state.showAddDrink} reloadDrinks={this.reloadDrinks}/> : \"\" }\n                \n                {\n                    this.state.showEditDrink ? <EditDrink showLoading={this.showLoading} hideLoading={this.hideLoading} drink={this.state.selected_drink} categories={this.state.categories}  handleCloseModal={this. handleCloseModal} showEditDrink={this.state.showEditDrink} reloadDrinks={this.reloadDrinks}/> : \"\"\n                }\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender admin/src/components/Orders.js",["550","551","552","553","554","555","556","557","558","559","560","561","562","563"],"import React, { Component } from 'react';\n\nimport Order from '../subcomponents/Order';\n\nimport OrderItems from '../subcomponents/OrderItems';\nimport AssignAgent from '../subcomponents/AssignAgent';\nimport Loader from '../subcomponents/Loader';\nimport ViewAgent  from '../subcomponents/ViewAgent'\nimport ConfirmAction from \"../subcomponents/ConfirmAction\";\nimport OrderStatus from \"../subcomponents/OrderStatus\";\n\nimport { BottomScrollListener } from 'react-bottom-scroll-listener'\n\nimport PubNub from 'pubnub';\nimport PubNubReact from 'pubnub-react';\n\nimport * as API from '../api/Api';\n\nconst left = {\n    float: \"left\"\n}\n\nconst right = {\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nconst btn_style = {\n    marginLeft: \"8px\",\n    marginRight: \"8px\",\n    width: \"120px\"\n}\n\nconst btn_grey = {\n    background: \"#797d7f\",\n    marginLeft: \"8px\",\n    marginRight: \"8px\",\n    width: \"120px\"\n}\n\nconst btn_blue = {\n    background: \"#2E86C1\",\n    marginLeft: \"8px\",\n    marginRight: \"8px\",\n    width: \"120px\"\n}\n\n/*const pubnub = new PubNub({\n    publishKey: 'pub-c-da5b31c8-45d5-4018-82be-843221a3b91c',\n    subscribeKey: 'sub-c-de1f05de-af97-11e9-a732-8a2b99383297',\n    uuid: 'Bartender247ng'\n});\n\nexport default function Orders() {\n    return (\n      <PubNubProvider client={pubnub}>\n        <OrdersContent />\n      </PubNubProvider>\n    );\n}*/\n\nexport default class Orders extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showConfirm: false,\n            title: \"Confirm Order Fulfillment\",\n            message: \"Please confirm that you want to mark this order as completed, this cant be undone.\",\n            isLoading: true,\n            channels: [\"neworder\", \"orderstatus\", \"routerequest\"],\n            total_count:0,\n            orders: [],\n            agents: [],\n            showOrderStatus: false,\n            orderStatusAgent: {},\n            showOrderItems: false,\n            showAgentsToAssign: false,\n            showAgent: false,\n            showInvoice: false,\n            selected_order: {},\n            selected_agent: {},\n            order_type: \"all\",\n            city: \"LAGOS\"\n        }\n\n        this.pubnub = new PubNubReact({\n            publishKey: 'pub-c-da5b31c8-45d5-4018-82be-843221a3b91c',\n            subscribeKey: 'sub-c-de1f05de-af97-11e9-a732-8a2b99383297'\n        });\n\n        this.pubnub.init(this);\n\n        this.showOrderItems = this.showOrderItems.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.agentSelected = this.agentSelected.bind(this);\n        this.showAgentsToAssign = this.showAgentsToAssign.bind(this);\n        this.removeAgentFromRoute = this.removeAgentFromRoute.bind(this);\n        this.getAgents = this.getAgents.bind(this);\n\n        this.getOrders = this.getOrders.bind(this);\n        this.getCompleted = this.getCompleted.bind(this);\n        this.getPending = this.getPending.bind(this);\n        this.getCount = this.getCount.bind(this);\n\n        this.markOrderAsFulfilled = this.markOrderAsFulfilled.bind(this);\n        this.markOrderAsFulfilledWithId = this.markOrderAsFulfilledWithId.bind(this);\n        this.closeOrderStatus = this.closeOrderStatus.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.hideConfirm = this.hideConfirm.bind(this);\n        this.showConfirm = this.showConfirm.bind(this);\n        this.yesClicked = this.yesClicked.bind(this);\n        this.noClicked = this.noClicked.bind(this);\n        this.showAgent = this.showAgent.bind(this);\n        this.hideAgent = this.hideAgent.bind(this);\n    }\n\n    async yesClicked(){\n        this.hideConfirm();\n        this.showLoading();\n\n        const response = await API.fulfillOrder(this.state.selected_order._id);\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var orders = state.orders;\n\n                orders.splice(state.orders.indexOf(state.selected_order),1,response.data);\n\n                return {\n                    orders: orders,\n                    selected_order: {}\n                }\n            })\n\n            this.getAgents();\n        }\n    }\n    \n    noClicked(){\n        this.hideConfirm();\n    }\n\n    showConfirm(order){\n        this.setState({\n            selected_order: order,\n            showConfirm: true\n        })\n    }\n\n    hideConfirm(){\n        this.setState({\n            showConfirm: false\n        })\n    }\n\n    markOrderAsFulfilled(e,order){\n        this.showConfirm(order);\n    }\n\n    async markOrderAsFulfilledWithId(e,id){\n        this.showLoading();\n\n        const response = await API.fulfillOrder(id);\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var orders = state.orders;\n\n                this.props.showMessage(\"Order has been successfully fulfilled\");\n\n                orders.map(order => {\n                    if(order._id === id){\n                        orders.splice(state.orders.indexOf(order),1,response.data);\n                    }\n                })\n                \n                return {\n                    showOrderStatus: false,\n                    orderStatusAgent: {},\n                    orders: orders\n                }\n            })\n\n            this.getAgents();\n        }\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    showAgent(e, order){\n        this.setState({\n            selected_agent: order.agent,\n            showAgent: true\n        })\n    }\n\n    hideAgent(){\n        this.setState({\n            showAgent: false\n        })\n    }\n\n    handleOnDocumentBottom = () => {\n        switch(this.state.order_type){\n            case \"all\":\n                this.getOrders();\n            break;\n            case \"completed\":\n                this.getCompleted();\n            break;\n            case \"pending\":\n                this.getPending()\n            break;\n        }\n    }\n\n    showOrderItems(e,order){\n        this.setState({\n            showOrderItems: true,\n            selected_order: order\n        })\n        e.preventDefault();\n    }\n\n    showAgentsToAssign(e, order){\n        this.setState({\n            showAgentsToAssign: true,\n            selected_order: order\n        })\n        e.preventDefault();\n    }\n\n    async agentSelected(e, agent){\n        e.preventDefault();\n\n        this.showLoading();\n\n        const response = await API.assignAgentToOrder(agent._id, this.state.selected_order._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            //set the selected order to agent assigned \n            this.getAgents();\n            this.props.showMessage(\"Request to fulfill order has been sent to agent\")\n        }\n    }\n\n    async removeAgentFromRoute(e, agent){\n        e.preventDefault();\n\n        this.showLoading();\n\n        const response = await API.removeAgentFromOrder(agent._id, this.state.selected_order._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            //set the selected order to agent assigned\n            this.getAgents();\n            this.props.showMessage(\"Agent was successfully unassigned from order\");\n        }\n    }\n\n    async getAgents(){\n        const response1 = await API.getAgents();\n\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                agents: response1.data\n            })   \n        }\n    }\n\n    showInvoice(order){\n        this.setState({\n            showInvoice: true,\n            selected_order: order\n        })\n    }\n\n    handleCloseModal(){\n        this.setState({\n            showOrderItems: false,\n            showAgentsToAssign: false,\n            showInvoice: false\n        })\n    }\n\n    closeOrderStatus(){\n        this.setState({\n            showOrderStatus: false,\n            orderStatusAgent: {}\n        })\n    }\n\n    async getOrders(){\n        this.showLoading();\n\n        const response = await API.getOrders((this.state.order_type === \"all\") ? this.state.orders.length : 0, this.state.city);\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n\n            this.setState({\n                order_type: \"all\"\n            });\n\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.orders.length>0){\n                    if(state.order_type === \"all\"){\n                        var orders = state.orders.concat(response.data);\n\n                        return {\n                            selected_order: {},\n                            orders: orders,\n                            order_type: \"all\"\n                        }\n                    }\n                    else{\n                        return {\n                            selected_order: {},\n                            orders: response.data,\n                            order_type: \"all\"\n                        }\n                    }\n                }\n                else{\n                    return {\n                        selected_order: {},\n                        orders: response.data,\n                        order_type: \"all\"\n                    }\n                }\n            })\n        }\n\n        this.getCount();\n    }\n\n    async getCompleted(){\n        this.showLoading();\n\n        const response = await API.getCompletedOrders( (this.state.order_type === \"completed\") ? this.state.orders.length : 0, this.state.city );\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n\n            this.setState({\n                order_type: \"completed\"\n            });\n\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.orders.length>0){\n                    if(state.order_type === \"completed\"){\n                        var orders = state.orders.concat(response.data);\n\n                        return {\n                            selected_order: {},\n                            orders: orders,\n                            order_type: \"completed\"\n                        }\n                    }\n                    else{\n                        return {\n                            selected_order: {},\n                            orders: response.data,\n                            order_type: \"completed\"\n                        }\n                    }\n                }\n                else{\n                    return {\n                        selected_order: {},\n                        orders: response.data,\n                        order_type: \"completed\"\n                    }\n                }\n            })\n        }\n\n        this.getCount();\n    }\n\n    async getPending(){\n        this.showLoading();\n        \n        const response = await API.getPendingOrders( (this.state.order_type === \"pending\") ? this.state.orders.length : 0, this.state.city );\n\n        this.hideLoading();\n\n        if(response==\"error\"){\n            //show error message\n\n            this.setState({\n                order_type: \"pending\"\n            });\n\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.orders.length>0){\n                    if(state.order_type === \"pending\"){\n                        var orders = state.orders.concat(response.data);\n\n                        return {\n                            selected_order: {},\n                            orders: orders,\n                            order_type: \"pending\"\n                        }\n                    }\n                    else{\n                        return {\n                            selected_order: {},\n                            orders: response.data,\n                            order_type: \"pending\"\n                        }\n                    }\n                }\n                else{\n                    return {\n                        selected_order: {},\n                        orders: response.data,\n                        order_type: \"pending\"\n                    }\n                }\n            })\n        }\n\n        this.getCount();\n    }\n\n    async getCount(){\n        //orders count\n        const response1 = await API.getOrdersCount(this.state.city);\n\n        if(response1==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response1 && response1.data){\n            this.setState({\n                total_count: response1.data.count\n            })   \n        }\n    }\n\n    componentDidMount(){\n        this.getOrders();\n\n        this.getAgents();\n\n        this.pubnub.subscribe({\n            channels: this.state.channels\n        });\n        \n        this.pubnub.getMessage('neworder', (msg) => {\n            this.getOrders();\n        });\n\n        this.pubnub.getMessage('orderstatus', (data) => {\n            \n            var agent = data.userMetadata;\n        \n            var response = data.message.status;\n\n            if(response===\"completed\"){\n                this.setState({\n                    showOrderStatus: true,\n                    orderStatusAgent: agent,\n                })\n            }\n\n            if(response===\"abandoned\"){\n                var msg = \"Agent \" +agent.firstname+\" \"+agent.lastname +\" has abandoned his delivery\";\n                this.props.showMessage(msg);\n            }\n        });\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        //load the drinks based on the category selected\n        this.reloadDrinks()\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\" >\n                        <h5 className=\"text-left\" style={left}>{this.state.total_count} Order(s)</h5>\n\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"bt-item-drink-profit shadow\">\n                            <button className=\"laser-inline blue-bg bt-btn\" onClick={this.getOrders} style={ (this.state.order_type === \"all\") ? btn_blue : btn_grey}>all</button>\n                            <button className=\"laser-inline grey-bg bt-btn\" onClick={this.getCompleted} style={ (this.state.order_type === \"completed\") ? btn_blue : btn_grey}>completed</button>\n                            <button className=\"laser-inline grey-bg bt-btn\" onClick={this.getPending} style={ (this.state.order_type === \"pending\") ? btn_blue : btn_grey}>pending</button>\n                        </div>\n                        <br/>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.orders.map(order => {\n                                return <Order key={order._id} showAgent={this.showAgent} order={order} markOrderAsFulfilled={this.markOrderAsFulfilled} showAgentsToAssign={this.showAgentsToAssign} showOrderItems={this.showOrderItems}/>\n                            })\n                        }\n                    </div>\n                </div>\n\n                {\n                    this.state.showAgent ? <ViewAgent agent={this.state.selected_agent} showViewAgent={this.state.showAgent} hideAgent={this.hideAgent}/> : \"\"\n                }\n\n                {\n                    this.state.showOrderStatus ? <OrderStatus agent={this.state.orderStatusAgent} markOrderAsFulfilledWithId={this.markOrderAsFulfilledWithId} closeOrderStatus={this.closeOrderStatus} showOrderStatus={this.state.showOrderStatus} /> : \"\"\n                }\n\n                <ConfirmAction yesClicked={this.yesClicked} noClicked={this.noClicked} showConfirm={this.state.showConfirm} title={this.state.title} message={this.state.message}/>\n\n                <Loader isLoading={this.state.isLoading}/>\n\n                <BottomScrollListener onBottom={this.handleOnDocumentBottom} />\n                \n                { this.state.showAgentsToAssign ? <AssignAgent agents={this.state.agents} removeAgentFromRoute={this.removeAgentFromRoute} showAgentsToAssign={this.state.showAgentsToAssign} handleCloseModal={this.handleCloseModal} agentSelected={this.agentSelected} /> : \"\"}\n               \n                { this.state.showOrderItems ? <OrderItems showOrderItems={this.state.showOrderItems} order={this.state.selected_order} handleCloseModal={this.handleCloseModal}/> : \"\" }\n\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender admin/src/components/Users.js",["564","565","566"],"/Users/user/Bartender/bartender admin/src/components/Home.js",["567","568","569","570","571","572","573","574","575","576","577","578","579","580"],"/Users/user/Bartender/bartender admin/src/components/Agents.js",["581","582","583","584","585"],"/Users/user/Bartender/bartender admin/src/components/Financials.js",["586","587"],"import React, { Component } from 'react';\n\nimport * as Utils from '../utils/Utils';\n\nimport * as API from '../api/Api';\nimport Loader from '../subcomponents/Loader';\n\nexport default class Financials extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            financials: [],\n            finance: 0,\n            city: \"LAGOS\"\n        }\n\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this)\n        this.loadFinancials = this.loadFinancials.bind(this)\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    async componentDidMount(){\n        this.loadFinancials()\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        //load the drinks based on the category selected\n        this.loadFinancials(value)\n    }\n\n    loadFinancials = async(ct) => {\n        this.showLoading();\n        //orders\n        const res = await API.getFinancials(ct ? ct : this.state.city);\n        this.hideLoading();\n        if(res==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(res && res.data){\n            this.setState({\n                finance: res.data\n            })   \n        }\n\n\n        this.showLoading();\n        const response = await API.getMonthlyFinancials(ct ? ct : this.state.city);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState({\n                financials: response.data\n            })   \n        }\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\">\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"ALL\">All</option>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"bt-item-drink-profit shadow\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Revenue - {Utils.getAmount(this.state.finance.revenue)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Profit - {Utils.getAmount(this.state.finance.profit)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Tax - {Utils.getAmount(this.state.finance.tax)}</h5>\n                            </div>\n                            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n                                <h5>Total Expenses - {Utils.getAmount(this.state.finance.expenses)}</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                        {\n                            this.state.financials.map((fin,index) => {\n                                return <div key={index} className=\"col-md-6 col-sm-6\">\n                                            <div className=\"bt-item shadow\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-3 col-sm-3\">\n                                                        <h4 className=\"bt-blue-text\">{Utils.getMonth(fin._id.month)}</h4>\n                                                        <h5>{fin._id.year}</h5>\n                                                    </div>\n                                                    <div className=\"col-md-4 col-sm-4\">\n                                                        <h5>Revenue - {Utils.getAmount(fin.revenue)}</h5>\n                                                        <h5>Orders - {fin.orders}</h5>\n                                                    </div>\n                                                    <div className=\"col-md-5 col-sm-5\">\n                                                        <h5>Tax - {Utils.getAmount(fin.tax)}</h5>\n                                                        <h5>Profit - {Utils.getAmount(fin.profit)}</h5>\n                                                        <h5>Expenses - {Utils.getAmount(fin.expenses)}</h5>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                       </div>\n                            })\n                        }\n                    </div>\n                </div>\n                <Loader isLoading={this.state.isLoading}/>\n            </div>\n        )\n    }\n\n}","/Users/user/Bartender/bartender admin/src/auth/withAuth.js",["588","589"],"/Users/user/Bartender/bartender admin/src/components/Promocodes.js",["590","591","592","593","594","595","596","597","598"],"import React, {Component} from 'react'\n\nimport Promocode from '../subcomponents/Promocode';\n\nimport { BottomScrollListener } from 'react-bottom-scroll-listener'\n\nimport GeneratePromocodes from '../subcomponents/GeneratePromocodes';\n\nimport EditPromocode from '../subcomponents/EditPromocode';\n\nimport Loader from '../subcomponents/Loader';\n\nimport * as API from '../api/Api';\n\nconst left = {\n    float: \"left\"\n}\n\nconst right = {\n    float: \"right\",\n    marginTop: \"-0.01px\"\n}\n\nexport default class Promocodes extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            total_count:0,\n            promocodes: [],\n            showGenerateCodes: false,\n            showEditPromocode: false,\n            code_to_edit: {},\n            code_name: \"\",\n            count: 0,\n            percentage: 0,\n            city: \"LAGOS\"\n        }\n\n        this.getPromocodesEmpty = this.getPromocodesEmpty.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.editClicked = this.editClicked.bind(this);\n        this.deactivateClicked = this.deactivateClicked.bind(this);\n        this.getPromocodes = this.getPromocodes.bind(this)\n        this.handleOnDocumentBottom = this.handleOnDocumentBottom.bind(this);\n        this.generateClicked = this.generateClicked.bind(this);\n        this.cancelModal = this.cancelModal.bind(this);\n        this.showGenerateCodesView = this.showGenerateCodesView.bind(this);\n        this.submitEditedPromocode = this.submitEditedPromocode.bind(this);\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.onCityChanged = this.onCityChanged.bind(this);\n    }\n\n    showLoading(){\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    hideLoading(){\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    showGenerateCodesView(){\n        this.setState({\n            showGenerateCodes: true\n        })\n    }\n\n    async generateClicked(e){\n        e.preventDefault();\n        if(this.state.code_name.length>0 && this.state.count>0 && this.state.percentage>0){\n            this.showLoading();\n            const response = await API.generatePromocodes(this.state.code_name, this.state.count, this.state.percentage, this.state.city);\n            this.hideLoading();\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n    \n            if(response && response.data){\n                this.setState({\n                    promocodes: [],\n                    showGenerateCodes: false,\n                    showEditPromocode: false,\n                    code_to_edit: {},\n                    count: 0,\n                    code_name: \"\",\n                    percentage: 0\n                })\n                this.getPromocodesEmpty();\n            }\n        }\n    }\n\n    cancelModal(e){\n        e.preventDefault();\n        this.setState({\n            showGenerateCodes: false,\n            showEditPromocode: false,\n            code_to_edit: {},\n            count: 0,\n            code_name: \"\",\n            percentage: null\n        })\n    }\n\n    handleOnDocumentBottom = () => {\n        this.getPromocodes();\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n\n        if(name == \"city\"){\n            this.getPromocodes();\n        }\n    }\n\n    onCityChanged = (selected) => {\n        this.setState({\n            city: selected\n        })\n    }\n\n    \n    async getPromocodesEmpty(){\n        this.showLoading();\n        const response = await API.getPromocodes(0, this.state.city);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.promocodes.length>0){\n                    var codes = state.promocodes.concat(response.data);\n\n                    return {\n                        promocodes: codes\n                    }\n                }\n                else{\n                    return {\n                        promocodes: response.data\n                    }\n                }\n            })   \n        }\n\n\n        //promocodes count\n        const response5 = await API.getPromocodesCount();\n\n        if(response5==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response5 && response5.data){\n            this.setState({\n                total_count: response5.data.count\n            })   \n        }\n    }\n\n    async getPromocodes(){\n        this.showLoading();\n        const response = await API.getPromocodes(this.state.promocodes.length, this.state.city);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n\n                if(state.promocodes.length>0){\n                    var codes = state.promocodes.concat(response.data);\n\n                    return {\n                        promocodes: codes\n                    }\n                }\n                else{\n                    return {\n                        promocodes: response.data\n                    }\n                }\n            })   \n        }\n\n        //promocodes count\n        const response5 = await API.getPromocodesCount();\n\n        if(response5==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response5 && response5.data){\n            this.setState({\n                total_count: response5.data.count\n            })   \n        }\n\n    }\n\n    async editClicked(e, promocode){\n        //show edit promocode\n        this.setState({\n            showEditPromocode:  true,\n            code_name: promocode.code,\n            code_to_edit: promocode,\n            count: promocode.usages,\n            percentage: promocode.percentage,\n            city: promocode.city\n        })\n        /*this.showLoading();\n        const response = await API.deletePromocode(promocode._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var codes = state.promocodes;\n\n                codes.splice(state.promocodes.indexOf(promocode),1);\n\n                return {\n                    promocodes: codes,\n                    total_count: (state.total_count - 1)\n                }\n            })\n        }*/\n    }\n\n    async submitEditedPromocode(){\n        console.log(this.state.city)\n        return;\n\n        if(this.state.code_name.length>0 && this.state.count>0 && this.state.percentage>0){\n            this.showLoading();\n            const response = await API.editPromocode(this.state.code_to_edit._id, this.state.code_name, this.state.count, this.state.percentage, this.state.city);\n            this.hideLoading();\n            if(response==\"error\"){\n                //show error message\n                return;\n            }\n\n            if(response && response.data){\n                this.setState(state => {\n                    var codes = state.promocodes;\n\n                    codes.splice(state.promocodes.indexOf(this.state.code_to_edit),1,response.data);\n\n                    return {\n                        promocodes: codes,\n                        showGenerateCodes: false,\n                        showEditPromocode: false,\n                        code_to_edit: {},\n                        count: 0,\n                        code_name: \"\",\n                        percentage: null\n                    }\n                })\n            }\n        }\n    }\n\n    async deactivateClicked(e, promocode){\n        e.preventDefault();\n        this.showLoading();\n        const response = await API.deactivatePromocode(promocode._id);\n        this.hideLoading();\n        if(response==\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response && response.data){\n            this.setState(state => {\n                var codes = state.promocodes;\n\n                codes.splice(state.promocodes.indexOf(promocode),1,response.data);\n\n                return {\n                    promocodes: codes\n                }\n            })\n        }\n        \n    }\n\n    componentDidMount(){\n        this.getPromocodes();\n    }\n\n    render(){\n        return(\n            <div className=\"top-div\">\n                <div className=\"container\">\n                    <div className=\"bt-city-holder\">\n                        <h5 className=\"text-left\" style={left}>{this.state.total_count} Promocodes</h5>\n\n                        <div className=\"bt-center\" style={{width: \"200px\"}}>\n                            <select className=\"form-control\" id=\"city\" name=\"city\" value={this.state.city} onChange={this.onFieldChanged}>\n                                <option value=\"LAGOS\">Lagos</option>\n                                <option value=\"ACCRA\">Accra</option>\n                            </select>\n                        </div>\n\n                        <button onClick={ this.showGenerateCodesView } className=\"green-bg bt-btn\" style={right}> <i className=\"fas fa-plus white-text\"></i>  Create Code</button>\n                    </div>\n                    <div className=\"row\">\n                        {\n                            this.state.promocodes.map(promo =>{\n                                return <Promocode key={promo._id} promo={promo} editClicked={this.editClicked} deactivateClicked={this.deactivateClicked} />\n                            })\n                        }\n                    </div>\n                </div>\n\n                <Loader isLoading={this.state.isLoading}/>\n\n                <BottomScrollListener onBottom={this.handleOnDocumentBottom} />\n\n                {\n                    this.state.showEditPromocode ? <EditPromocode city={this.state.city} onFieldChanged={this.onFieldChanged} cancelModal={this.cancelModal} showEditPromocode={this.state.showEditPromocode} submitEditedPromocode={this.submitEditedPromocode} code_name={this.state.code_name} count={this.state.count} percentage={this.state.percentage} /> : \"\"\n                }\n\n                {\n                    this.state.showGenerateCodes ? <GeneratePromocodes onCityChanged={this.onCityChanged} city={this.state.city} onFieldChanged={this.onFieldChanged} code_name={this.state.code_name} count={this.state.count} percentage={this.state.percentage} generateClicked={this.generateClicked} cancelModal={this.cancelModal} showGenerateCodes={this.state.showGenerateCodes} /> : \"\"\n                }\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender admin/src/subcomponents/OrderStats.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/Message.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/Loader.js",[],"/Users/user/Bartender/bartender admin/src/api/Api.js",["599"],"\n//Our Auth Service\nimport AuthHelperMethods from '../auth/AuthHelperMethods';\n\nconst Auth = new AuthHelperMethods();\n\nconst Axios = Auth.axios;\n\nconst drinksUrl = '/drinks'\nconst createDrinkUrl = '/drinks/create'\nconst deleteDrinkUrl = '/drinks/delete'\nconst editDrinkUrl = '/drinks/edit'\nconst countDrinksUrl = '/drinks/count'\n\nconst categoriesUrl = '/categories'\nconst createCategoryUrl = '/categories/create'\nconst deleteCategoryUrl = '/categories/delete'\nconst editCategoryUrl = '/categories/edit'\nconst countCategoriesUrl = '/categories/count'\n\nconst agentsUrl = '/agents'\nconst createAgentUrl = '/agents/create'\nconst deleteAgentUrl = '/agents/delete'\nconst editAgentUrl = '/agents/edit'\nconst countAgentsUrl = '/agents/count'\n\nconst ordersUrl = '/orders'\nconst ordersCompletedUrl = '/orders/completed'\nconst ordersPendingUrl = '/orders/pending'\nconst ordersCountUrl = '/orders/count'\nconst ordersAssignAgentUrl = '/orders/assign_agent'\nconst ordersRemoveAgentUrl = '/orders/remove_agent'\nconst orderStatsUrl = '/orders/stats'\nconst orderFulfillUrl = '/orders/fulfill'\n\nconst uploadAgentIdUrl = '/uploads/agentid';\nconst uploadAgentAvatarUrl = '/uploads/agentavatar';\nconst uploadDrinkImageUrl='/uploads/drinkimage'; \n\nconst financialsUrl = \"/financials\";\nconst monthlyFinancialsUrl = \"/financials/monthly\";\n\nconst promocodeUrl = \"/promocodes\"\nconst promocodeUrlGenerate = \"/promocodes/generate\"\nconst promocodeUrlEdit = \"/promocodes/edit\"\nconst promocodeUrlDelete = \"/promocodes/delete\"\nconst promocodeUrlDeactivate = \"/promocodes/deactivate\"\nconst promocodesCountUrl = \"/promocodes/count\"\n\nconst usersUrl = \"/users\";\nconst countUsersUrl = '/users/count'\n\nexport const getAgents = () => {\n    return  Axios(agentsUrl)\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log({err});\n                    return \"error\";\n                })\n}\n\nexport const createAgent = (data) => {\n    return Axios(createAgentUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editAgent = (data) => {\n    return Axios(editAgentUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deleteAgent = (id) => {\n    return Axios(deleteAgentUrl, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const countAgents = () => {\n    return Axios(countAgentsUrl)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getOrders = (count, city) => {\n    return  Axios(ordersUrl, {count, city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getCompletedOrders = (count, city) => {\n    return  Axios(ordersCompletedUrl, {count, city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getPendingOrders = (count, city) => {\n    return  Axios(ordersPendingUrl, {count, city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const assignAgentToOrder = (agent_id, order_id) => {\n    return  Axios(ordersAssignAgentUrl, {agent_id, order_id})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const removeAgentFromOrder = (agent_id, order_id) => {\n    return  Axios(ordersRemoveAgentUrl, {agent_id, order_id})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getOrdersCount = (city) => {\n    return  Axios(ordersCountUrl, {city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getOrdersStats = (city) => {\n    return  Axios(orderStatsUrl, {city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const fulfillOrder = (id) => {\n    return  Axios(orderFulfillUrl, {id})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const getDrinks = (city) => {\n    return  Axios(drinksUrl, {city: city})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const createDrink = (data) => {\n    return Axios(createDrinkUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editDrink = (data) => {\n    return Axios(editDrinkUrl, data)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deleteDrink = (id) => {\n    return Axios(deleteDrinkUrl, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const countDrinks = (city) => {\n    return Axios(countDrinksUrl, {city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getCategories = (city) => {\n    return Axios(categoriesUrl, {city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const createCategory = (name, city) => {\n    return Axios(createCategoryUrl, {name, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editCategory = (id,name, image_url, city) => {\n    return Axios(editCategoryUrl, {id,name, image_url, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const countCategories = () => {\n    return Axios(countCategoriesUrl)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const uploadDrinkImage = (file) => {\n    return Axios(uploadDrinkImageUrl, file)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const uploadAgentAvatar = (file) => {\n    return Axios(uploadAgentAvatarUrl, file)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const uploadAgentId = (file) => {\n    return Axios(uploadAgentIdUrl, file)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getFinancials = (city) => {\n    return Axios(financialsUrl, {city: city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getMonthlyFinancials = (city) => {\n    return Axios(monthlyFinancialsUrl, {city: city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getPromocodes = (count, city) => {\n    return Axios(promocodeUrl, {count, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const generatePromocodes = (name, usages, percentage, city) => {\n    return Axios(promocodeUrlGenerate, {name, usages, percentage, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const editPromocode = (id, name, usages, percentage, city) => {\n    return Axios(promocodeUrlEdit, {id, name, usages, percentage, city})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deletePromocode = (id) => {\n    return Axios(promocodeUrlDelete, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const deactivatePromocode = (id) => {\n    return Axios(promocodeUrlDeactivate, {id})\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}\n\nexport const getPromocodesCount = () => {\n    return  Axios(promocodesCountUrl)\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\n\n\n//Users\nexport const getUsers = (count) => {\n    return  Axios(usersUrl, {count})\n                .then(res => {\n                    return res;\n                })\n                .catch(err => {\n                    console.log(err);\n                    return \"error\";\n                })\n}\n\nexport const countUsers = () => {\n    return Axios(countUsersUrl)\n            .then(res => {\n                return res;\n            })\n            .catch(err => {\n                console.log(err);\n                return \"error\";\n            })\n}","/Users/user/Bartender/bartender admin/src/subcomponents/Category.js",["600","601"],"/Users/user/Bartender/bartender admin/src/subcomponents/AddCategory.js",["602","603"],"import React,{Component} from 'react'\n\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\n\nimport * as Utils from '../utils/Utils';\n\nimport S3FileUpload from 'react-s3';\n\nimport logo1 from '../images/logo1.png';\n\nimport { default as ReactSelect } from \"react-select\";\n\nimport Option from \"./Option\"\n\nimport * as Config from \"../config\"\n\nconst image_text = \"Add Image with size <= 500 KB\"\n\nconst btn_style_left = {\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n\nconst config = Config.s3config\n\nReactModal.setAppElement('#main');\n\nReactModal.setAppElement('#main');\n\nexport default class AddCategory extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            image_url: \"\",\n            file: null,\n            image_uploaded: false,\n            city: [],\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.createCategory = this.createCategory.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = (selected) => {\n        this.setState({\n            city: selected\n        })\n    };\n\n    async createCategory(){\n        if(this.state.name.length <= 0 && this.state.name.length > 100){\n           return;\n        }\n\n        const response = await API.createCategory(this.state.name)\n        \n        if(response===\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response.data && response.data.response===\"created\"){\n            this.setState({\n                name: \"\"\n            })\n            this.props.reloadCategories();\n        }\n\n    }\n        \n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        });\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image_url: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    uploadImage(){\n        if(this.state.file){\n            S3FileUpload\n                .uploadFile(this.state.file, config)\n                .then(data => { \n\n                    if(data.result && data.result.ok == true && (data.result.status < 300 && data.result.status >=200)){\n                        this.setState({\n                            image_uploaded: true,\n                            image_url: data.location\n                        })\n                    }\n                    \n                })\n                .catch(err => {\n                    console.error(err);\n\n                    this.setState({\n                        error: \"Error uploading file...\"\n                    })\n                })\n        }\n    }\n\n    render(){\n        return (\n                <ReactModal \n                    isOpen={this.props.showAddCategory}\n                    className=\"CategoryModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Add Category</h4>\n                    <div className=\"bt-item\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <label htmlFor=\"unit\"><h6>Name</h6></label>\n                                <input autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={this.state.name} onChange={this.onFieldChanged}  placeholder=\"Name\"/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <label htmlFor=\"city\"><h6>City</h6></label>\n                                <ReactSelect\n                                    options={Utils.cityOptions}\n                                    isMulti\n                                    closeMenuOnSelect={true}\n                                    hideSelectedOptions={false}\n                                    components={{\n                                        Option\n                                    }}\n                                    onChange={this.handleChange}\n                                    allowSelectAll={true}\n                                    value={this.state.city}\n                                    />\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <img className=\"bt-center\" id=\"image\" src={!this.state.image_url ? logo1 : this.state.image_url} width=\"90\" height=\"90\"/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <h6>{image_text}</h6>\n                                <input className=\"\" type=\"file\" onChange={this.imageChanged}/>\n                                <button className=\"laser-inline green-bg bt-btn\" onClick={this.uploadImage}>Upload Image</button>\n                            </div>\n                        </div>\n                        <br/>\n                        <br/>\n                        <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.createCategory}>save</button>\n                        <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                    </div>\n                </ReactModal>\n        )\n    }\n}","/Users/user/Bartender/bartender admin/src/subcomponents/EditCategory.js",["604","605"],"import React,{Component} from 'react'\n\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport * as Utils from '../utils/Utils';\n\nimport S3FileUpload from 'react-s3';\n\nimport logo1 from '../images/logo1.png';\n\nimport { default as ReactSelect } from \"react-select\";\n\nimport Option from \"./Option\"\n\nimport * as Config from \"../config\"\n\nconst image_text = \"Add Image with size <= 500 KB\"\n\nconst btn_style_left = {\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n\nconst config = Config.s3config\n\nReactModal.setAppElement('#main');\n\nexport default class EditCategory extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: props.category.name,\n            image_url: props.category.image_url,\n            file: null,\n            image_uploaded: false,\n            city: props.category ? Utils.getCities(props.category.city) : [],\n        }\n\n        this.editCategory = this.editCategory.bind(this);\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = (selected) => {\n        this.setState({\n            city: selected\n        })\n    };\n\n    componentDidMount(){\n        this.setState({\n            image_url: this.props.category.image_url,\n            name: this.props.category.name,\n            city: this.props.category ? Utils.getCities(this.props.category.city) : [],\n        })\n    }\n\n    async editCategory(){\n        if(this.state.name.length <= 0 && this.state.name.length > 100){\n           return;\n        }\n\n        var cities = []\n\n        cities = this.state.city.map(selection => {\n            return selection.value;\n        })\n\n        const response = await API.editCategory(this.props.category._id,this.state.name, this.state.image_url, cities)\n        \n        if(response===\"error\"){\n            //show error message\n            return;\n        }\n\n        if(response.data && response.data.response===\"success\"){\n            this.setState({\n                name: \"\",\n                image_url: \"\",\n                file: null,\n                image_uploaded: false,\n                city: [],\n            })\n\n            this.props.reloadCategories();\n        }\n    }\n        \n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image_url: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    uploadImage(){\n        if(this.state.file){\n            S3FileUpload\n                .uploadFile(this.state.file, config)\n                .then(data => { \n\n                    if(data.result && data.result.ok == true && (data.result.status < 300 && data.result.status >=200)){\n                        this.setState({\n                            image_uploaded: true,\n                            image_url: data.location\n                        })\n                    }\n                    \n                })\n                .catch(err => {\n                    console.error(err);\n\n                    this.setState({\n                        error: \"Error uploading file...\"\n                    })\n                })\n        }\n    }\n\n    render(){\n        return (\n                <ReactModal \n                    isOpen={this.props.showEditCategory}\n                    className=\"EditCategoryModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Edit Category</h4>\n                    <div className=\"bt-item\">\n                        <h4>{this.props.category.name}</h4>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <label htmlFor=\"unit\"><h6>New Name</h6></label>\n                                <input autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={ this.state.name } onChange={this.onFieldChanged}  placeholder={this.props.category.name}/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <label htmlFor=\"city\"><h6>City</h6></label>\n                                <ReactSelect\n                                    options={Utils.cityOptions}\n                                    isMulti\n                                    closeMenuOnSelect={true}\n                                    hideSelectedOptions={false}\n                                    components={{\n                                        Option\n                                    }}\n                                    onChange={this.handleChange}\n                                    allowSelectAll={true}\n                                    value={this.state.city}\n                                    />\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <img className=\"bt-center\" id=\"image\" src={!this.state.image_url ? logo1 : this.state.image_url} width=\"90\" height=\"90\"/>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6\">\n                                <h6>{image_text}</h6>\n                                <input className=\"\" type=\"file\" onChange={this.imageChanged}/>\n                                <button className=\"laser-inline green-bg bt-btn\" onClick={this.uploadImage}>Upload Image</button>\n                            </div>\n                        </div>\n                        <br/>\n                        <br/>\n                        <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.editCategory}>save</button>\n                        <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                    </div>\n                </ReactModal>\n        )\n    }\n}","/Users/user/Bartender/bartender admin/src/subcomponents/AddDrink.js",["606"],"import React, {Component} from 'react'\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\n\nimport S3FileUpload from 'react-s3';\n\nimport * as API from '../api/Api';\n\nconst config = {\n    bucketName: process.env.AWS_BUCKET,\n    dirName: 'drinkimages', /* optional */\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_KEY,\n    secretAccessKey: process.env.AWS_SECRET,\n}\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n \nReactModal.setAppElement('#main');\n\n\nexport default class AddDrink extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            category: \"\",\n            unit: \"bottle\",\n            price: 0,\n            profit_price: 0,\n            profit: 0,\n            error: \"\",\n            stock: 0,\n            image_uploaded: false,\n            image: null,\n            file: null,\n            description: \"\",\n            content_string: \"\",\n            content: [],\n            city: []\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.createDrink = this.createDrink.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = (selected) => {\n        this.setState({\n            city: selected\n        })\n    };\n\n    async createDrink(){\n        this.setState({\n            error: \"\"\n        })\n\n        if(this.state.name.length <= 0 || this.state.name.length > 100){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        }\n\n        if(this.state.price <= 0 || this.state.profit <= 0){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        } \n\n        var cities = []\n\n        cities = this.state.city.map(selection => {\n            return selection.value;\n        })\n\n        var cont = [];\n        \n        if(this.state.content_string.length > 0){\n            if(this.state.content_string.includes(\",\")){\n                cont = this.state.content_string.split(\",\");\n            }\n            else{\n                cont.push(this.state.content_string)\n            }\n        }\n\n        const data = {\n            name: this.state.name,\n            category: this.state.category.length <= 0 ? this.props.categories[0].name : this.state.category,\n            unit: this.state.unit,\n            price: this.state.profit_price,\n            profit: this.state.profit,\n            image: this.state.image,\n            stock: this.state.stock,\n            description: this.state.description,\n            content: cont,\n            city: cities\n        }\n        \n        this.props.showLoading();\n\n        const response = await API.createDrink(data)\n        \n        this.props.hideLoading();\n        \n        if(response===\"error\"){\n            //show error message\n            this.setState({\n                error: \"Your drink could not be added at the moment. try again later\"\n            })\n            return;\n        }\n\n        if(response.data && response.data.response===\"created\"){\n            this.setState({\n                name: \"\",\n                category: \"Special Packages\",\n                unit: \"bottle\",\n                price: 0,\n                profit_price: 0,\n                image_uploaded: false,\n                stock: 0,\n                profit: 0,\n                image: null,\n                file: null,\n                description: \"\",\n                content_string: \"\",\n                content: [],\n                city: []\n            })\n\n            this.props.reloadDrinks();\n        }\n        else{\n            this.setState({\n                error: \"Your drink could not be added at the moment. try again later\"\n            })\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.categories.length){\n            this.setState({\n                category: this.props.categories[0].name\n            })\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n\n            var fd = new FormData();\n            \n            fd.append(\"image\", this.state.file, this.state.file.name);\n            \n            this.props.showLoading();\n\n            S3FileUpload\n                .uploadFile(this.state.file, config)\n                .then( data => { \n                    console.log(data) \n                })\n                .catch(err => { \n                    console.error(err)  \n                    //show error message\n                    this.setState({\n                        error: \"An error occurred uploading the image. Please check the network\"\n                    })\n                    return;\n                })\n\n            /*const response = await API.uploadDrinkImage(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    image: response.data.response,\n                    image_uploaded: true\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n            }*/\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        if(name===\"price\"){\n            if(value>0){\n                var new_value = parseInt(value) + ((this.state.profit / 100) * parseInt(value));\n            }\n\n            this.setState({\n                price: value,\n                profit_price: new_value\n            })\n        }\n        else if(name===\"profit\"){\n            var new_value = parseInt(this.state.price) + ((value / 100) * parseInt(this.state.price));\n\n            this.setState({\n                profit_price: new_value,\n                profit: value\n            })\n        }\n        else{\n            this.setState({\n                [name]: value\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showAddDrink}\n                    className=\"DrinkModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Add Drink</h4>\n                    <br/>\n                    <h5 className=\"bt-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\n                    <br/>\n                    { this.state.image_uploaded ? <h5 className=\"bt-green-text\">Image Successfully Uploaded</h5> : \"\" }\n\n                    <AddEditDrink handleChange={this.handleChange}  city={this.state.city} content={this.state.content} description={this.state.description} content_string={this.state.content_string} uploadImage={this.uploadImage} categories={this.props.categories} imageChanged={this.imageChanged} onFieldChanged={this.onFieldChanged} file={this.state.file} name={this.state.name} profit={this.state.profit} profit_price={this.state.profit_price} price={this.state.price} category={this.state.category} unit={this.state.unit} image={this.state.image} stock={this.state.stock}/>\n\n                    <button className=\"laser-inline green-bg bt-btn bt-inline\" style={btn_style_left} onClick={this.createDrink}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn bt-inline\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender admin/src/subcomponents/EditDrink.js",["607","608","609","610"],"import React, {Component} from 'react'\nimport AddEditDrink from './AddEditDrink';\nimport ReactModal from 'react-modal';\n\nimport * as API from '../api/Api';\n\nimport * as Utils from '../utils/Utils';\n\nconst btn_style_left = {\n    marginLeft: \"16px\",\n    marginRight: \"8px\"\n}\n\nconst btn_style_right = {\n    marginLeft: \"8px\",\n    marginRight: \"16px\"\n}\n \nReactModal.setAppElement('#main');\n\nexport default class EditDrink extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            name: \"\",\n            category: \"\",\n            unit: \"bottle\",\n            price: 0,\n            profit: 0,\n            profit_price:0,\n            image: null,\n            description: \"\",\n            content: [],\n            content_string:\"\",\n            stock: 0,\n            city: props.drink.city ? Utils.getCities(props.drink.city) : [],\n            file: null\n        }\n\n        this.onFieldChanged = this.onFieldChanged.bind(this);\n        this.imageChanged = this.imageChanged.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.editDrink = this.editDrink.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(){\n\n        var contents = \"\";\n        \n        if(this.props.drink.content.length > 0){\n            this.props.drink.content.map(con => {\n                contents+=con+\",\";\n            })\n        }\n\n        this.setState({\n            name: this.props.drink.name,\n            category: this.props.drink.category,\n            unit: this.props.drink.unit,\n            profit: this.props.drink.profit,\n            price: Utils.getTruePrice(this.props.drink.price, this.props.drink.profit),\n            profit_price: this.props.drink.price,\n            image: this.props.drink.image,\n            stock: this.props.drink.stock,\n            content: this.props.drink.content,\n            content_string: contents,\n            description: this.props.drink.description,\n            file: null,\n            category: this.props.categories[0].name\n        })\n    }\n\n    handleChange = (selected) => {\n        this.setState({\n            city: selected\n        })\n    };\n\n    async editDrink(){\n\n        this.setState({\n            error: \"\"\n        })\n\n        if(this.state.name.length <= 0 || this.state.name.length > 100){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n           return;\n        }\n\n        if(this.state.price <= 0 || this.state.profit <= 0){\n            this.setState({\n                error: \"Please complete all fields\"\n            })\n            return;\n        } \n\n        var cities = []\n\n        cities = this.state.city.map(selection => {\n            return selection.value;\n        })\n\n        var cont = [];\n\n        if(this.state.content_string.length > 0){\n            if(this.state.content_string.includes(\",\")){\n                cont = this.state.content_string.split(\",\");\n            }\n            else{\n                cont.push(this.state.content_string)\n            }\n        }\n\n        const data = {\n            _id: this.props.drink._id,\n            name: this.state.name,\n            category: this.state.category,\n            unit: this.state.unit,\n            profit: this.state.profit,\n            price: this.state.profit_price,\n            image: this.state.image,\n            stock: this.state.stock,\n            description: this.state.description,\n            city: cities,\n            content: cont\n        }\n        \n        const response = await API.editDrink(data)\n        \n        if(response===\"error\"){\n            //show error message\n            this.setState({\n                error: \"The drink could not be edited at the moment. try again later\"\n            })\n            return;\n        }\n\n        if(response.data && response.data.response===\"edited\"){\n            this.setState({\n                name: \"\",\n                category: \"\",\n                unit: \"\",\n                price: 0,\n                profit_price: 0,\n                profit: 0,\n                stock: 0,\n                image: null,\n                file: null,\n                description: \"\",\n                content_string: \"\",\n                city: this.props.city ? Utils.getCities(this.props.city) : [],\n                content: []\n            })\n\n            this.props.reloadDrinks();\n        }\n        else{\n            this.setState({\n                error: \"An error occurred updating the drink. Please check the network\"\n            })\n        }\n    }\n\n    imageChanged(e){\n        var file =  e.target.files[0]\n        \n        if(file){\n            if (!file.name.match(/\\.(png|jpg|jpeg|gif|svg)$/)) {\n                //file is not an image\n                this.setState({\n                    error: \"File is not a Zip File\"\n                })\n                return;\n            }\n            \n            if(file.size>512000){\n                //file is too large\n                this.setState({\n                    error: \"File is too large\"\n                })\n                return;\n            }\n    \n            this.setState({\n                file: file,\n                image: URL.createObjectURL(file),\n            });\n        }\n    }\n\n    async uploadImage(){\n        if(this.state.file!=null){\n            var fd = new FormData();\n            \n            fd.append(\"image\", this.state.file, this.state.file.name);\n\n            this.props.showLoading();\n            \n            const response = await API.uploadDrinkImage(fd);\n\n            this.props.hideLoading();\n\n            if(response==\"error\"){\n                //show error message\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n                return;\n            }\n\n            if(response && response.data && response.data.response){\n                this.setState({\n                    image: response.data.response\n                })   \n            }\n            else{\n                this.setState({\n                    error: \"An error occurred uploading the image. Please check the network\"\n                })\n            }\n        }\n    }\n\n    onFieldChanged(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        if(name===\"price\"){\n            if(value>0){\n                var new_value = parseInt(value) + ((this.state.profit / 100) * parseInt(value));\n            }\n\n            this.setState({\n                price: value,\n                profit_price: new_value\n            })\n        }\n        else if(name===\"profit\"){\n            var new_value = parseInt(this.state.price) + ((value / 100) * parseInt(this.state.price));\n\n            this.setState({\n                profit_price: new_value,\n                profit: value\n            })\n        }\n        else{\n            this.setState({\n                [name]: value\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ReactModal \n                    isOpen={this.props.showEditDrink}\n                    className=\"DrinkModal\"\n                    overlayClassName=\"Overlay\"\n                    contentLabel=\"Minimal Modal Example\">\n                    <h4 className=\"text-center\">Edit Drink</h4>\n                    <br/>\n                    <h5 className=\"bt-red-text\">{ this.state.error ? this.state.error : \"\" }</h5>\n                    <br/>\n\n                    <AddEditDrink handleChange={this.handleChange} content={this.state.content} description={this.state.description} content_string={this.state.content_string} uploadImage={this.uploadImage} categories={this.props.categories} imageChanged={this.imageChanged} onFieldChanged={this.onFieldChanged} file={this.state.file} name={this.state.name} profit={this.state.profit} price={this.state.price} profit_price={this.state.profit_price} category={this.state.category} unit={this.state.unit} image={this.state.image} stock={this.state.stock} city={this.state.city}/>\n\n                    <button className=\"laser-inline green-bg bt-btn\" style={btn_style_left} onClick={this.editDrink}>save</button>\n                    <button className=\"laser-inline grey-bg bt-btn\" style={btn_style_right} onClick={this.props.handleCloseModal}>cancel</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}","/Users/user/Bartender/bartender admin/src/subcomponents/Drink.js",["611"],"/Users/user/Bartender/bartender admin/src/subcomponents/ConfirmAction.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/Order.js",["612","613"],"/Users/user/Bartender/bartender admin/src/subcomponents/OrderItems.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/AssignAgent.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/ViewAgent.js",["614"],"/Users/user/Bartender/bartender admin/src/subcomponents/OrderStatus.js",["615"],"/Users/user/Bartender/bartender admin/src/subcomponents/User.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/Agent.js",["616"],"/Users/user/Bartender/bartender admin/src/subcomponents/AddAgent.js",["617","618"],"/Users/user/Bartender/bartender admin/src/subcomponents/EditAgent.js",["619","620"],"/Users/user/Bartender/bartender admin/src/subcomponents/Promocode.js",["621","622","623"],"/Users/user/Bartender/bartender admin/src/subcomponents/GeneratePromocodes.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/EditPromocode.js",[],"/Users/user/Bartender/bartender admin/src/utils/Utils.js",["624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639"],"export const getDate = (d) => {\n\n    let date = new Date(d);\n\n    let year = date.getFullYear();\n    let month = date.getMonth()+1;\n    let dt = date.getDate();\n\n    let hour = date.getHours();\n    let minute = date.getSeconds();\n\n    if (dt < 10) {\n        dt = '0' + dt;\n    }\n    if (month < 10) {\n        month = '0' + month;\n    }\n    \n    return dt+' - '+month+' - '+year +\" | \"+hour +\":\"+minute  ;\n}\n\nexport const sentenceCase = (str) => {\n    if ((str===null) || (str===''))\n         return false;\n    else\n     str = str.toString();\n  \n   return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n}\n\nexport const getAmount = (amount) => {\n    if(amount || amount==0){\n      var a = amount.toString();\n    \n      if(a.includes('.')){\n        let s = a.split(\".\")\n        a = s[0];\n      }\n\n      switch(a.length){\n        case 4:\n          return \"₦\"+a.slice(0,1) +\",\" +a.slice(1);\n        case 5:\n          return \"₦\"+a.slice(0,2) +\",\" +a.slice(2);\n        case 6:\n          return \"₦\"+a.slice(0,3) +\",\" +a.slice(3);\n        case 7:\n          return \"₦\"+a.slice(0,1) +\",\" +a.slice(1,4)+\",\"+a.slice(4);\n        case 8:\n          return \"₦\"+a.slice(0,2) +\",\" +a.slice(2,5)+\",\"+a.slice(5);\n        case 9:\n          return \"₦\"+a.slice(0,3) +\",\" +a.slice(3,6)+\",\"+a.slice(6);\n        default: \n          return \"₦\"+a;\n      }\n    }\n}\n\nexport const getTruePrice = (price, profit) => {\n  return Math.round(price / (1 + (profit / 100)));\n}\n\nexport const getMonth = (month) => {\n    switch(month){\n        case 1:\n        return \"January\";\n        break;\n        case 2:\n        return \"Febuary\";\n        break;\n        case 3:\n        return \"March\";\n        break;\n        case 4:\n        return \"April\";\n        break;\n        case 5:\n        return \"May\";\n        break;\n        case 6:\n        return \"June\";\n        break;\n        case 7:\n        return \"July\";\n        break;\n        case 8:\n        return \"August\";\n        break;\n        case 9:\n        return \"September\";\n        break;\n        case 10:\n        return \"October\";\n        break;\n        case 11:\n        return \"November\";\n        break;\n        case 12:\n        return \"December\";\n        break;\n    }\n}\n\nexport const cityOptions = [\n  { value: \"LAGOS\", label: \"Lagos\" },\n  { value: \"ACCRA\", label: \"Accra\" }\n];\n\nexport const getCities = (cities) => {\n     if(!cities || cities.length <= 0)\n        return null\n\n     var array = []\n\n     cities.map(city => {\n        cityOptions.forEach(cityOption => {\n          if(city == cityOption.value){\n              array.push(cityOption);\n          }\n        })\n     })\n\n     return array;\n}","/Users/user/Bartender/bartender admin/src/subcomponents/Option.js",[],"/Users/user/Bartender/bartender admin/src/subcomponents/AddEditDrink.js",["640"],"import React from 'react';\n\nimport logo1 from '../images/logo1.png';\n\nimport * as Utils from '../utils/Utils';\n\nimport { default as ReactSelect } from \"react-select\";\n\nimport Option from \"./Option\"\n\nconst image_text = \"Add Image with size <= 500 KB\"\n\nexport default function AddEditDrink(props){\n\n    return  <div className=\"bt-item\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-6\">\n                        <img className=\"bt-center\" id=\"image\" src={props.image == null ? logo1 : props.image} width=\"90\" height=\"90\"/>\n                    </div>\n                    <div className=\"col-md-6 col-sm-6\">\n                        <h6>{image_text}</h6>\n                        <input className=\"\" type=\"file\" onChange={props.imageChanged}/>\n                        <button className=\"laser-inline green-bg bt-btn\" onClick={props.uploadImage}>Upload Image</button>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Name</h6></label>\n                        <input autoComplete=\"off\" id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={props.name} onChange={props.onFieldChanged}  placeholder=\"Name\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"category\"><h6>Category</h6></label>\n                        <select className=\"form-control\" id=\"category\" name=\"category\" value={props.category} onChange={props.onFieldChanged}>\n                            {\n                                props.categories.map(cat => {\n                                    return <option key={cat._id}>{cat.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"unit\"><h6>Unit</h6></label>\n                        <select className=\"form-control\" id=\"unit\" name=\"unit\" value={props.unit} onChange={props.onFieldChanged}>\n                            <option>bottle</option>\n                            <option>carton</option>\n                            <option>crate</option>\n                            <option>item</option>\n                        </select>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Description</h6></label>\n                        <input autoComplete=\"off\" id=\"description\" type=\"text\" name=\"description\" className=\"form-control\" value={props.description} onChange={props.onFieldChanged}  placeholder=\"Description\"/>\n                    </div>\n                    <div className=\"col-md-8 col-sm-8\">\n                        <label htmlFor=\"profit\"><h6>Content (Ingredient's or recipe's)</h6></label>\n                        <input autoComplete=\"off\" id=\"content_string\" type=\"text\" name=\"content_string\" className=\"form-control\" value={props.content_string} onChange={props.onFieldChanged}  placeholder=\"seperate contents with a comma\"/>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Price</h6></label>\n                        <input autoComplete=\"off\" id=\"price\" type=\"number\" name=\"price\" className=\"form-control\" value={props.price} onChange={props.onFieldChanged}  placeholder=\"Price\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"profit\"><h6>Profit %</h6></label>\n                        <input autoComplete=\"off\" id=\"profit\" type=\"number\" name=\"profit\" className=\"form-control\" value={props.profit} onChange={props.onFieldChanged}  placeholder=\"Profit %\"/>\n                    </div>\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"price\"><h6>Price with profit</h6></label>\n                        <div className=\"bt-item-drink-profit shadow\">\n                            <h5>{Utils.getAmount(props.profit_price)}</h5>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4\">\n                        <label htmlFor=\"name\"><h6>Stock</h6></label>\n                        <input autoComplete=\"off\" id=\"stock\" type=\"number\" name=\"stock\" className=\"form-control\" value={props.stock} onChange={props.onFieldChanged}  placeholder=\"Stock\"/>\n                    </div>\n                    \n                    <div className=\"col-md-6 col-sm-6\">\n                        <label htmlFor=\"city\"><h6>City</h6></label>\n                        <ReactSelect\n                            options={Utils.cityOptions}\n                            isMulti\n                            closeMenuOnSelect={true}\n                            hideSelectedOptions={false}\n                            components={{\n                                Option\n                            }}\n                            onChange={props.handleChange}\n                            allowSelectAll={true}\n                            value={props.city}\n                            />\n                    </div>\n                </div>\n            </div>\n}","/Users/user/Bartender/bartender admin/src/subcomponents/AddEditAgent.js",["641","642"],"/Users/user/Bartender/bartender admin/src/config.js",[],{"ruleId":"643","severity":1,"message":"644","line":10,"column":5,"nodeType":"645","messageId":"646","endLine":10,"endColumn":9},{"ruleId":"643","severity":1,"message":"647","line":13,"column":5,"nodeType":"645","messageId":"646","endLine":13,"endColumn":15},{"ruleId":"648","replacedBy":"649"},{"ruleId":"650","replacedBy":"651"},{"ruleId":"643","severity":1,"message":"652","line":2,"column":46,"nodeType":"645","messageId":"646","endLine":2,"endColumn":54},{"ruleId":"643","severity":1,"message":"653","line":9,"column":8,"nodeType":"645","messageId":"646","endLine":9,"endColumn":13},{"ruleId":"643","severity":1,"message":"654","line":17,"column":8,"nodeType":"645","messageId":"646","endLine":17,"endColumn":12},{"ruleId":"643","severity":1,"message":"655","line":23,"column":8,"nodeType":"645","messageId":"646","endLine":23,"endColumn":16},{"ruleId":"643","severity":1,"message":"656","line":33,"column":10,"nodeType":"645","messageId":"646","endLine":33,"endColumn":23},{"ruleId":"657","severity":1,"message":"658","line":114,"column":17,"nodeType":"659","messageId":"660","endLine":125,"endColumn":18},{"ruleId":"661","severity":1,"message":"662","line":201,"column":8,"nodeType":"663","endLine":201,"endColumn":26,"suggestions":"664"},{"ruleId":"665","severity":1,"message":"666","line":218,"column":21,"nodeType":"667","messageId":"668","endLine":218,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":242,"column":20,"nodeType":"667","messageId":"668","endLine":242,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":266,"column":174,"nodeType":"671","endLine":266,"endColumn":216},{"ruleId":"643","severity":1,"message":"652","line":8,"column":5,"nodeType":"645","messageId":"646","endLine":8,"endColumn":13},{"ruleId":"665","severity":1,"message":"666","line":77,"column":20,"nodeType":"667","messageId":"668","endLine":77,"endColumn":22},{"ruleId":"672","severity":1,"message":"673","line":109,"column":33,"nodeType":"671","endLine":109,"endColumn":88},{"ruleId":"643","severity":1,"message":"674","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":16},{"ruleId":"643","severity":1,"message":"644","line":2,"column":18,"nodeType":"645","messageId":"646","endLine":2,"endColumn":22},{"ruleId":"643","severity":1,"message":"652","line":2,"column":24,"nodeType":"645","messageId":"646","endLine":2,"endColumn":32},{"ruleId":"675","severity":1,"message":"676","line":5,"column":5,"nodeType":"677","messageId":"678","endLine":7,"endColumn":6},{"ruleId":"672","severity":1,"message":"673","line":15,"column":29,"nodeType":"671","endLine":15,"endColumn":90},{"ruleId":"672","severity":1,"message":"673","line":18,"column":55,"nodeType":"671","endLine":18,"endColumn":109},{"ruleId":"672","severity":1,"message":"673","line":20,"column":55,"nodeType":"671","endLine":20,"endColumn":112},{"ruleId":"672","severity":1,"message":"673","line":22,"column":55,"nodeType":"671","endLine":22,"endColumn":109},{"ruleId":"672","severity":1,"message":"673","line":35,"column":118,"nodeType":"671","endLine":35,"endColumn":167},{"ruleId":"672","severity":1,"message":"673","line":36,"column":109,"nodeType":"671","endLine":36,"endColumn":156},{"ruleId":"643","severity":1,"message":"679","line":1,"column":8,"nodeType":"645","messageId":"646","endLine":1,"endColumn":13},{"ruleId":"643","severity":1,"message":"644","line":3,"column":10,"nodeType":"645","messageId":"646","endLine":3,"endColumn":14},{"ruleId":"665","severity":1,"message":"666","line":60,"column":20,"nodeType":"667","messageId":"668","endLine":60,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":102,"column":20,"nodeType":"667","messageId":"668","endLine":102,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":115,"column":21,"nodeType":"667","messageId":"668","endLine":115,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":132,"column":20,"nodeType":"667","messageId":"668","endLine":132,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":217,"column":171,"nodeType":"682","messageId":"683","endLine":217,"endColumn":193,"fix":"684"},{"ruleId":"680","severity":1,"message":"681","line":220,"column":209,"nodeType":"682","messageId":"683","endLine":220,"endColumn":231,"fix":"685"},{"ruleId":"643","severity":1,"message":"686","line":15,"column":26,"nodeType":"645","messageId":"646","endLine":15,"endColumn":35},{"ruleId":"643","severity":1,"message":"687","line":23,"column":7,"nodeType":"645","messageId":"646","endLine":23,"endColumn":12},{"ruleId":"643","severity":1,"message":"688","line":28,"column":7,"nodeType":"645","messageId":"646","endLine":28,"endColumn":16},{"ruleId":"665","severity":1,"message":"666","line":127,"column":20,"nodeType":"667","messageId":"668","endLine":127,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":176,"column":20,"nodeType":"667","messageId":"668","endLine":176,"endColumn":22},{"ruleId":"689","severity":1,"message":"690","line":187,"column":34,"nodeType":"691","messageId":"692","endLine":187,"endColumn":36},{"ruleId":"657","severity":1,"message":"658","line":230,"column":9,"nodeType":"659","messageId":"660","endLine":240,"endColumn":10},{"ruleId":"665","severity":1,"message":"666","line":266,"column":20,"nodeType":"667","messageId":"668","endLine":266,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":285,"column":20,"nodeType":"667","messageId":"668","endLine":285,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":300,"column":21,"nodeType":"667","messageId":"668","endLine":300,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":341,"column":20,"nodeType":"667","messageId":"668","endLine":341,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":392,"column":20,"nodeType":"667","messageId":"668","endLine":392,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":443,"column":20,"nodeType":"667","messageId":"668","endLine":443,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":491,"column":21,"nodeType":"667","messageId":"668","endLine":491,"endColumn":23},{"ruleId":"643","severity":1,"message":"687","line":15,"column":7,"nodeType":"645","messageId":"646","endLine":15,"endColumn":12},{"ruleId":"665","severity":1,"message":"666","line":57,"column":21,"nodeType":"667","messageId":"668","endLine":57,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":84,"column":21,"nodeType":"667","messageId":"668","endLine":84,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":58,"column":20,"nodeType":"667","messageId":"668","endLine":58,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":87,"column":20,"nodeType":"667","messageId":"668","endLine":87,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":142,"column":49,"nodeType":"682","messageId":"683","endLine":142,"endColumn":71,"fix":"693"},{"ruleId":"680","severity":1,"message":"681","line":143,"column":185,"nodeType":"682","messageId":"683","endLine":143,"endColumn":207,"fix":"694"},{"ruleId":"643","severity":1,"message":"695","line":14,"column":7,"nodeType":"645","messageId":"646","endLine":14,"endColumn":13},{"ruleId":"665","severity":1,"message":"666","line":38,"column":15,"nodeType":"667","messageId":"668","endLine":38,"endColumn":17},{"ruleId":"665","severity":1,"message":"666","line":52,"column":20,"nodeType":"667","messageId":"668","endLine":52,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":67,"column":21,"nodeType":"667","messageId":"668","endLine":67,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":82,"column":21,"nodeType":"667","messageId":"668","endLine":82,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":97,"column":21,"nodeType":"667","messageId":"668","endLine":97,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":112,"column":21,"nodeType":"667","messageId":"668","endLine":112,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":127,"column":21,"nodeType":"667","messageId":"668","endLine":127,"endColumn":23},{"ruleId":"672","severity":1,"message":"673","line":171,"column":41,"nodeType":"671","endLine":171,"endColumn":87},{"ruleId":"672","severity":1,"message":"673","line":180,"column":41,"nodeType":"671","endLine":180,"endColumn":87},{"ruleId":"672","severity":1,"message":"673","line":189,"column":41,"nodeType":"671","endLine":189,"endColumn":89},{"ruleId":"672","severity":1,"message":"673","line":198,"column":41,"nodeType":"671","endLine":198,"endColumn":87},{"ruleId":"672","severity":1,"message":"673","line":207,"column":41,"nodeType":"671","endLine":207,"endColumn":86},{"ruleId":"672","severity":1,"message":"673","line":216,"column":41,"nodeType":"671","endLine":216,"endColumn":86},{"ruleId":"665","severity":1,"message":"666","line":54,"column":20,"nodeType":"667","messageId":"668","endLine":54,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":96,"column":20,"nodeType":"667","messageId":"668","endLine":96,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":113,"column":20,"nodeType":"667","messageId":"668","endLine":113,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":178,"column":108,"nodeType":"682","messageId":"683","endLine":178,"endColumn":130,"fix":"696"},{"ruleId":"680","severity":1,"message":"681","line":181,"column":111,"nodeType":"682","messageId":"683","endLine":181,"endColumn":133,"fix":"697"},{"ruleId":"665","severity":1,"message":"666","line":80,"column":24,"nodeType":"667","messageId":"668","endLine":80,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":136,"column":20,"nodeType":"667","messageId":"668","endLine":136,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":163,"column":21,"nodeType":"667","messageId":"668","endLine":163,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":179,"column":20,"nodeType":"667","messageId":"668","endLine":179,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":205,"column":21,"nodeType":"667","messageId":"668","endLine":205,"endColumn":23},{"ruleId":"698","severity":1,"message":"699","line":254,"column":9,"nodeType":"700","messageId":"701","endLine":280,"endColumn":10},{"ruleId":"665","severity":1,"message":"666","line":258,"column":24,"nodeType":"667","messageId":"668","endLine":258,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":288,"column":20,"nodeType":"667","messageId":"668","endLine":288,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":59,"column":15,"nodeType":"667","messageId":"668","endLine":59,"endColumn":17},{"ruleId":"665","severity":1,"message":"666","line":74,"column":20,"nodeType":"667","messageId":"668","endLine":74,"endColumn":22},{"ruleId":"643","severity":1,"message":"647","line":4,"column":10,"nodeType":"645","messageId":"646","endLine":4,"endColumn":20},{"ruleId":"665","severity":1,"message":"666","line":39,"column":31,"nodeType":"667","messageId":"668","endLine":39,"endColumn":33},{"ruleId":"643","severity":1,"message":"702","line":17,"column":7,"nodeType":"645","messageId":"646","endLine":17,"endColumn":24},{"ruleId":"672","severity":1,"message":"673","line":13,"column":29,"nodeType":"671","endLine":13,"endColumn":181},{"ruleId":"703","severity":1,"message":"704","line":248,"column":17,"nodeType":"645","messageId":"705","endLine":248,"endColumn":26},{"ruleId":"672","severity":1,"message":"673","line":25,"column":33,"nodeType":"671","endLine":25,"endColumn":193},{"ruleId":"689","severity":1,"message":"690","line":52,"column":46,"nodeType":"691","messageId":"692","endLine":52,"endColumn":48},{"ruleId":"706","severity":1,"message":"707","line":71,"column":13,"nodeType":"708","messageId":"668","endLine":71,"endColumn":21},{"ruleId":"665","severity":1,"message":"666","line":195,"column":24,"nodeType":"667","messageId":"668","endLine":195,"endColumn":26},{"ruleId":"703","severity":1,"message":"704","line":232,"column":17,"nodeType":"645","messageId":"705","endLine":232,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":39,"column":47,"nodeType":"667","messageId":"668","endLine":39,"endColumn":49},{"ruleId":"665","severity":1,"message":"666","line":52,"column":47,"nodeType":"667","messageId":"668","endLine":52,"endColumn":49},{"ruleId":"672","severity":1,"message":"673","line":30,"column":33,"nodeType":"671","endLine":30,"endColumn":193},{"ruleId":"672","severity":1,"message":"673","line":174,"column":33,"nodeType":"671","endLine":174,"endColumn":161},{"ruleId":"643","severity":1,"message":"709","line":1,"column":15,"nodeType":"645","messageId":"646","endLine":1,"endColumn":24},{"ruleId":"672","severity":1,"message":"673","line":21,"column":29,"nodeType":"671","endLine":21,"endColumn":165},{"ruleId":"672","severity":1,"message":"673","line":11,"column":29,"nodeType":"671","endLine":11,"endColumn":189},{"ruleId":"665","severity":1,"message":"666","line":205,"column":24,"nodeType":"667","messageId":"668","endLine":205,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":237,"column":24,"nodeType":"667","messageId":"668","endLine":237,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":220,"column":24,"nodeType":"667","messageId":"668","endLine":220,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":243,"column":24,"nodeType":"667","messageId":"668","endLine":243,"endColumn":26},{"ruleId":"710","severity":1,"message":"711","line":3,"column":1,"nodeType":"712","endLine":26,"endColumn":2},{"ruleId":"665","severity":1,"message":"666","line":11,"column":48,"nodeType":"667","messageId":"668","endLine":11,"endColumn":50},{"ruleId":"665","severity":1,"message":"666","line":17,"column":52,"nodeType":"667","messageId":"668","endLine":17,"endColumn":54},{"ruleId":"665","severity":1,"message":"666","line":32,"column":24,"nodeType":"667","messageId":"668","endLine":32,"endColumn":26},{"ruleId":"657","severity":1,"message":"658","line":64,"column":5,"nodeType":"659","messageId":"660","endLine":101,"endColumn":6},{"ruleId":"698","severity":1,"message":"699","line":67,"column":9,"nodeType":"713","messageId":"701","endLine":67,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":70,"column":9,"nodeType":"713","messageId":"701","endLine":70,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":73,"column":9,"nodeType":"713","messageId":"701","endLine":73,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":76,"column":9,"nodeType":"713","messageId":"701","endLine":76,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":79,"column":9,"nodeType":"713","messageId":"701","endLine":79,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":82,"column":9,"nodeType":"713","messageId":"701","endLine":82,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":85,"column":9,"nodeType":"713","messageId":"701","endLine":85,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":88,"column":9,"nodeType":"713","messageId":"701","endLine":88,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":91,"column":9,"nodeType":"713","messageId":"701","endLine":91,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":94,"column":9,"nodeType":"713","messageId":"701","endLine":94,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":97,"column":9,"nodeType":"713","messageId":"701","endLine":97,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":100,"column":9,"nodeType":"713","messageId":"701","endLine":100,"endColumn":15},{"ruleId":"665","severity":1,"message":"666","line":115,"column":19,"nodeType":"667","messageId":"668","endLine":115,"endColumn":21},{"ruleId":"672","severity":1,"message":"673","line":22,"column":25,"nodeType":"671","endLine":22,"endColumn":135},{"ruleId":"672","severity":1,"message":"673","line":13,"column":25,"nodeType":"671","endLine":13,"endColumn":142},{"ruleId":"672","severity":1,"message":"673","line":25,"column":25,"nodeType":"671","endLine":25,"endColumn":163},{"ruleId":"643","severity":1,"message":"644","line":10,"column":5,"nodeType":"645","messageId":"646","endLine":10,"endColumn":9},{"ruleId":"643","severity":1,"message":"647","line":13,"column":5,"nodeType":"645","messageId":"646","endLine":13,"endColumn":15},{"ruleId":"648","replacedBy":"714"},{"ruleId":"650","replacedBy":"715"},{"ruleId":"643","severity":1,"message":"652","line":2,"column":46,"nodeType":"645","messageId":"646","endLine":2,"endColumn":54},{"ruleId":"643","severity":1,"message":"653","line":9,"column":8,"nodeType":"645","messageId":"646","endLine":9,"endColumn":13},{"ruleId":"643","severity":1,"message":"654","line":17,"column":8,"nodeType":"645","messageId":"646","endLine":17,"endColumn":12},{"ruleId":"643","severity":1,"message":"655","line":23,"column":8,"nodeType":"645","messageId":"646","endLine":23,"endColumn":16},{"ruleId":"643","severity":1,"message":"656","line":33,"column":10,"nodeType":"645","messageId":"646","endLine":33,"endColumn":23},{"ruleId":"657","severity":1,"message":"658","line":114,"column":17,"nodeType":"659","messageId":"660","endLine":125,"endColumn":18},{"ruleId":"661","severity":1,"message":"662","line":201,"column":8,"nodeType":"663","endLine":201,"endColumn":26,"suggestions":"716"},{"ruleId":"665","severity":1,"message":"666","line":218,"column":21,"nodeType":"667","messageId":"668","endLine":218,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":242,"column":20,"nodeType":"667","messageId":"668","endLine":242,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":266,"column":174,"nodeType":"671","endLine":266,"endColumn":216},{"ruleId":"643","severity":1,"message":"652","line":8,"column":5,"nodeType":"645","messageId":"646","endLine":8,"endColumn":13},{"ruleId":"665","severity":1,"message":"666","line":77,"column":20,"nodeType":"667","messageId":"668","endLine":77,"endColumn":22},{"ruleId":"672","severity":1,"message":"673","line":109,"column":33,"nodeType":"671","endLine":109,"endColumn":88},{"ruleId":"643","severity":1,"message":"674","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":16},{"ruleId":"643","severity":1,"message":"644","line":2,"column":18,"nodeType":"645","messageId":"646","endLine":2,"endColumn":22},{"ruleId":"643","severity":1,"message":"652","line":2,"column":24,"nodeType":"645","messageId":"646","endLine":2,"endColumn":32},{"ruleId":"675","severity":1,"message":"676","line":5,"column":5,"nodeType":"677","messageId":"678","endLine":7,"endColumn":6},{"ruleId":"672","severity":1,"message":"673","line":15,"column":29,"nodeType":"671","endLine":15,"endColumn":90},{"ruleId":"672","severity":1,"message":"673","line":18,"column":55,"nodeType":"671","endLine":18,"endColumn":109},{"ruleId":"672","severity":1,"message":"673","line":20,"column":55,"nodeType":"671","endLine":20,"endColumn":112},{"ruleId":"672","severity":1,"message":"673","line":22,"column":55,"nodeType":"671","endLine":22,"endColumn":109},{"ruleId":"672","severity":1,"message":"673","line":35,"column":118,"nodeType":"671","endLine":35,"endColumn":167},{"ruleId":"672","severity":1,"message":"673","line":36,"column":109,"nodeType":"671","endLine":36,"endColumn":156},{"ruleId":"643","severity":1,"message":"679","line":1,"column":8,"nodeType":"645","messageId":"646","endLine":1,"endColumn":13},{"ruleId":"665","severity":1,"message":"666","line":58,"column":20,"nodeType":"667","messageId":"668","endLine":58,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":87,"column":20,"nodeType":"667","messageId":"668","endLine":87,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":142,"column":49,"nodeType":"682","messageId":"683","endLine":142,"endColumn":71,"fix":"717"},{"ruleId":"680","severity":1,"message":"681","line":143,"column":185,"nodeType":"682","messageId":"683","endLine":143,"endColumn":207,"fix":"718"},{"ruleId":"643","severity":1,"message":"644","line":3,"column":10,"nodeType":"645","messageId":"646","endLine":3,"endColumn":14},{"ruleId":"665","severity":1,"message":"666","line":60,"column":20,"nodeType":"667","messageId":"668","endLine":60,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":102,"column":20,"nodeType":"667","messageId":"668","endLine":102,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":115,"column":21,"nodeType":"667","messageId":"668","endLine":115,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":132,"column":20,"nodeType":"667","messageId":"668","endLine":132,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":217,"column":171,"nodeType":"682","messageId":"683","endLine":217,"endColumn":193,"fix":"719"},{"ruleId":"680","severity":1,"message":"681","line":220,"column":209,"nodeType":"682","messageId":"683","endLine":220,"endColumn":231,"fix":"720"},{"ruleId":"643","severity":1,"message":"721","line":14,"column":8,"nodeType":"645","messageId":"646","endLine":14,"endColumn":14},{"ruleId":"643","severity":1,"message":"687","line":23,"column":7,"nodeType":"645","messageId":"646","endLine":23,"endColumn":12},{"ruleId":"643","severity":1,"message":"688","line":28,"column":7,"nodeType":"645","messageId":"646","endLine":28,"endColumn":16},{"ruleId":"665","severity":1,"message":"666","line":127,"column":20,"nodeType":"667","messageId":"668","endLine":127,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":176,"column":20,"nodeType":"667","messageId":"668","endLine":176,"endColumn":22},{"ruleId":"689","severity":1,"message":"690","line":187,"column":34,"nodeType":"691","messageId":"692","endLine":187,"endColumn":36},{"ruleId":"657","severity":1,"message":"658","line":230,"column":9,"nodeType":"659","messageId":"660","endLine":240,"endColumn":10},{"ruleId":"665","severity":1,"message":"666","line":266,"column":20,"nodeType":"667","messageId":"668","endLine":266,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":285,"column":20,"nodeType":"667","messageId":"668","endLine":285,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":300,"column":21,"nodeType":"667","messageId":"668","endLine":300,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":341,"column":20,"nodeType":"667","messageId":"668","endLine":341,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":392,"column":20,"nodeType":"667","messageId":"668","endLine":392,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":443,"column":20,"nodeType":"667","messageId":"668","endLine":443,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":491,"column":21,"nodeType":"667","messageId":"668","endLine":491,"endColumn":23},{"ruleId":"643","severity":1,"message":"687","line":15,"column":7,"nodeType":"645","messageId":"646","endLine":15,"endColumn":12},{"ruleId":"665","severity":1,"message":"666","line":57,"column":21,"nodeType":"667","messageId":"668","endLine":57,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":84,"column":21,"nodeType":"667","messageId":"668","endLine":84,"endColumn":23},{"ruleId":"643","severity":1,"message":"695","line":14,"column":7,"nodeType":"645","messageId":"646","endLine":14,"endColumn":13},{"ruleId":"665","severity":1,"message":"666","line":38,"column":15,"nodeType":"667","messageId":"668","endLine":38,"endColumn":17},{"ruleId":"665","severity":1,"message":"666","line":52,"column":20,"nodeType":"667","messageId":"668","endLine":52,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":67,"column":21,"nodeType":"667","messageId":"668","endLine":67,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":82,"column":21,"nodeType":"667","messageId":"668","endLine":82,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":97,"column":21,"nodeType":"667","messageId":"668","endLine":97,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":112,"column":21,"nodeType":"667","messageId":"668","endLine":112,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":127,"column":21,"nodeType":"667","messageId":"668","endLine":127,"endColumn":23},{"ruleId":"672","severity":1,"message":"673","line":171,"column":41,"nodeType":"671","endLine":171,"endColumn":87},{"ruleId":"672","severity":1,"message":"673","line":180,"column":41,"nodeType":"671","endLine":180,"endColumn":87},{"ruleId":"672","severity":1,"message":"673","line":189,"column":41,"nodeType":"671","endLine":189,"endColumn":89},{"ruleId":"672","severity":1,"message":"673","line":198,"column":41,"nodeType":"671","endLine":198,"endColumn":87},{"ruleId":"672","severity":1,"message":"673","line":207,"column":41,"nodeType":"671","endLine":207,"endColumn":86},{"ruleId":"672","severity":1,"message":"673","line":216,"column":41,"nodeType":"671","endLine":216,"endColumn":86},{"ruleId":"665","severity":1,"message":"666","line":54,"column":20,"nodeType":"667","messageId":"668","endLine":54,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":96,"column":20,"nodeType":"667","messageId":"668","endLine":96,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":113,"column":20,"nodeType":"667","messageId":"668","endLine":113,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":178,"column":108,"nodeType":"682","messageId":"683","endLine":178,"endColumn":130,"fix":"722"},{"ruleId":"680","severity":1,"message":"681","line":181,"column":111,"nodeType":"682","messageId":"683","endLine":181,"endColumn":133,"fix":"723"},{"ruleId":"665","severity":1,"message":"666","line":59,"column":15,"nodeType":"667","messageId":"668","endLine":59,"endColumn":17},{"ruleId":"665","severity":1,"message":"666","line":74,"column":20,"nodeType":"667","messageId":"668","endLine":74,"endColumn":22},{"ruleId":"643","severity":1,"message":"647","line":4,"column":10,"nodeType":"645","messageId":"646","endLine":4,"endColumn":20},{"ruleId":"665","severity":1,"message":"666","line":39,"column":31,"nodeType":"667","messageId":"668","endLine":39,"endColumn":33},{"ruleId":"665","severity":1,"message":"666","line":80,"column":24,"nodeType":"667","messageId":"668","endLine":80,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":125,"column":17,"nodeType":"667","messageId":"668","endLine":125,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":141,"column":20,"nodeType":"667","messageId":"668","endLine":141,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":168,"column":21,"nodeType":"667","messageId":"668","endLine":168,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":184,"column":20,"nodeType":"667","messageId":"668","endLine":184,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":210,"column":21,"nodeType":"667","messageId":"668","endLine":210,"endColumn":23},{"ruleId":"698","severity":1,"message":"699","line":259,"column":9,"nodeType":"700","messageId":"701","endLine":285,"endColumn":10},{"ruleId":"665","severity":1,"message":"666","line":263,"column":24,"nodeType":"667","messageId":"668","endLine":263,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":293,"column":20,"nodeType":"667","messageId":"668","endLine":293,"endColumn":22},{"ruleId":"643","severity":1,"message":"702","line":17,"column":7,"nodeType":"645","messageId":"646","endLine":17,"endColumn":24},{"ruleId":"643","severity":1,"message":"709","line":1,"column":15,"nodeType":"645","messageId":"646","endLine":1,"endColumn":24},{"ruleId":"672","severity":1,"message":"673","line":21,"column":29,"nodeType":"671","endLine":21,"endColumn":165},{"ruleId":"665","severity":1,"message":"666","line":126,"column":54,"nodeType":"667","messageId":"668","endLine":126,"endColumn":56},{"ruleId":"672","severity":1,"message":"673","line":177,"column":33,"nodeType":"671","endLine":177,"endColumn":154},{"ruleId":"665","severity":1,"message":"666","line":141,"column":54,"nodeType":"667","messageId":"668","endLine":141,"endColumn":56},{"ruleId":"672","severity":1,"message":"673","line":193,"column":33,"nodeType":"671","endLine":193,"endColumn":154},{"ruleId":"703","severity":1,"message":"704","line":255,"column":17,"nodeType":"645","messageId":"705","endLine":255,"endColumn":26},{"ruleId":"689","severity":1,"message":"690","line":53,"column":46,"nodeType":"691","messageId":"692","endLine":53,"endColumn":48},{"ruleId":"706","severity":1,"message":"707","line":71,"column":13,"nodeType":"708","messageId":"668","endLine":71,"endColumn":21},{"ruleId":"665","severity":1,"message":"666","line":207,"column":24,"nodeType":"667","messageId":"668","endLine":207,"endColumn":26},{"ruleId":"703","severity":1,"message":"704","line":244,"column":17,"nodeType":"645","messageId":"705","endLine":244,"endColumn":26},{"ruleId":"672","severity":1,"message":"673","line":13,"column":29,"nodeType":"671","endLine":13,"endColumn":181},{"ruleId":"665","severity":1,"message":"666","line":39,"column":47,"nodeType":"667","messageId":"668","endLine":39,"endColumn":49},{"ruleId":"665","severity":1,"message":"666","line":52,"column":47,"nodeType":"667","messageId":"668","endLine":52,"endColumn":49},{"ruleId":"672","severity":1,"message":"673","line":25,"column":33,"nodeType":"671","endLine":25,"endColumn":193},{"ruleId":"672","severity":1,"message":"673","line":30,"column":33,"nodeType":"671","endLine":30,"endColumn":193},{"ruleId":"672","severity":1,"message":"673","line":11,"column":29,"nodeType":"671","endLine":11,"endColumn":189},{"ruleId":"665","severity":1,"message":"666","line":205,"column":24,"nodeType":"667","messageId":"668","endLine":205,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":237,"column":24,"nodeType":"667","messageId":"668","endLine":237,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":220,"column":24,"nodeType":"667","messageId":"668","endLine":220,"endColumn":26},{"ruleId":"665","severity":1,"message":"666","line":243,"column":24,"nodeType":"667","messageId":"668","endLine":243,"endColumn":26},{"ruleId":"710","severity":1,"message":"711","line":3,"column":1,"nodeType":"712","endLine":26,"endColumn":2},{"ruleId":"665","severity":1,"message":"666","line":11,"column":48,"nodeType":"667","messageId":"668","endLine":11,"endColumn":50},{"ruleId":"665","severity":1,"message":"666","line":17,"column":52,"nodeType":"667","messageId":"668","endLine":17,"endColumn":54},{"ruleId":"665","severity":1,"message":"666","line":32,"column":24,"nodeType":"667","messageId":"668","endLine":32,"endColumn":26},{"ruleId":"657","severity":1,"message":"658","line":64,"column":5,"nodeType":"659","messageId":"660","endLine":101,"endColumn":6},{"ruleId":"698","severity":1,"message":"699","line":67,"column":9,"nodeType":"713","messageId":"701","endLine":67,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":70,"column":9,"nodeType":"713","messageId":"701","endLine":70,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":73,"column":9,"nodeType":"713","messageId":"701","endLine":73,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":76,"column":9,"nodeType":"713","messageId":"701","endLine":76,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":79,"column":9,"nodeType":"713","messageId":"701","endLine":79,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":82,"column":9,"nodeType":"713","messageId":"701","endLine":82,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":85,"column":9,"nodeType":"713","messageId":"701","endLine":85,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":88,"column":9,"nodeType":"713","messageId":"701","endLine":88,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":91,"column":9,"nodeType":"713","messageId":"701","endLine":91,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":94,"column":9,"nodeType":"713","messageId":"701","endLine":94,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":97,"column":9,"nodeType":"713","messageId":"701","endLine":97,"endColumn":15},{"ruleId":"698","severity":1,"message":"699","line":100,"column":9,"nodeType":"713","messageId":"701","endLine":100,"endColumn":15},{"ruleId":"689","severity":1,"message":"690","line":115,"column":22,"nodeType":"691","messageId":"692","endLine":115,"endColumn":24},{"ruleId":"665","severity":1,"message":"666","line":117,"column":19,"nodeType":"667","messageId":"668","endLine":117,"endColumn":21},{"ruleId":"672","severity":1,"message":"673","line":18,"column":25,"nodeType":"671","endLine":18,"endColumn":135},{"ruleId":"672","severity":1,"message":"673","line":13,"column":25,"nodeType":"671","endLine":13,"endColumn":142},{"ruleId":"672","severity":1,"message":"673","line":25,"column":25,"nodeType":"671","endLine":25,"endColumn":163},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","no-native-reassign",["724"],"no-negated-in-lhs",["725"],"'Redirect' is defined but never used.","'Login' is defined but never used.","'icon' is defined but never used.","'withAuth' is defined but never used.","'clearInterval' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'channels'. Either exclude it or remove the dependency array. Outer scope values like 'channels' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["726"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Switch' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'React' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property handleCloseModal.","MemberExpression","unexpectedWhitespace",{"range":"727","text":"728"},{"range":"729","text":"728"},"'usePubNub' is defined but never used.","'right' is assigned a value but never used.","'btn_style' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"730","text":"728"},{"range":"731","text":"728"},"'margin' is assigned a value but never used.",{"range":"732","text":"728"},{"range":"733","text":"728"},"no-unreachable","Unreachable code.","IfStatement","unreachableCode","'deleteCategoryUrl' is assigned a value but never used.","no-redeclare","'new_value' is already defined.","redeclared","no-dupe-keys","Duplicate key 'category'.","ObjectExpression","'Component' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","BreakStatement",["724"],["725"],["734"],{"range":"735","text":"728"},{"range":"736","text":"728"},{"range":"737","text":"728"},{"range":"738","text":"728"},"'PubNub' is defined but never used.",{"range":"739","text":"728"},{"range":"740","text":"728"},"no-global-assign","no-unsafe-negation",{"desc":"741","fix":"742"},[6137,6139],".",[6485,6487],[3627,3629],[3923,3925],[4743,4745],[4970,4972],{"desc":"741","fix":"743"},[3627,3629],[3923,3925],[6154,6156],[6502,6504],[4743,4745],[4970,4972],"Update the dependencies array to be: [pubnub]",{"range":"744","text":"745"},{"range":"746","text":"745"},[5600,5618],"[pubnub]",[5600,5618]]